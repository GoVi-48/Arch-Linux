{"id":121678,"xmlId":"manifold.ij","name":"Manifold","description":"<p>Manifold is a Java compiler plugin. Its features include:</p>\n<ul>\n  <li><a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-core-parent/manifold\"><em>Type-safe</em> Meta-programming</a></li>\n  <li><a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-ext\">Extension Methods</a></li>\n  <li><a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-props\">Properties</a></li>\n  <li><a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-ext#operator-overloading\">Operator Overloading</a></li>\n  <li><a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-ext#unit-expressions\">Unit Expressions</a></li>\n  <li><a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-templates\">A <em>Java</em> Template Engine</a></li>\n  <li><a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-preprocessor\">A Preprocessor</a></li>\n  <li>...and more</li>\n</ul>\n<p>All fully supported in <strong>Java 8 - 16</strong> with comprehensive IDE support in <strong>IntelliJ IDEA</strong> and <strong>Android Studio</strong>.\nSimply add Manifold to your existing project and begin taking advantage of it.</p>\n<blockquote>\n  <p><em><strong>New!</strong></em></p>\n  <strong>Properties for Java!</strong>\n  <pre><code>\n    <b>public interface</b> Book {\n      <b>@var</b> String title; // automatically builds private field &amp; accessors for you\n    }\n    // refer to it directly by name\n    book.title = \"Daisy\";     // calls setter\n    String name = book.title; // calls getter\n    book.title += \" chain\";   // calls getter &amp; setter\n  </code></pre>\n  <a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-props\">Learn more</a>.\n</blockquote>\n<h2><a>What can you do with Manifold?</a></h2>\n<h3><a></a><a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-core-parent/manifold\">Meta-programming</a></h3>\n<p>Use the framework to gain direct, type-safe access to <em>any</em> type of resource, such as\n<a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-graphql\"><strong>GraphQL</strong></a>,\n<a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-json\"><strong>JSON</strong></a>,\n<a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-xml\"><strong>XML</strong></a>,\n<a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-yaml\"><strong>YAML</strong></a>,\n<a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-csv\"><strong>CSV</strong></a>, and even\nother languages such as <a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-js\"><strong>JavaScript</strong></a>.\nRemove the code gen step in your build process. <a href=\"http://manifold.systems/images/graphql.mp4\">&nbsp;<strong>▶</strong>&nbsp;Check&nbsp;it&nbsp;out!</a></p>\n<p><strong>GraphQL:</strong> Use types defined in .graphql files <em>directly</em>, no code gen steps! Make GraphQL changes and immediately use\nthem with code completion.</p>\n<pre><code>var query = MovieQuery.builder(Action).build();\nvar result = query.request(\"http://com.example/graphql\").post();\nvar actionMovies = result.getMovies();\nfor (var movie : actionMovies) {\n  out.println(\n    \"Title: \" + movie.getTitle() + \"\\n\" +\n    \"Genre: \" + movie.getGenre() + \"\\n\" +\n    \"Year: \" + movie.getReleaseDate().getYear() + \"\\n\");\n}\n</code></pre>\n<p><strong>JSON:</strong> Use .json schema files directly and type-safely, no code gen steps! Find usages of .json properties in your\nJava code.</p>\n<pre><code>// From User.json\nUser user = User.builder(\"myid\", \"mypassword\", \"Scott\")\n  .withGender(male)\n  .withDob(LocalDate.of(1987, 6, 15))\n  .build();\nUser.request(\"http://api.example.com/users\").postOne(user);\n</code></pre>\n<h3><a></a><a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-ext\">Extension Methods</a></h3>\n<p>Add your own methods to existing Java classes, even <em>String</em>, <em>List</em>, and <em>File</em>. Eliminate boilerplate code.\n<a href=\"http://manifold.systems/images/ExtensionMethod.mp4\">&nbsp;<strong>▶</strong>&nbsp;Check&nbsp;it&nbsp;out!</a></p>\n<pre><code>String greeting = \"hello\";\ngreeting.myMethod(); // Add your own methods to String!\n</code></pre>\n<h3><a></a><a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-ext#operator-overloading\">Operator Overloading</a></h3>\n<p>Implement <em>operator</em> methods on any type to directly support arithmetic, relational, and unit operators.</p>\n<pre><code>// BigDecimal expressions\nif (bigDec1 &gt; bigDec2) {\n  BigDecimal result = bigDec1 + bigDec2;\n  ...\n}\n// Implement operators for any type\nMyType value = myType1 + myType2;\n</code></pre>\n<h3><a></a><a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-ext#unit-expressions\">Unit Expressions</a></h3>\n<p>Unit or <em>binding</em> operations are unique to the Manifold framework. They provide a powerfully concise syntax and can be\napplied to a wide range of applications.</p>\n<pre><code>import static manifold.science.util.UnitConstants.*; // kg, m, s, ft, etc\n...\nLength distance = 100 mph * 3 hr;\nForce f = 5.2 kg m/s/s; // same as 5.2 N\nMass infant = 9 lb + 8.71 oz;\n</code></pre>\n<h3><a></a><a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-collections#ranges\">Ranges</a></h3>\n<p>Easily work with the <em>Range</em> API using <a>unit expressions</a>.\nSimply import the <em>RangeFun</em> constants to create ranges.</p>\n<pre><code>// imports the `to`, `step`, and other \"binding\" constants\nimport static manifold.collections.api.range.RangeFun.*;\n...\nfor (int i: 1 to 5) {\n  out.println(i);\n}\n\nfor (Mass m: 0kg to 10kg step 22r unit g) {\n  out.println(m);\n}\n</code></pre>\n<h3><a></a><a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-science\">Science</a></h3>\n<p>Use the <a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-science\">manifold-science</a>\nframework to type-safely incorporate units and precise measurements into your applications.</p>\n<pre><code>import static manifold.science.util.UnitConstants.*; // kg, m, s, ft, etc.\n...\nVelocity rate = 65mph;\nTime time = 1min + 3.7sec;\nLength distance = rate * time;\n</code></pre>\n<h3><a></a><a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-preprocessor\">Preprocessor</a></h3>\n<p>Use familiar directives such as <strong>#define</strong> and <strong>#if</strong> to conditionally compile your Java projects. The preprocessor offers\na simple and convenient way to support multiple build targets with a single codebase. <a href=\"http://manifold.systems/images/preprocessor.mp4\">&nbsp;<strong>▶</strong>&nbsp;Check&nbsp;it&nbsp;out!</a></p>\n<pre><code>#if JAVA_8_OR_LATER\n  @Override\n  public void setTime(LocalDateTime time) {...)\n#else\n  @Override\n  public void setTime(Calendar time) {...}\n#endif\n</code></pre>\n<h3><a></a><a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-ext#structural-interfaces-via-structural\">Structural Typing</a></h3>\n<p>Unify disparate APIs. Bridge software components you do not control. Access maps through type-safe interfaces. <a href=\"http://manifold.systems/images/structural%20typing.mp4\">&nbsp;<strong>▶</strong>&nbsp;Check&nbsp;it&nbsp;out!</a></p>\n<pre><code>Map&lt;String, Object&gt; map = new HashMap&lt;&gt;();\nMyThingInterface thing = (MyThingInterface) map; // O_o\nthing.setFoo(new Foo());\nFoo foo = thing.getFoo();\nout.println(thing.getClass()); // prints \"java.util.HashMap\"\n</code></pre>\n<h3><a></a><a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-ext#type-safe-reflection-via-jailbreak\">Type-safe Reflection</a></h3>\n<p>Access private features with <b>@Jailbreak</b> to avoid the drudgery and vulnerability of Java reflection. <a href=\"http://manifold.systems/images/jailbreak.mp4\">&nbsp;<strong>▶</strong>&nbsp;Check&nbsp;it&nbsp;out!</a></p>\n<pre><code>@Jailbreak Foo foo = new Foo();\n// Direct, *type-safe* access to *all* foo's members\nfoo.privateMethod(x, y, z);\nfoo.privateField = value;\n</code></pre>\n<h3><a></a><a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-exceptions\">Checked Exception Handling</a></h3>\n<p>You now have an option to make checked exceptions behave like unchecked exceptions!  No more unintended exception\nswallowing. No more <em>try</em>/<em>catch</em>/<em>wrap</em>/<em>rethrow</em> boilerplate!</p>\n<pre><code>List&lt;String&gt; strings = ...;\nList&lt;URL&gt; urls = list\n  .map(URL::new) // No need to handle the MalformedURLException!\n  .collect(Collectors.toList());\n</code></pre>\n<h3><a></a><a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-strings\">String Templates</a></h3>\n<p>Embed variables and expressions in String literals, no more clunky string concat! <a href=\"http://manifold.systems/images/string_interpolation.mp4\">&nbsp;<strong>▶</strong>&nbsp;Check&nbsp;it&nbsp;out!</a></p>\n<pre><code>int hour = 15;\n// Simple variable access with '$'\nString result = \"The hour is $hour\"; // Yes!!!\n// Use expressions with '${}'\nresult = \"It is ${hour &gt; 12 ? hour-12 : hour} o'clock\";\n</code></pre>\n<h3><a></a><a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-templates\">A <em>Java</em> Template Engine</a></h3>\n<p>Author template files with the full expressive power of Java, use your templates directly in your code as types.\nSupports type-safe inclusion of other templates, shared layouts, and more. <a href=\"http://manifold.systems/images/mantl.mp4\">&nbsp;<strong>▶</strong>&nbsp;Check&nbsp;it&nbsp;out!</a></p>\n<pre><code>List&lt;User&gt; users = ...;\nString content = abc.example.UserSample.render(users);\n</code></pre>\n<p>A template file <em>abc/example/UserSample.html.mtl</em></p>\n<pre><code>&lt;%@ import java.util.List %&gt;\n&lt;%@ import com.example.User %&gt;\n&lt;%@ params(List&lt;User&gt; users) %&gt;\n&lt;html lang=\"en\"&gt;\n&lt;body&gt;\n&lt;% users.stream()\n   .filter(user -&gt; user.getDateOfBirth() != null)\n   .forEach(user -&gt; { %&gt;\n    User: ${user.getName()} &lt;br&gt;\n    DOB: ${user.getDateOfBirth()} &lt;br&gt;\n&lt;% }); %&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<h3><a></a><a href=\"http://manifold.systems/docs.html#ide--intellij-idea\">IDE Support</a></h3>\n<p>Use the <a href=\"https://plugins.jetbrains.com/plugin/10057-manifold\">Manifold plugin</a> to fully leverage\nManifold with <strong>IntelliJ IDEA</strong> and <strong>Android Studio</strong>. The plugin provides comprehensive support for Manifold including code\ncompletion, navigation, usage searching, refactoring, incremental compilation, hotswap debugging, full-featured\ntemplate editing, integrated preprocessor, and more.</p>\n<p><img src=\"http://manifold.systems/images/ManifoldPlugin.png\" alt=\"manifold ij plugin\" width=\"60%\" height=\"60%\"></p>\n<h3><a></a><a href=\"http://manifold.systems/projects.html\">Projects</a></h3>\n<p>The Manifold project consists of the core Manifold framework and a collection of sub-projects implementing SPIs provided\nby the core framework. Each project consists of one or more <strong>dependencies</strong> you can easily add to your project:</p>\n<p><a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-core-parent/manifold\">Manifold : <em>Core</em></a><br></p>\n<p><a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-ext\">Manifold : <em>Java Extensions</em></a><br></p>\n<p><a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-props\">Manifold : <em>Java Properties</em></a><br></p>\n<p><a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-graphql\">Manifold : <em>GraphQL</em></a><br>\n<a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-json\">Manifold : <em>JSON</em></a><br>\n<a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-xml\">Manifold : <em>XML</em></a><br>\n<a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-yaml\">Manifold : <em>YAML</em></a><br>\n<a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-csv\">Manifold : <em>CSV</em></a><br>\n<a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-properties\">Manifold : <em>Properties</em></a><br>\n<a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-image\">Manifold : <em>Image</em></a><br>\n<a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-darkj\">Manifold : <em>Dark Java</em></a><br>\n<a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-js\">Manifold : <em>JavaScript</em></a><br></p>\n<p><a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-templates\">Manifold : <em>Java Templates</em></a><br></p>\n<p><a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-strings\">Manifold : <em>String Interpolation</em></a><br>\n<a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-exceptions\">Manifold : <em>(Un)checked Exceptions</em></a><br></p>\n<p><a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-preprocessor\">Manifold : <em>Preprocessor</em></a><br></p>\n<p><a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-science\">Manifold : <em>Science</em></a><br></p>\n<p><a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-collections\">Manifold : <em>Collections</em></a><br>\n<a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-io\">Manifold : <em>I/0</em></a><br>\n<a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-text\">Manifold : <em>Text</em></a><br></p>\n<blockquote>\n  <p>Experiment with sample projects:<br></p>\n  <ul>\n    <li><a href=\"https://github.com/manifold-systems/manifold-sample-project\">Manifold : <em>Sample App</em></a><br></li>\n    <li><a href=\"https://github.com/manifold-systems/manifold-sample-graphql-app\">Manifold : <em>Sample GraphQL App</em></a><br></li>\n    <li><a href=\"https://github.com/manifold-systems/manifold-sample-rest-api\">Manifold : <em>Sample REST API App</em></a><br></li>\n    <li><a href=\"https://github.com/manifold-systems/manifold-sample-web-app\">Manifold : <em>Sample Web App</em></a></li>\n    <li><a href=\"https://github.com/manifold-systems/manifold-simple-gradle-project\">Manifold : <em>Gradle Example Project</em></a></li>\n    <li><a href=\"https://github.com/manifold-systems/manifold-sample-kotlin-app\">Manifold : <em>Sample Kotlin App</em></a></li>\n  </ul>\n</blockquote>\n<h3><a></a><a href=\"https://join.slack.com/t/manifold-group/shared_invite/zt-e0bq8xtu-93ASQa~a8qe0KDhOoD6Bgg\">Forum</a></h3>\n<p>Join our <a href=\"https://join.slack.com/t/manifold-group/shared_invite/zt-e0bq8xtu-93ASQa~a8qe0KDhOoD6Bgg\">Slack Group</a> to start\na discussion, ask questions, provide feedback, etc. Someone is usually there to help.</p>\n<h3><a></a><a href=\"http://manifold.systems/docs.html\">Learn More</a></h3>","organization":"Manifold Systems","tags":["Tools integration","Paid"],"vendor":"Manifold Systems","version":"2020.3.41","notes":"\n    \n<h3>Fixes &amp; Features:</h3>\n<h4>\n<a href=\"https://github.com/manifold-systems/manifold/issues/276\">#276</a>: manifold-graphql: support a built-in \"JSON\" scalar\n<br>\n<a href=\"https://github.com/manifold-systems/manifold/issues/273\">#273</a>: IJ plugin: revise logic for protected property access\n<br>\n<a href=\"https://github.com/manifold-systems/manifold/issues/270\">#270</a>: don't pollute compiler output with warnings from generated code, particularly relevant with `-Xlint:all` usage\n<br>\n<a href=\"https://github.com/manifold-systems/manifold/issues/268\">#268</a>: manifold-strings: provide javac command line option to exclude simple `$foo` syntax from processing while still allowing `${foo}`\n<br>\n<a href=\"https://github.com/manifold-systems/manifold/issues/173\">#173</a>: Fix race condition\n<br>\n<a href=\"https://github.com/manifold-systems/manifold/issues/255\">#255</a>: Fix issues with JDK 16 compatibility and manifold-props\n<br>\n<a href=\"https://github.com/manifold-systems/manifold/issues/254\">#254</a>: Inferred property silently shadows local captured reference from anonymous context\n<br>\n<a href=\"https://github.com/manifold-systems/manifold/issues/253\">#253</a>: using manifold-props with AWT/Swing app, cannot find symbols in sun.awt.util\n<br>\n<a href=\"https://github.com/manifold-systems/manifold/issues/251\">#251</a>: prevent \"error: Xxx is not a repeatable annotation type\" esp. jetbrains NotNull, Nullable\n<br>\n<a href=\"https://github.com/manifold-systems/manifold/issues/248\">#248</a>: GraphQL: improve support for custom scalar types\n<br>\n<a href=\"https://github.com/manifold-systems/manifold/issues/243\">#243</a>: GraphQL: provide type-safe access to result data from GqlRequestException\n<br>\n<a href=\"https://github.com/manifold-systems/manifold/issues/242\">#242</a>: Properties language support for Java (@var, @val, @set)\n<br>\n<a href=\"https://github.com/manifold-systems/manifold/issues/241\">#241</a>: GraphQL: add simple Config API to manage system-level configuration options, RemoveNullConstraintValues added\n<br>\n<a href=\"https://github.com/manifold-systems/manifold/issues/240\">#240</a>: support structural interfaces dynamically without having `manifold-ext` dependency at runtime\n<br>\n<a href=\"https://github.com/manifold-systems/manifold/issues/239\">#239</a>: don't insert bootstrap in interfaces\n<br>\n<a href=\"https://github.com/manifold-systems/manifold/issues/238\">#238</a>: Support Java 16\n<br>\n<a href=\"https://github.com/manifold-systems/manifold/issues/237\">#237</a>: issue a compiler warning when an extension method conflicts with an extended class or another extension\n<br>\n<a href=\"https://github.com/manifold-systems/manifold/issues/236\">#236</a>: handle case where Gradle uses a DelegatingJavaFileManager\n<br>\n<a href=\"https://github.com/manifold-systems/manifold/issues/235\">#235</a>: GraphQL: report the duplication error directly as an error in the .gql file\n<br>\n<a href=\"https://github.com/manifold-systems/manifold/issues/230\">#230</a>: JEP 305 ('Pattern Matching for instanceof') IJ plugin support\n<br>\n<a href=\"https://github.com/manifold-systems/manifold/issues/229\">#229</a>: Add support for simpler Map creation using `mapOf` extension method with new `and` binder expressions\n<br>\n<a href=\"https://github.com/manifold-systems/manifold/issues/228\">#228</a>: java.lang.IllegalArgumentException: URI has an authority component at startup\n<br>\n<a href=\"https://github.com/manifold-systems/manifold/issues/227\">#227</a>: Fix warnings where a variable referenced exclusively in string interpolation was marked as \"never used\"\n<br>\n<a href=\"https://github.com/manifold-systems/manifold/issues/126\">#126</a>: Implement additional operator overloading for index/subscript operator, compound assignment operators, and increment/decrement operators\n<br>\n<a href=\"https://github.com/manifold-systems/manifold/issues/223\">#223</a>: IntelliJ plugin: account for IntelliJ's internal Array type as a pseudo generic type\n<br>\n<a href=\"https://github.com/manifold-systems/manifold/issues/222\">#222</a>: Compiler: Fatal error processing with Manifold type processor: manifold.ext.ExtensionManifold on type: _temp_._Manifold_Temp_Main_\n<br>\n<a href=\"https://github.com/manifold-systems/manifold/issues/208\">#208</a>: `withBearerAuthorization` does not populate correct Authorization header value\n<br>\n<a href=\"https://github.com/manifold-systems/manifold/issues/209\">#209</a>: Patched classes via --patch-module are ignored\n<br>\n<a href=\"https://github.com/manifold-systems/manifold/issues/212\">#212</a>: Ensure annotator runs in read action\n<br>\n<a href=\"https://github.com/manifold-systems/manifold/issues/213\">#213</a>: Line numbers are wrong for javac reported errors following preprocessor directives\n<br>\n<a href=\"https://github.com/manifold-systems/manifold/issues/214\">#214</a>: manifold-graphql needs to make its manifold-strings dependency `optional`\n<br>\n<a href=\"https://github.com/manifold-systems/manifold/issues/215\">#215</a>: Runtime bootstrap should not open compiler jdk module (Java 9+)\n<br>\n<a href=\"https://github.com/manifold-systems/manifold/issues/216\">#216</a>: Manifold dependencies declared with `provided` or `compileOnly` should instead be used exclusively in the `processorPath`\n<br>\nSupport for <a href=\"https://github.com/manifold-systems/manifold/tree/master/manifold-deps-parent/manifold-ext#extending-arrays\">Array Extensions</a>.\n<br>\n<a href=\"https://github.com/manifold-systems/manifold/issues/205\">#205</a>: Improve support for @Self, Fix check for already bootstrapped class\n<br>\nManifold supports <b>Android Studio</b>!\n<br>\nManifold supports <b>Kotlin</b>!\n<br>\n<a href=\"https://github.com/manifold-systems/manifold/issues/181\">#181</a>: Core: Separate Manifold into compile-time and runtime dependencies, toward support for Android\n<br>\n<a href=\"https://github.com/manifold-systems/manifold/issues/186\">#186</a>: GraphQL &amp; JSON: Modify GraphQL and JSON APIs to work better with other JVM languages such as Kotlin\n<br>\n<a href=\"https://github.com/manifold-systems/manifold/issues/192\">#192</a>: Plugin: Fix project context menu behavior when multiple items are selected\n<br>\n<a href=\"https://github.com/manifold-systems/manifold/issues/193\">#193</a>: Core: Remove runtime requirement for manifold-rt for projects not using extensions\n<br>\n<a href=\"https://github.com/manifold-systems/manifold/issues/194\">#194</a>: Core: Enable comprehensive Java/Manifold interop with Manifold-enabled languages in a Java 9+ modular build\n<br>\nOther minor fixes and improvements.\n</h4>\n    \n  ","dependencies":["com.intellij.modules.java"],"since":"203.0","until":"203.*","sourceCodeUrl":"https://github.com/manifold-systems","size":1796142,"productCode":"PMANIFOLD"}
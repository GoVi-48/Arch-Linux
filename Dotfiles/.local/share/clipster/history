{"PRIMARY": ["func=lambda: subprocess.getoutput('~/.config/qtile/scripts/notifications.sh'),\n", "    func=lambda: subprocess.getoutput('~/.config/qtile/scripts/notifications.sh'),\n", "GenPollText", "                widget.GenPollText(font='Noto Color Emoji',\n", "                func=lambda: subprocess.getoutput('~/.config/qtile/scripts/notifications.sh'),\n", "                    update_interval=180),\n", "font='Noto Color Emoji',\n                    func=lambda: subprocess.getoutput('~/.config/qtile/scripts/notifications.sh'),\n\n                widget.GenPollText(font='Noto Color Emoji',\n                    func=lambda: subprocess.getoutput('~/.config/qtile/scripts/email.sh'),\n                    update_interval=180),\n\n\n                widget.Spacer(length=bar.STRETCH),\n\n                widget.Image(filename='~/.local/share/icons/GoVi_gtk-Icons/apps/64/arrow_down.png'),\n                widget.Net(format='{down}/s', interface='enp3s0'),\n\n                widget.Image(filename='~/.local/share/icons/GoVi_gtk-Icons/apps/64/arrow_up.png'),\n                widget.Net(format='{up}/s ', interface='enp3s0'),\n\n                widget.ThermalSensor(tag_sensor='Package id 0', foreground='#287BDE'),\n\n                widget.GenPollText(func=gpu_temp, update_interval=1, foreground='#27AE60'),\n\n                widget.GenPollText(func=mb_temp, update_interval=1, foreground='#F6FA93'),\n\n                widget.Volume(update_interval=0.2, emoji=True),\n                widget.Volume(update_interval=0.2),\n\n                widget.Image(filename='~/.local/share/icons/GoVi_gtk-Icons/apps/64/calendar.png'),\n                widget.Clock(format='%a %d/%m/%Y ')", "update_interval", "                                   update_interval=180),\n", "    update_interval=180),\n", "    echo \"$fg[green]9\"\n", "yellow", "green", "oto Color Emoji", "length", "                widget.Spacer(length=20),\n", "widget.Image(filename='~/.local/share/icons/GoVi_gtk-Icons/apps/64/power.png',\n                             mouse_callbacks={'Button1': lambda qtile: qtile.cmd_spawn('kill -9 -1')}),\n\n                widget.Spacer(length=10),\n\n                widget.TextBox(font='GoVi_Icons', text='2'),\n                widget.GenPollText(func=lambda: subprocess.getoutput('df -h / --o=avail | awk \"NR>1\" | tr -d \" \"'),\n                                   update_interval=1),\n\n                widget.Spacer(length=10),\n\n                widget.TextBox(font='GoVi_Icons', text='H'),\n                widget.GenPollText(func=lambda: subprocess.getoutput('df -h /home --o=avail | awk \"NR>1\" | tr -d \" \"'),\n                                   update_interval=1),\n\n                widget.Spacer(length=10),\n\n                widget.TextBox(text='/Datos:'),\n                widget.GenPollText(func=lambda: subprocess.getoutput('df -h /Datos --o=avail | awk \"NR>1\" | tr -d \" \"'),\n                                   update_interval=1),\n\n                widget.Spacer(length=10),\n\n                widget.TextBox(text='/Media:'),\n                widget.GenPollText(\n                    func=lambda: subprocess.getoutput('df -h /Media --o=avail | awk \"NR>1\" | tr -d \" \"'),\n                    update_interval=1),\n\n                widget.Spacer(length=20),\n\n                widget.GenPollText(font='GoVi_Icons',\n                    func=lambda: subprocess.getoutput('~/.config/qtile/scripts/notifications.sh'),\n                    update_interval=1),\n\n\n\n                widget.GenPollText(font='Noto Color Emoji',\n                    func=lambda: subprocess.getoutput('~/.config/qtile/scripts/email.sh'),\n                    update_interval=180),\n\n\n                widget.Spacer(length=bar.STRETCH),\n\n                widget.Image(filename='~/.local/share/icons/GoVi_gtk-Icons/apps/64/arrow_down.png'),\n                widget.Net(format='{down}/s', interface='enp3s0'),\n\n                widget.Image(filename='~/.local/share/icons/GoVi_gtk-Icons/apps/64/arrow_up.png'),\n                widget.Net(format='{up}/s ', interface='enp3s0'),\n\n                widget.ThermalSensor(tag_sensor='Package id 0', foreground='#287BDE'),\n\n                widget.GenPollText(func=gpu_temp, update_interval=1, foreground='#27AE60'),\n\n                widget.GenPollText(func=mb_temp, update_interval=1, foreground='#F6FA93'),\n\n                widget.Volume(update_interval=0.2, emoji=True),\n                widget.Volume(update_interval=0.2),\n\n                widget.Image(filename='~/.local/share/icons/GoVi_gtk-Icons/apps/64/calendar.png'),\n                widget.Clock(format='%a %d/%m/%Y '),", "20", "alias grep=\"grep --color=auto\"\n", "[yellow]", "\\[\\e[0;31m\\][\\[\\e[1;33m\\]\\u\\[\\e[1;37m\\]@\\[\\e[1;32m\\]\\h\\[\\e[1;37m\\]:\\[\\e[1;34m\\]\\w\\[\\e[0;31m\\]]\\[\\e[1;37m\\]$ \\[\\e[m\\]", "[\\e[0;31m\\]", "[red]", "echo \"$fg[\\e[0;31m\\]9\"", "$fg", "echo \"[\\e[0;31m\\]9\"", "echo -e \"[\\e[0;31m\\]9\"", "    echo -e \"\\e[0;31m\\9\"\n", "0", "    echo -e \"\\e[0;31m9\"\n", "31m9", "    echo \"\\e[0;31m9\"\n", " -e", "echo \"\\e[0;31m9\"", "1", "#export PS1=\"\\[\\e[0;31m\\][\\[\\e[1;33m\\]\\u\\[\\e[1;37m\\]@\\[\\e[1;32m\\]\\h\\[\\e[1;37m\\]:\\[\\e[1;34m\\]\\w\\[\\e[0;31m\\]]\\[\\e[1;37m\\]$ \\[\\e[m\\]\"\n", "shell=True, ", " text=True", "lambda: subprocess.call('~/.config/qtile/scripts/notifications.sh'),\n                    shell=True, text=True,", "root = subprocess.getoutput('df -h / --output=avail | awk \"NR>1\" \"$PGLIST\" | tr -d \" \"')\n    print(root, end=' '),", "lambda:", " = ", "    print(t + '\u00baC', end=' '),\n", "        print(t + '\u00baC', end=' '),\n", "sdd_free_root", "+ '\u00baC'", "call", "def email():\n    e = subprocess.run('~/.config/qtile/scripts/notifications.sh',\n    shell=True, text=True,)\n    print(e, end=' '),", "email()", "print(e, end=' '),", "print", "print(e, end=' '),\n", "    print(e, end=' '),\n", "stro", "stroutput.", "capture_output", ", text=True", " 1", "tput setaf 1`", "`tput setaf 1`", "\\e[0;33m", "9", "\"`", "tput setaf 1", "('tput setaf 1' 9)", " echo $\"('tput setaf 1' 9)\"", "\"", "echo $('tput setaf 1' 9)", "\\e[0;31m9", "$('tput setaf 1' 9)", "\ud83d\udd14", "def email():\n    e = subprocess.run('~/.config/qtile/scripts/notifications.sh',\n    shell=True, stdout=subprocess.PIPE)\n    print(e.stdout, end=' '),", "def email():\n    e = subprocess.run('~/.config/qtile/scripts/notifications.sh',\n    shell=True, text=True, universal_newlines=True)\n    print(e, end=' '),", "    print(e.stdout, end=' '),\n", "print(e.stdout, end=' '),", "e = ", ", end=' '", ", universal_newlines=False)", "False", ", stdout=subprocess.PIPE", "def email():\n    e = subprocess.run('~/.config/qtile/scripts/notifications.sh',\n    shell=True, stdout=subprocess.PIPE, universal_newlines=True)\n    print(e.stdout, end=' '),", "def email():\n    subprocess.run('~/.config/qtile/scripts/notifications.sh',\n    shell=True, stdout=subprocess.PIPE)", "font='GoVi_Icons',", "Noto Color Emoji", "GoVi_Icons", "e", "def notf():\n    n = subprocess.run('~/.config/qtile/scripts/notifications.sh',\n    shell=True, stdout=subprocess.PIPE, universal_newlines=True)\n    print(n.stdout, end=' '),", "def mb_temp():\n    f = open('/sys/devices/platform/it87.2608/hwmon/hwmon2/temp1_input', 'r')\n    print(f.read(2) + '\u00baC')\n\n\ndef gpu_temp():\n    t = subprocess.getoutput('nvidia-smi --query-gpu=temperature.gpu --format=csv,noheader,nounits')\n    print(t + '\u00baC')\n\n\nmb_temp()\ngpu_temp()\n\n\ndef free_sdd1():\n    sdd1 = subprocess.getoutput('df -h / --output=avail | awk \"NR>1\" \"$PGLIST\" | tr -d \" \"')\n    print(sdd1)\n\n\nfree_sdd1()\n\n", "# def mb_temp():\n#     f = open('/sys/devices/platform/it87.2608/hwmon/hwmon2/temp1_input', 'r')\n#     print(f.read(2) + '\u00baC')\n# \n# \n# def gpu_temp():\n#     t = subprocess.getoutput('nvidia-smi --query-gpu=temperature.gpu --format=csv,noheader,nounits')\n#     print(t + '\u00baC')\n# \n# \n# mb_temp()\n# gpu_temp()\n# \n# \n# def free_sdd1():\n#     sdd1 = subprocess.getoutput('df -h / --output=avail | awk \"NR>1\" \"$PGLIST\" | tr -d \" \"')\n#     print(sdd1)\n# \n# \n# free_sdd1()\n# \n", "                    func=lambda: subprocess.getoutput('~/.config/qtile/scripts/email.sh'),\n", "func=notf,", "                                   func=lambda: subprocess.getoutput('~/.config/qtile/scripts/email.sh'),\n                                   update_interval=1),", "email", "def notf():\n", "    lambda.n = subprocess.run('~/.config/qtile/scripts/notifications.sh',\n    shell=True, stdout=subprocess.PIPE, universal_newlines=True)\n    print(n.stdout, end=' '),", "lambda n:", "True", "shell=True, stdout=subprocess.PIPE, universal_newlines=True\n", ", universal_newlines=True", "s.PIPE", "notf()\n", "run", "shell=True, stdout=subprocess.PIPE\n", ".stdout", ",", "print(n, end=' '),\n", "# notf()\n", "n", ")", "    print(n, end=' '),\n", "def notf():\n    lambda: subprocess.getoutput('~/.config/qtile/scripts/notifications.sh')", "n = subprocess.run('~/.config/qtile/scripts/notifications.sh',\n    shell=True, stdout=subprocess.PIPE, universal_newlines=True)\n    print(n.stdout, end=' '),", "    def notf():\n", "subprocess", "        lambda: subprocess.getoutput('~/.config/qtile/scripts/notifications.sh')\n", "    lambda: subprocess.getoutput('~/.config/qtile/scripts/notifications.sh')\n", "lambda: subprocess.getoutput('~/.config/qtile/scripts/notifications.sh'", "out", "rocess.getout\n80),", "ubprocess.getout\nl=180),", "ambda: subprocess.getout\n_interval=180),", "nc=lambda: subprocess.getout\ndate_interval=180),", "t.GenPollText(font='Noto Colo\nunc=lambda: subprocess.getout\npdate_interval=180),", ".GenPollText(font='Noto Colo\nnc=lambda: subprocess.getout\ndate_interval=180),", "enPollText(font='Noto Colo\n=lambda: subprocess.getout\nte_interval=180),", "PollText(font='Noto Colo\nambda: subprocess.getout\n_interval=180),", "lText(font='Noto Colo\nda: subprocess.getout\nterval=180),", "Text(font='Noto Colo\na: subprocess.getout\nerval=180),", "'Noto Colo\ness.getout\n,", "oto Colo\ns.getout", "r \npu", "r E\nput", "r Emo\nput('", "put('", "def ", "():", "t", "end", "    print(t + '\u00baC', end=' ')\n", "gpu_temp", "    gpu_temp = subprocess.getoutput('nvidia-smi --query-gpu=temperature.gpu --format=csv,noheader,nounits')\n", "def mb_temp():\n", "f", ":", "def ():\n", "read", "    print(f.read(2) + '\u00baC', end=' ')\n", "    mb_temp = open('/sys/devices/platform/it87.2608/hwmon/hwmon2/temp1_input', 'r')\n", "application/x-desktop", " of application/x-desktop", " set", "arch linux sh file", "set", "spacefm", "-gtk2", "bas", "x-cd-image", "image", "application/x-iso9660-image application/x-iso-image application/x-cd-image", "img *.iso *.mdf *.nrg", "Mount ISO", "shell", "script", "text-x-script", " %{T3}0 %{T-}%{F#0095ff}", "~\n", " '/home/govi/.config/qtile/scripts/cpu_temp.sh'", "mb_temp", "mb_temp = open('/sys/devices/platform/it87.2608/hwmon/hwmon2/temp1_input', 'r')\n", "cat /sys/devices/platform/coretemp.0/hwmon/hwmon1/temp1_input | cut -c -2", "mb", "/sys/devices/platform/it87.2608/hwmon/hwmon2/temp1_input", ", 'r'", "subprocess.getoutput", "open", "getoutput", "cpu_temp = subprocess.getoutput('/home/govi/.config/qtile/scripts/cpu_temp.sh')\n", "# Copyright (c) 2010 Aldo Cortesi\n# Copyright (c) 2010, 2014 dequis\n# Copyright (c) 2012 Randall Ma\n# Copyright (c) 2012-2014 Tycho Andersen\n# Copyright (c) 2012 Craig Barnes\n# Copyright (c) 2013 horsik\n# Copyright (c) 2013 Tao Sauvage\n#\n# Permission is hereby granted, free of charge, to any person obtaining a copy\n# of this software and associated documentation files (the \"Software\"), to deal\n# in the Software without restriction, including without limitation the rights\n# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n# copies of the Software, and to permit persons to whom the Software is\n# furnished to do so, subject to the following conditions:\n#\n# The above copyright notice and this permission notice shall be included in\n# all copies or substantial portions of the Software.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n# SOFTWARE.\n\nfrom typing import List  # noqa: F401\nfrom libqtile import bar, layout, widget\nfrom libqtile.config import Click, Drag, Group, Key, Screen, Match\nfrom libqtile.lazy import lazy\nfrom libqtile.utils import guess_terminal\nfrom libqtile.widget import base\nimport subprocess\nimport os\n\nmod = \"mod4\"\nterminal = guess_terminal()\n\n\n# ================================= SHORTCUTS =================================  #\nkeys = [\n    # Switch between windows in current stack pane\n    Key([mod], \"k\", lazy.layout.down()),\n    Key([mod], \"j\", lazy.layout.up()),\n\n    # Move windows up or down in current stack\n    Key([mod, \"control\"], \"k\", lazy.layout.shuffle_down()),\n    Key([mod, \"control\"], \"j\", lazy.layout.shuffle_up()),\n\n    # Window grow Left\n    Key([mod, \"control\"], \"Left\",\n        lazy.layout.grow_left(),\n        lazy.layout.shrink(),\n        lazy.layout.decrease(),\n        lazy.layout.add()),\n\n    # Window grow Right\n    Key([mod, \"control\"], \"Right\",\n        lazy.layout.grow_right(),\n        lazy.layout.grow(),\n        lazy.layout.increase_ratio(),\n        lazy.layout.delete()),\n\n    # Switch window focus to other pane(s) of stack\n    Key([mod], \"space\", lazy.layout.next()),\n\n    # Swap panes of split stack\n    Key([mod, \"shift\"], \"space\", lazy.layout.rotate()),\n\n    # Toggle between split and unsplit sides of stack.\n    Key([mod, \"shift\"], \"Return\", lazy.layout.toggle_split()),\n\n    # Toggle between different layouts as defined below\n    Key([mod], \"Tab\", lazy.next_layout()),\n\n    # Kill Window\n    Key([mod], \"w\", lazy.window.kill()),\n\n    # Terminal\n    Key([mod], \"t\", lazy.spawn(terminal)),\n\n    # Run Command\n    Key([mod], \"r\", lazy.spawncmd()),\n\n    # Restart Shutdown\n    Key([mod, \"control\"], \"r\", lazy.restart()),\n    Key([mod, \"control\"], \"q\", lazy.shutdown()),\n\n]\n\n\n# ================================= GROUPS =================================  #\ndef window_to_prev_group(qtile):\n    if qtile.currentWindow is not None:\n        i = qtile.groups.index(qtile.currentGroup)\n        qtile.currentWindow.togroup(qtile.groups[i - 1].name)\n\n\ndef window_to_next_group(qtile):\n    if qtile.currentWindow is not None:\n        i = qtile.groups.index(qtile.currentGroup)\n        qtile.currentWindow.togroup(qtile.groups[i + 1].name)\n\n\n# Run \"xprop\" to see the wm class and name of an X client.\ngroups = [Group(\"1\", label=\"\uf269\", layout='max', matches=[Match(wm_class=[\"firefox\"])]),\n          Group(\"2\", label=\"\uf1cb\", layout='monadtall', matches=[Match(wm_class=[\"jetbrains-pycharm-ce-debug\"])]),\n          Group(\"3\", label=\"\uf109\", layout='monadtall'),\n          Group(\"4\", label=\"\uf17c\", layout='monadtall'),\n          Group(\"5\", label=\"\uf1fb\", layout='monadtall'),\n          Group(\"6\", label=\"\uf0c3\", layout='monadtall'),\n          Group(\"7\", label=\"\uf07c\", layout='monadtall'),\n          Group(\"8\", label=\"\uf03e\", layout='floating')]\n\n# Switch Groups\nfor i in groups:\n    keys.extend([\n        # Switch to group (mod + number of group)\n        Key([mod], i.name, lazy.group[i.name].toscreen()),\n\n        # Next group, Previous group\n        Key([mod], \"n\", lazy.screen.next_group()),\n        Key([mod], \"p\", lazy.screen.prev_group()),\n\n        # Switch to & Move focused window to group (mod + shift + number of group)\n        Key([mod, \"shift\"], i.name, lazy.window.togroup(i.name, switch_group=True)),\n\n        # Move focused window to group (mod + shift + letter of group)\n        # Key([mod, \"shift\"], i.name, lazy.window\".format(i.name)),w.togroup(i.name),\n        #   desc=\"move focused window to group {}\".format(i.name)),\n    ])\n\n\n# ================================= LAYOUTS =================================  #\nlayout_theme = {'border_width': 3,\n                'margin': 11,\n                'border_focus': '#86ACE0',\n                'border_normal': '#305673',\n                'single_border_width': 0}\n\nlayouts = [\n    layout.Max(),\n    layout.MonadTall(**layout_theme),\n    layout.Floating(layout_theme, border_width=0)\n    # layout.Bsp(),\n    # layout.Stack(num_stacks=2),\n    # layout.Columns(),layout_theme\n    # layout.Matrix(),\n    # layout.MonadWide(),\n    # layout.RatioTile(),\n    # layout.Tile(),\n    # layout.TreeTab(),\n    # layout.VerticalTile(),\n    # layout.Zoomy(),\n]\n\n\n# ================================= WIDGETS =================================  #\nwidget_defaults = dict(\n                background='#21242B',\n                foreground='#dfdfdf',\n                font='Source Code Pro',\n                fontsize=15,\n                margin=7,\n                padding=3)\n\nextension_defaults = widget_defaults.copy()\n\n\nmb_temp = open('/sys/devices/platform/it87.2608/hwmon/hwmon2/temp1_input', 'r')\n\ngpu_temp = subprocess.getoutput('nvidia-smi --query-gpu=temperature.gpu --format=csv,noheader,nounits')\n\n\n\nnotf = subprocess.getoutput('~/.config/qtile/scripts/notifications.sh')\n\n\nscreens = [\n    Screen(\n        top=bar.Bar(\n            [\n                widget.Image(filename='~/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Icons/apps/64/archlinux.png',\n                             margin=0,\n                             mouse_callbacks={'Button1': lambda qtile: qtile.cmd_spawn('ulauncher')}),\n\n                widget.CurrentLayoutIcon(scale=0.7),\n\n                widget.GroupBox(font='FontAw4esome',\n                                disable_drag=True,\n                                highlight_method='text',\n                                this_current_screen_border='#86ACE0',\n                                borderwidth=0,\n                                active='#DFDFDF',\n                                inactive='#717171'),\n\n                widget.Prompt(),\n\n                widget.TaskList(borderwidth=2, border='#5C718E', fontsize=14, max_title_width=300),\n\n                # ============================================================================================================ #\n\n                widget.Systray(padding=10),\n\n                widget.Image(filename='~/.local/share/icons/GoVi_gtk-Icons/preferences/32/preferences-desktop-sound.svg',\n                             mouse_callbacks={'Button1': lambda qtile: qtile.cmd_spawn('pavucontrol')}),\n\n                widget.Image(filename='~/.local/share/icons/GoVi_gtk-Icons/apps/64/nvidia3.png',\n                             mouse_callbacks={'Button1': lambda qtile: qtile.cmd_spawn('nvidia-settings')}),\n\n                widget.Clock(fontsize=18),\n\n            ],\n            34),\n\n        bottom=bar.Bar(\n            [\n                widget.Image(filename='~/.local/share/icons/GoVi_gtk-Icons/apps/64/power.png',\n                             mouse_callbacks={'Button1': lambda qtile: qtile.cmd_spawn('kill -9 -1')}),\n\n                widget.Spacer(length=10),\n\n                widget.TextBox(font='GoVi_Icons', text='2'),\n                widget.GenPollText(func=lambda: subprocess.getoutput('df -h / --o=avail | awk \"NR>1\" | tr -d \" \"'),\n                                   update_interval=1),\n\n                widget.Spacer(length=10),\n\n                widget.TextBox(font='GoVi_Icons', text='H'),\n                widget.GenPollText(func=lambda: subprocess.getoutput('df -h /home --o=avail | awk \"NR>1\" | tr -d \" \"'),\n                                   update_interval=1),\n\n                widget.Spacer(length=10),\n\n                widget.TextBox(text='/Datos:'),\n                widget.GenPollText(func=lambda: subprocess.getoutput('df -h /Datos --o=avail | awk \"NR>1\" | tr -d \" \"'),\n                                   update_interval=1),\n\n                widget.Spacer(length=10),\n\n                widget.TextBox(text='/Media:'),\n                widget.GenPollText(\n                    func=lambda: subprocess.getoutput('df -h /Media --o=avail | awk \"NR>1\" | tr -d \" \"'),\n                    update_interval=1),\n\n                widget.Spacer(length=20),\n\n                widget.GenPollText(font='Noto Color Emoji',\n                    func=lambda: notf,\n                    update_interval=1),\n\n                widget.Spacer(length=10),\n\n                widget.GenPollText(font='Noto Color Emoji',\n                    func=lambda: subprocess.getoutput('~/.config/qtile/scripts/email.sh'),\n                    update_interval=180),\n\n\n                widget.Spacer(length=bar.STRETCH),\n\n                widget.Image(filename='~/.local/share/icons/GoVi_gtk-Icons/apps/64/arrow_down.png'),\n                widget.Net(format='{down}/s', interface='enp3s0'),\n\n                widget.Image(filename='~/.local/share/icons/GoVi_gtk-Icons/apps/64/arrow_up.png'),\n                widget.Net(format='{up}/s ', interface='enp3s0'),\n\n                widget.ThermalSensor(tag_sensor='Package id 0', foreground='#287BDE'),\n\n                widget.GenPollText(func=gpu_temp, update_interval=1, foreground='#27AE60'),\n\n                widget.GenPollText(func=mb_temp, update_interval=1, foreground='#F6FA93'),\n\n                widget.Volume(update_interval=0.2, emoji=True),\n                widget.Volume(update_interval=0.2),\n\n                widget.Image(filename='~/.local/share/icons/GoVi_gtk-Icons/apps/64/calendar.png'),\n                widget.Clock(format='%a %d/%m/%Y '),\n            ],\n            34,),\n\n    ),\n]\n\n\n# ================================= FLOATING LAYOUTS =================================  #\nmouse = [\n    Drag([mod], 'Button1', lazy.window.set_position_floating(),\n         start=lazy.window.get_position()),\n    Drag([mod], 'Button3', lazy.window.set_size_floating(),\n         start=lazy.window.get_size()),\n    Click([mod], 'Button2', lazy.window.bring_to_front())\n]\n\ndgroups_key_binder = None\ndgroups_app_rules = []  # type: List\nmain = None  # WARNING: this is deprecated and will be removed soon\nfollow_mouse_focus = True\nbring_front_click = True\ncursor_warp = False\n\nfloating_layout = layout.Floating(float_rules=[\n    # Run the utility of `xprop` to see the wm class and name of an X client.\n    {'wmclass': 'confirm'},\n    {'wmclass': 'dialog'},\n    {'wmclass': 'download'},\n    {'wmclass': 'error'},\n    {'wmclass': 'file_progress'},\n    {'wmclass': 'notification'},\n    {'wmclass': 'splash'},\n    {'wmclass': 'toolbar'},\n    {'wmclass': 'confirmreset'},  # gitk\n    {'wmclass': 'makebranch'},  # gitk\n    {'wmclass': 'maketag'},  # gitk\n    {'wname': 'branchdialog'},  # gitk\n    {'wname': 'pinentry'},  # GPG key password entry\n    {'wmclass': 'ssh-askpass'},  # ssh-askpass\n    {'wmclass': 'ulauncher'},\n    {'wmclass': 'onboard'}\n])\n\n\nauto_fullscreen = True\nfocus_on_window_activation = \"focus\"\n\nwmname = \"LG3D\"\n\nautostart = [\n        \"killall nm-applet & sleep 1 && nm-applet --sm-disable &\",\n]\n\nfor x in autostart:\n    os.system(x)\n", "\n", "/home/govi", "widget.GenPollText", "widget.GenPollText(func=gpu_temp, update_interval=1, foreground=", "reground='", "widget.ThermalSensor(tag_sensor='Package id 0', foreground=", "notf = subprocess.getoutput('~/.config/qtile/scripts/notifications.sh')", "notf", "cpu_temp", "config", "cpu_temp = subprocess.getoutput('~/.config/qtile/scripts/cpu_temp.sh')\n", "lambda: ", "~/.config/qtile/scripts/cpu_temp.sh", "nvidia-smi --query-gpu=temperature.gpu --format=csv,noheader,nounits", "c", "sys/devices/platform/it87.2608/hwmon/hwmon2/temp1_input', 'r'", "subprocess.getoutput('~/.config/qtile/scripts/gpu_temp.sh')", "open('/sys/devices/platform/it87.2608/hwmon/hwmon2/temp1_input', 'r')", "gpu", " > ~/.config/qtile/scripts/mb_temp", " > ~/.config/qtile/scripts/gpu_temp", "\u00b0C"], "CLIPBOARD": ["ln -s /usr/bin/vim /usr/bin/vi", "ln -s /usr/bin/nvim /usr/bin/vi", "sudo ln -s /usr/bin/nvim /usr/bin/vi", "Bash", "Shell", "~/Scripts/Shell/Utils/", "[1;37m\\]", "chsh -s /bin/zsh $USER", "sudo pacman -S zsh zsh-autosuggestions zsh-syntax-highlighting", " '/usr/share/applications/timeshift-gtk.desktop'", "systemctl enable firewalld", "sudo timeshift-launcher", "home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/titlebutton-close-backdrop-dark@2.png", "home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/titlebutton-min-backdrop-dark@2.png", "home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/titlebutton-close-active-dark@2.png", "home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/titlebutton-max-dark@2.png", "home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/titlebutton-min-dark@2.png", "home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/titlebutton-max-active-dark@2.png", "home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/titlebutton-min-active-dark@2.png", "home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/titlebutton-max-backdrop-dark@2.png", "home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/titlebutton-close-hover-dark@2.png", "home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/titlebutton-max-hover-dark@2.png", "home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/titlebutton-close-dark@2.png", "home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/titlebutton-min-hover-dark@2.png", "/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/titlebutton-close-active-dark.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/titlebutton-close-active-dark@2.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/titlebutton-close-backdrop-dark.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/titlebutton-close-backdrop-dark@2.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/titlebutton-close-dark.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/titlebutton-close-dark@2.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/titlebutton-close-hover-dark.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/titlebutton-close-hover-dark@2.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/titlebutton-max-active-dark.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/titlebutton-max-active-dark@2.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/titlebutton-max-backdrop-dark.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/titlebutton-max-backdrop-dark@2.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/titlebutton-max-dark.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/titlebutton-max-dark@2.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/titlebutton-max-hover-dark.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/titlebutton-max-hover-dark@2.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/titlebutton-min-active-dark.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/titlebutton-min-active-dark@2.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/titlebutton-min-backdrop-dark.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/titlebutton-min-backdrop-dark@2.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/titlebutton-min-dark.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/titlebutton-min-dark@2.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/titlebutton-min-hover-dark.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/titlebutton-min-hover-dark@2.png\n", "/home/govi/Downloads/Peace-Harmony-GTK/Peace-Harmony-GTK/assets\n/home/govi/Downloads/Peace-Harmony-GTK/Peace-Harmony-GTK/gtk-2.0\n/home/govi/Downloads/Peace-Harmony-GTK/Peace-Harmony-GTK/gtk-3.0\n", "home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/nuevo/titlebutton-max-backdrop-dark@2.png", "home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/nuevo/titlebutton-close-dark@2.png", "home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/nuevo/titlebutton-min-active-dark@2.png", "home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/nuevo/titlebutton-close-backdrop-dark@2.png", "home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/nuevo/titlebutton-max-active-dark@2.png", "home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/nuevo/titlebutton-max-hover-dark@2.png", "home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/nuevo/titlebutton-close-hover-dark@2.png", "home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/nuevo/titlebutton-max-dark@2.png", "home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/nuevo/titlebutton-min-hover-dark@2.png", "home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/nuevo/titlebutton-min-backdrop-dark@2.png", "home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/nuevo/titlebutton-min-dark@2.png", "home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/nuevo/titlebutton-close-active-dark@2.png", "/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/nuevo/titlebutton-close-active-dark.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/nuevo/titlebutton-close-active-dark@2.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/nuevo/titlebutton-close-backdrop-dark.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/nuevo/titlebutton-close-backdrop-dark@2.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/nuevo/titlebutton-close-dark.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/nuevo/titlebutton-close-dark@2.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/nuevo/titlebutton-close-hover-dark.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/nuevo/titlebutton-close-hover-dark@2.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/nuevo/titlebutton-max-active-dark.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/nuevo/titlebutton-max-active-dark@2.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/nuevo/titlebutton-max-backdrop-dark.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/nuevo/titlebutton-max-backdrop-dark@2.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/nuevo/titlebutton-max-dark.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/nuevo/titlebutton-max-dark@2.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/nuevo/titlebutton-max-hover-dark.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/nuevo/titlebutton-max-hover-dark@2.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/nuevo/titlebutton-min-active-dark.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/nuevo/titlebutton-min-active-dark@2.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/nuevo/titlebutton-min-backdrop-dark.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/nuevo/titlebutton-min-backdrop-dark@2.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/nuevo/titlebutton-min-dark.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/nuevo/titlebutton-min-dark@2.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/nuevo/titlebutton-min-hover-dark.png\n/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Windows/gtk-3.0/assets/nuevo/titlebutton-min-hover-dark@2.png\n", "PS1=\"%B%{$fg[red]%}[%{$fg[yellow]%}%n%{$fg[green]%}@%{$fg[blue]%}%M %{$fg[magenta]%}%~%{$fg[red]%}]%{$reset_color%}$%b \"", "{$fg[green]%}", "autoload -U colors && colors\nPS1=\"%B%{$fg[red]%}[%{$fg[yellow]%}%n%{$fg[green]%}@%{$fg[blue]%}%M$fg[green]%}:%{$fg[magenta]%}%~%{$fg[red]%}]%{$reset_color%}$%b \"", "# Load zsh-syntax-highlighting; should be last.\nsource /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh 2>/dev/null", "alias spm=\"pacman\"\n", "spacefm", "alias pu=\"paru\"\nalias py=\"python3\"", "alias sfm=\"spacefm\"\nalias spm=\"sudo pacman\"", "alias spm=\"sudo pacman\"\n", "alias pc=\"pavucontrol &\"\n", "alias D1-P1=\"zenity --info --text \"Complete\" && paplay $HOME/.local/share/sounds/cause-and-effect.ogg\"\n", "alias ht=\"htop\"\nalias hy=\"history\"", "/Media/GoVi/Downloads/Nueva carpeta/Adobe Photoshop 2021\n", "d3dae3", "1e2129", "bf9229", "BEE2FF", "/home/govi/Programs/Adobe/Wine/Photoshop\n", "/home/govi/monitor-7877yyjjg.png\n/home/govi/network-7665ghik.png\n", "/home/govi/.bash_profile\n/home/govi/.bashrc\n", " '/home/govi/.imwheelrc'", "Sci Fi Wallpapers-", "/home/govi/Downloads/Sci Fi Wallpapers-766tty.jpg\n/home/govi/Downloads/Sci Fi Wallpapers-rQeu4f.jpg\n", "/home/govi/Programs/Adobe/Wine/Launch-Photoshop.sh\n", "ulauncher --hide-window", "~/Scripts/Shell/Utils/ulauncher.sh", "[Desktop Entry]\nName=Timeshift-cmd\nMimeType=\nExec=alacritty -e sudo timeshift-launcher\nType=Application\nGenericName=System Restore Utility\nGenericName[ca]=Utilitat de restauraci\u00f3 del sistema\nGenericName[cs]=N\u00e1stroj pro obnoven\u00ed syst\u00e9mu\nGenericName[da]=V\u00e6rkt\u00f8j til systemgendannelse\nGenericName[fr]=Utilitaire de restauration syst\u00e8me\nGenericName[hr]=Alat obnove sustava\nGenericName[lt]=Sistemos atk\u016brimo paslaug\u0173 programa\nGenericName[nl]=Hulpmiddel voor systeemherstel\nGenericName[ru]=\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0434\u043b\u044f \u0432\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u044b\nTerminal=1\nIcon=timeshift\nComment=System Restore Utility\nComment[ca]=Utilitat de restauraci\u00f3 del sistema\nComment[cs]=N\u00e1stroj pro obnoven\u00ed syst\u00e9mu\nComment[da]=V\u00e6rkt\u00f8j til systemgendannelse\nComment[fr]=Utilitaire de restauration syst\u00e8me\nComment[hr]=Alat obnove sustava\nComment[lt]=Sistemos atk\u016brimo paslaug\u0173 programa\nComment[nl]=Hulpmiddel voor systeemherstel\nComment[ru]=\u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u0434\u043b\u044f \u0432\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u044b\nX-KDE-StartupNotify=false\nCategories=System;\nX-GNOME-UsesNotifications=true", "/home/govi/.local/share/applications/tinyMediaManager.desktop\n", "/usr/share/icons/hicolor/64x64/apps/timeshift.png\n", "/usr/share/icons/hicolor/64x64/apps/firefox.png\n/usr/share/icons/hicolor/64x64/apps/kdenlive.png\n/usr/share/icons/hicolor/64x64/apps/kodi.png\n/usr/share/icons/hicolor/64x64/apps/lutris.png\n/usr/share/icons/hicolor/64x64/apps/mpv.png\n/usr/share/icons/hicolor/64x64/apps/spotify.png\n", "Timeshift", "bindkey", "^[[3~", "^?", "bindkey \"^[[H\" beginning-of-line\nbindkey \"^[[1~\" beginning-of-line\nbindkey \"^[[F\"  end-of-line\nbindkey \"^[[4~\" end-of-line", "forward-char", "showkey -a", "# Load aliases if existent.\n[ -f \"$HOME/.config/aliasrc\" ] && source \"$HOME/.config/aliasrc\"", "\n# Environment Games\n# export WINEFSYNC=1\n# export MANGOHUD=1\n# export MANGOHUD_DLSYM=1\n# export ENABLE_VKBASALT=1\nexport VKBASALT_CONFIG_FILE=\"$HOME/.config/vkBasalt/vkBasalt.conf\"", "export JAVA_OPTIONS='-Dawt.useSystemAAFontSettings=on -Dswing.aatext=true -Dswing.defaultlaf=com.sun.java.swing.plaf.gtk.GTKLookAndFeel'\n", "# Aliases\nalias am=\"alsamixer\"\nalias cp=\"cp -rfv\"\nalias d1-p1=\"zenity --info --text \"Complete\" && paplay $HOME/.local/share/sounds/cause-and-effect.ogg\"\nalias du1=\"du -d1 -h\"\nalias ff=\"find \".\" -type f -iname \"\nalias fd=\"find \".\" -type d -iname \"\nalias ht=\"htop\"\nalias hy=\"history\"\nalias k9=\"kill -9\"\nalias ka=\"killall\"\nalias l=\"exa -al --color=always --group-directories-first\"\nalias mv=\"mv -fv\"\nalias nv=\"nvim\"\nalias pc=\"pavucontrol &\"\nalias pm=\"pacman\"\nalias pu=\"paru\"\nalias py=\"python3\"\nalias rm=\"rm -rfv\"\nalias sfm=\"spacefm\"\nalias spm=\"sudo pacman\"\nalias sth=\"sort -h\"\nalias snv=\"sudo -E nvim\"\nalias wrt=\"wrestool -x --output=. -t14\"\nalias yt=\"youtube-dl --add-metadata -ic\"\n\n# Git aliases\nalias gcl=\"git clone\"\nalias ga=\"git add\"\nalias gcm=\"git commit -m\"\nalias gpm=\"git push -u origin master\"", ":", "bindkey -M menuselect 'h' vi-backward-char\nbindkey -M menuselect 'k' vi-up-line-or-history\nbindkey -M menuselect 'l' vi-forward-char\nbindkey -M menuselect 'j' vi-down-line-or-history", "export GREP_COLOR='1;32'\nexport CLICOLOR=1", "export TERM=\"xterm-color\"\n", "alias egrep='egrep --color=auto'\n", "# vi mode\nbindkey -v\nexport KEYTIMEOUT=1", "# History\nHISTSIZE=10000\nSAVEHIST=10000\nHISTFILE=~/.cache/zsh_history\n\n# Basic auto/tab complete\nautoload -U compinit\nzstyle ':completion:*' menu select\nzmodload zsh/complist\ncompinit\n_comp_options+=(globdots) # Include hidden files.\n\n# Bind keys, \"showkey -a\" to see output of a key.\nbindkey \"^[[H\" beginning-of-line\nbindkey \"^[[1~\" beginning-of-line\nbindkey \"^[[F\" end-of-line\nbindkey \"^[[4~\" end-of-line\nbindkey \"^[[3~\" delete-char\nbindkey -M menuselect 'h' vi-backward-char\nbindkey -M menuselect 'k' vi-up-line-or-history\nbindkey -M menuselect 'l' vi-forward-char\nbindkey -M menuselect 'j' vi-down-line-or-history\n\n# Autocd\nsetopt autocd\n\n# Colors\nunset color_prompt force_color_prompt\nautoload -U colors && colors\nPS1=\"%B%{$fg[red]%}[%{$fg[yellow]%}%n%{$fg[green]%}@%{$fg[blue]%}%M$fg[green]%}:%{$fg[magenta]%}%~%{$fg[red]%}]%{$reset_color%}$%b \"\nalias diff=\"diff --color=auto\"\nalias egrep='egrep --color=auto'\nalias fgrep='fgrep --color=auto'\nalias grep=\"grep --color=auto\"\nexport GREP_COLOR='1;32'\nexport GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'\nexport CLICOLOR=1\nexport TERM=\"xterm-color\"\n\n# Environment\nexport BROWSER=\"firefox\"\nexport FILEMANAGER=\"spacefm\"\nexport TERMINAL=\"alacritty\"\nexport EDITOR=\"nvim\"\nexport VISUAL=\"nvim\"\nexport JAVA_OPTIONS='-Dawt.useSystemAAFontSettings=on -Dswing.aatext=true -Dswing.defaultlaf=com.sun.java.swing.plaf.gtk.GTKLookAndFeel'\nexport PATH=$PATH:$HOME/Scripts/Shell/\nexport PATH=$PATH:$HOME/Scripts/Shell/Autostart/\nexport PATH=$PATH:$HOME/Scripts/Shell/Games/\nexport PATH=$PATH:$HOME/Scripts/Shell/Polybar/\nexport PATH=$PATH:$HOME/Scripts/Shell/Programs/\nexport PATH=$PATH:$HOME/Scripts/Shell/Utils/\nexport PATH=$PATH:$HOME/Programs/Pycharm/bin/\n\n# Environment Games\n# export WINEFSYNC=1\n# export MANGOHUD=1\n# export MANGOHUD_DLSYM=1\n# export ENABLE_VKBASALT=1\nexport VKBASALT_CONFIG_FILE=\"$HOME/.config/vkBasalt/vkBasalt.conf\"\n\n# Load aliases if exist.\n[ -f \"$HOME/.config/aliasrc\" ] && source \"$HOME/.config/aliasrc\"\n\n# Aliases\nalias am=\"alsamixer\"\nalias cp=\"cp -rfv\"\nalias d1-p1=\"zenity --info --text \"Complete\" && paplay $HOME/.local/share/sounds/cause-and-effect.ogg\"\nalias du1=\"du -d1 -h\"\nalias ff=\"find \".\" -type f -iname \"\nalias fd=\"find \".\" -type d -iname \"\nalias ht=\"htop\"\nalias hy=\"history\"\nalias k9=\"kill -9\"\nalias ka=\"killall\"\nalias l=\"exa -al --color=always --group-directories-first\"\nalias mv=\"mv -fv\"\nalias nv=\"nvim\"\nalias pc=\"pavucontrol &\"\nalias pm=\"pacman\"\nalias pu=\"paru\"\nalias py=\"python3\"\nalias rlz=\"source .zshrc\"\nalias rm=\"rm -rfv\"\nalias sfm=\"spacefm\"\nalias spm=\"sudo pacman\"\nalias sth=\"sort -h\"\nalias snv=\"sudo -E nvim\"\nalias wrt=\"wrestool -x --output=. -t14\"\nalias yt=\"youtube-dl --add-metadata -ic\"\n\n# Git aliases\nalias gcl=\"git clone\"\nalias ga=\"git add\"\nalias gcm=\"git commit -m\"\nalias gpm=\"git push -u origin master\"\n\n# System Info\nneofetch\n\n# Load zsh-syntax-highlighting; should be last.\nsource /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh 2>/dev/null", "# Autocd\nsetopt autocd", "*/20 * * * * ~/.config/polybar/scripts/rss_games.sh", "*/30 * * * * ~/.config/polybar/scripts/rss_youtube.sh\n", "ALL ALL=(ALL) NOPASSWD: /usr/bin/pacman -Syy", "/etc/xdg/user-dirs.defaults", "user-dirs.dirs", "~/.config/user-dirs.dirs", "ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=5'", "60", "585858", "-256color", "240", "/home/govi/Pictures/Photos/Web/256_colors_fg.png\n", "kitty", "pixterm", "termpix", "off", "iterm2", "jp2a", "chafa", "caca", "ascii", "padding", "margin", "highlight_color", "this_current_screen_border", "86ACE0", "this_screen_border", "other_current_screen_border", "other_screen_border", "borderwidth", "urgent", "/home/govi/Downloads/Network.png\n/home/govi/Downloads/Network-icon.png\n", "sudo etcher-electron", "polkit-1-auth-agent", ", Match", "Match(title='pinentry')", "ulauncher", "    Match(title='ulauncher')\n", "onboard", "wmclass", "    {'wmclass': 'ssh-askpass'},  # ssh-askpass\n", "'matches': [Match(wm_class=('Firefox', 'Google-chrome'))],", "qtile window rules", "shutdown -h -a now", "markup_floating=\"<i>{}</i>\",\n                        markup_minimized=\"<s>{}</s>\"),", "                widget.Clock(fontsize=18),\n", "/home/govi/Pictures/Icons/System/Png/Power.png\n", " widget.Image(filename='~/.local/share/icons/GoVi_gtk-Icons/apps/64/nvidia3.png',\n                             mouse_callbacks={'Button1': lambda qtile: qtile.cmd_spawn('nvidia-settings')}),", "top=bar.Bar(\n            [\n                widget.Image(filename='~/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Icons/apps/64/archlinux.png',\n                             margin=0,\n                             mouse_callbacks={'Button1': lambda qtile: qtile.cmd_spawn('ulauncher')}),\n\n                widget.CurrentLayoutIcon(scale=0.7),\n\n                widget.GroupBox(font='FontAw4esome',\n                                disable_drag=True,\n                                highlight_method='text',\n                                this_current_screen_border='#86ACE0',\n                                borderwidth=0,\n                                active='#DFDFDF',\n                                inactive='#717171'),\n\n                widget.Prompt(),\n\n                widget.TaskList(borderwidth=2, border='#5C718E', fontsize=14,\n                                max_title_width=300),\n\n\n                widget.Systray(padding=10),\n\n                widget.Image(filename='~/.local/share/icons/GoVi_gtk-Icons/preferences/32/preferences-desktop-sound.svg',\n                             mouse_callbacks={'Button1': lambda qtile: qtile.cmd_spawn('pavucontrol')}),\n\n                widget.Image(filename='~/.local/share/icons/GoVi_gtk-Icons/apps/64/nvidia3.png',\n                             mouse_callbacks={'Button1': lambda qtile: qtile.cmd_spawn('nvidia-settings')}),\n\n                widget.Clock(fontsize=18),\n\n                widget.Image(filename='~/.local/share/icons/GoVi_gtk-Icons/apps/64/power.png',\n                             mouse_callbacks={'Button1': lambda qtile: qtile.cmd_spawn('logout -h -a now')}),\n\n            ],\n            34,\n        ),\n    ),", " widget.Image(filename='~/.local/share/icons/GoVi_gtk-Icons/apps/64/power.png',\n                             mouse_callbacks={'Button1': lambda qtile: qtile.cmd_spawn('logout -h -a now')}),", "/home/govi/Pictures/Icons/System/Png/HD Portable.png\n", "Exec=bash -c 'kill -9 -1'\nIcon=/home/govi/Pictures/Icons/System/Png/Button-exit.png\n", "df -h / --output=avail | awk 'NR>1' \"$PGLIST\" | tr -d ' '", "kill -9 -1", "cmd_spawn('ulauncher'", "temp=$(nvidia-smi --query-gpu=temperature.gpu --format=csv,noheader,nounits)\n\n", "fmt", "fmt\n\t\n\n'{}'", "    subprocess.call([r'/home/govi/Scripts/Bash/Webgrab_Update_to_GIT.sh'])\n\n", "widget.GenPollText(", "/home/govi/.config/polybar/scripts/email.sh", "font=", "/home/govi/Scripts/Shell/Polybar/email.sh\n", "/home/govi/Scripts/Shell/Polybar/notf_switch.sh\n/home/govi/Scripts/Shell/Polybar/notifications.sh\n", "/home/govi/.config/qtile/scripts/notf_switch.sh\n/home/govi/.config/qtile/scripts/notifications.sh\n", " '/home/govi/.config/qtile/scripts/email.sh'", "%n%{$fg[green]%}@%", "    echo \"$fg[yellow]9\"\n", "echo \"$fg[yellow]", "~/.config/polybar/scripts/notifications.sh", "                    update_interval=180),\n", "GoVi_Icons", "                widget.Spacer(length=20),\n", "export PS1=\"\\[\\e[0;31m\\][\\[\\e[1;33m\\]\\u\\[\\e[1;37m\\]@\\[\\e[1;32m\\]\\h\\[\\e[1;37m\\]:\\[\\e[1;34m\\]\\w\\[\\e[0;31m\\]]\\[\\e[1;37m\\]$ \\[\\e[m\\]\"\nalias grep=\"grep --color=auto\"\n", "[\\e[0;31m\\]", "lambda: subprocess.call('~/.config/qtile/scripts/notifications.sh'),\n                    shell=True, text=True,", "getoutput", "def email():\n    e = subprocess.run('~/.config/qtile/scripts/notifications.sh',\n    shell=True, text=True,)\n    print(e, end=' '),", ", universal_newlines=True", "`tput setaf 1`", "\ud83d\udd15", "\ud83d\udd14", "def email():\n    e = subprocess.run('~/.config/qtile/scripts/notifications.sh',\n    shell=True, stdout=subprocess.PIPE)\n    print(e.stdout, end=' '),", "def email():\n    e = subprocess.run('~/.config/qtile/scripts/notifications.sh',\n    shell=True, stdout=subprocess.PIPE, universal_newlines=True)\n    print(e.stdout, end=' '),", "Noto Color Emoji", "def notf():\n    n = subprocess.run('~/.config/qtile/scripts/notifications.sh',\n    shell=True, stdout=subprocess.PIPE, universal_newlines=True)\n    print(n.stdout, end=' '),", "                    func=lambda: subprocess.getoutput('~/.config/qtile/scripts/email.sh'),\n", "def notf():\n    lambda: subprocess.getoutput('~/.config/qtile/scripts/notifications.sh')", "notf", "gpu_temp", "mb_temp", "/home/govi/.config/polybar/scripts/cpu_temp.sh\n", "application/x-desktop", "/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Icons/mimetypes/64/text-x-script.svg\n", "/home/govi/Downloads/Deepin-4All/Deepin-4All\n", "\n# Bad lectures\n#sensors | grep \"Package id 0:\" | tr -d 'Package id 0:(hh=8.,rt=1.+)' | cut -c -5\n\n# Works on terminal not in polybar though\n#     echo -e \ud83c\udf21 \"\\e[38;5;26m\"$temp\" \u00b0C\"\n\n# Search temperature output\n# for i in /sys/class/hwmon/hwmon*/temp*_input; do echo \"$(<$(dirname $i)/name): $(cat ${i%_*}_label 2>/dev/null || echo $(basename ${i%_*})) $(readlink -f $i)\"; done\n", " %{T3}0 %{T-}%{F#0095ff}", "%{F#fdbc4b}", "%{F-}\n", "%{F#f90e39}", " '/home/govi/.config/qtile/scripts/cpu_temp.sh'", "mb_temp = open('/sys/devices/platform/it87.2608/hwmon/hwmon2/temp1_input', 'r')\n", "cat /sys/devices/platform/coretemp.0/hwmon/hwmon1/temp1_input | cut -c -2", "/home/govi/.config/qtile/scripts/cpu_temp.sh", "cpu_temp = subprocess.getoutput('/home/govi/.config/qtile/scripts/cpu_temp.sh')\n", "widget.GenPollText(func=gpu_temp, update_interval=1, foreground=", "notf = subprocess.getoutput('~/.config/qtile/scripts/notifications.sh')", "cpu_temp = subprocess.getoutput('~/.config/qtile/scripts/cpu_temp.sh')\n", "lambda: ", "~/.config/qtile/scripts/cpu_temp.sh", "subprocess.getoutput('~/.config/qtile/scripts/gpu_temp.sh')", "\u00b0C "]}
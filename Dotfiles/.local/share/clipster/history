{"PRIMARY": ["# Launch\ncd \"$DIR\"\ngamemoderun WINEPREFIX=\"$WINEPREFIX\" \"$WINE\" \"$EXE\" $ARGS &\necho \"Launching $DIR/$EXE\"\n\n# Before Launch\nwhile ! pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    qdbus org.kde.KWin /Compositor suspend\n    killall polybar\n    sleep 5\n    killall lutris\n    killall cairo-dock\n\n# After Launch\nwhile pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    qdbus org.kde.KWin /Compositor resume\n    $HOME/Scripts/Bash/Polybar/launch.sh\n    cairo-dock > /dev/null 2>&1 &\n    sleep 5\n    killall gamemoded &\n    exit\n\n# ======================================================================== #", "export __GL_SHADER_DISK_CACHE_SKIP_CLEANUP=1\nexport __GL_SHADER_DISK_CACHE=1\nexport __GL_SHADER_DISK_CACHE_PATH=\"$DIR\"\n#export __GL_THREADED_OPTIMIZATIONS=1 # NVIDIA\n\n# ======================================================================== #\n\n# Chech if the script is in Wine directory\nLAUNCH_GAME=\"$(find \"${DIR}/Wine\" -type f -iname \"Launch-*\")\"\n\nwhile true; do\n    if [ ! -f \"$LAUNCH_GAME\" ]; then clear & sleep 1\n        echo -e '\\nThis Script needs to be in a folder called \"Wine\", with the prename \"Launch-\" (example: Launch-My_Game.sh) inside the Game folder.'\n        [ ! -d \"${DIR}/Wine\" ] &&\n            echo -e \"\\nCreating one in the current directory...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine\"\n        echo -e '\\nPlease, put this script in it and put \"Wine\" folder whatever you want in the Game folder.'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to close this script, make the changes and run it again...\")\"; echo &\n        exit\n\n    else\n        break\n    fi\ndone\n\n# Chech if wine-pfx exist\nwhile true; do\n    if [ ! -f \"${DIR}/Wine/wine-pfx/system.reg\" ]; then clear & sleep 1\n        echo -e \"\\nThere is not a valid wine-pfx folder.\\nThis is neccesary to run this script.\"\n        [ ! -d \"${DIR}/Wine/wine-pfx\" ] &&\n            echo -e \"\\nCreating wine-pfx folder...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine/wine-pfx\"\n        echo -e '\\nPlease, copy a valid wine-prefix in \"wine-pfx\" folder or delete the created folder and create a symlink to a valid wineprefix and call the symlink \"wine-pfx\"'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to continue...\")\"\n\n    elif [ -f \"${DIR}/Wine/wine-pfx/system.reg\" ]; then\n        break\n    fi\ndone\n\n# Chech if wine-build exist\nwhile true; do\n    if [ ! -d \"${DIR}/Wine/wine-build\" ] && [ ! -f \"${DIR}/Wine/wine\" ]; then clear & sleep 1\n        echo -e '\\nThere is not a valid \"wine-build folder\" or symlink to a \"wine\" file\\nThis is neccesary to run this script'\n        [ ! -d \"${DIR}/Wine/wine-build\" ] &&\n            echo -e \"\\nCreating wine-build folder...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine/wine-build\"\n        echo -e '\\nPlease, copy a valid wine-build in \"wine-build\" folder or delete the created folder and create a symlink to a valid \"wine-build\" folder and call the symlink \"wine-build.\\nOr create a symlink to a \"wine\" file\"'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to continue...\")\"\n\n    elif [ -d \"${DIR}/Wine/wine-build\" ]; then\n        WINE_BUILD=$(find -L \"${DIR}/Wine/wine-build\" -type f -iname \"wine\") 2> /dev/null\n        [ -f \"$WINE_BUILD\" ] && ln -sf \"$WINE_BUILD\" \"${DIR}/Wine/wine\" > /dev/null 2>&1\n        break\n\n    elif [ -f \"${DIR}/Wine/wine\" ]; then\n        [ -d \"${DIR}/Wine/wine-build\" ] &&\n            WINE_BUILD=$(find -L \"${DIR}/Wine/wine-build\" -type f -iname \"wine\") 2> /dev/null &&\n            ln -sf \"$WINE_BUILD\" \"${DIR}/Wine/wine\" > /dev/null 2>&1\n        break\n    fi\ndone\n\n# Set wine-build & wineprefix\nWINE=\"$DIR/Wine/wine\"\nWINEPREFIX=\"$DIR/Wine/wine-pfx/\"\n\n# ======================================================================== #\n\n# Launch\ncd \"$DIR\"\ngamemoderun WINEPREFIX=\"$WINEPREFIX\" \"$WINE\" \"$EXE\" $ARGS &\necho -e \"\\nLaunching $DIR/$EXE\\n\" | sed 's/\\.\\///g'\n\n# Before Launch\nwhile ! pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    $COMP_Disabled\n    sleep 5\n    killall lutris\n    killall cairo-dock\n\n# After Launch\nwhile pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    $COMP_Enabled\n    cairo-dock > /dev/null 2>&1 &\n    sleep 5\n    killall gamemoded &\n    exit\n", "\n# ======================================================================== #\n\n# Launch\ncd \"$DIR\"\ngamemoderun WINEPREFIX=\"$WINEPREFIX\" \"$WINE\" \"$EXE\" $ARGS &\necho -e \"\\nLaunching $DIR/$EXE\\n\" | sed 's/\\.\\///g'\n\n# Before Launch\nwhile ! pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    $COMP_Disabled\n    sleep 5\n    killall lutris\n    killall cairo-dock\n\n# After Launch\nwhile pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    $COMP_Enabled\n    cairo-dock > /dev/null 2>&1 &\n    sleep 5\n    killall gamemoded &\n    exit\n", "\n# ======================================================================== #\n\n\n# Launch\ncd \"$DIR\"\ngamemoderun WINEPREFIX=\"$WINEPREFIX\" \"$WINE\" \"$EXE\" $ARGS &\necho \"Launching $DIR/$EXE\"\n\n# Before Launch\nwhile ! pgrep -x \"$EXE\" > /dev/null; do sleep 1; done\n    qdbus org.kde.KWin /Compositor suspend\n    killall polybar\n    sleep 5\n    killall lutris\n    killall cairo-dock\n\n# After Launch\nwhile pgrep -x \"$EXE\" > /dev/null; do sleep 1; done\n    qdbus org.kde.KWin /Compositor resume\n    $HOME/Scripts/Bash/Polybar/launch.sh\n    cairo-dock > /dev/null 2>&1 &\n    sleep 5\n    killall gamemoded &\n    exit\n\n\n", "$HOME/Wine/wine_5.21/wine-pfx_mf-dxvk-1.7.2", "/home/govi/Games/PC/Crysis Remastered/Wine", "$HOME/Wine/wine_Proton/Proton-5.21-GE-1/dist/bin/wine", "WINE=\"$DIR/Wine/wine\"\nWINEPREFIX=\"$DIR/Wine/wine-pfx/\"", "WINE=\"$HOME/Wine/wine_Proton/Proton-5.21-GE-1/dist/bin/wine\"\nWINEPREFIX=\"$HOME/Wine/wine_5.21/wine-pfx_mf-dxvk-1.7.2\"", "PROCESS=\"Game.exe\"\n", "CrysisRemastered", "#!/bin/bash\n\n# Current Directory\nDIR=$(dirname \"$(realpath \"$0\")\" | sed -s \"s|/Wine||g\")", "#!/bin/bash\n\n# ======================= # Parameters to modify # ======================= #\n\n# Game Executable Directory\nDIR=$(dirname \"$(realpath \"$0\")\" | sed -s \"s|Wine|Bin64|g\")", "wine-pfx", "wine-pfx_mf-dxvk-1.7.2", "_mf-dxvk-1.7.2", "6.0-RC1", "AMD", "export RADV_PERFTEST=aco # AMD\n", "/-Library-", "wine-build/wine_6.0-RC1/bin", "home/govi", "wine-build/wine_6.0-RC1/bin/wine64", " '/home/govi/Games/PC/Anno 1800/Wine/wine-build/wine_6.0-RC1/bin/wine64'", "/home/govi/Games/PC/Anno 1800/Wine", "# Game Executable\nEXE=\"./bin/x64/Game.exe\"\nPROCESS=\"Game.exe\"\nARGS=\"-vulkan\"", "# Wine Directories\nWINE=\"$DIR/Wine/wine64\"\nWINEPREFIX=\"$DIR/Wine/wine-pfx/\"", "Bin/Win64", " '/home/govi/Games/PC/Anno 1800/Bin/Win64/Anno1800.exe'", "bin/x64/Game.exe", " '/home/govi/Games/PC/Anno 1800/", "Anno1800.ex", "Anno1800", "Game", "-vulkan", "wine-build", "'", "Games", "Epic_Games", "300738", "gameslauncher.exe", "'),", "Match", "Match(title='epicgameslauncher.exe'),\n", "    Match(title='epicgameslauncher.exe'),\n", "[\n    # Run the utility of `xprop` to see the wm class and name of an X client.\n    *layout.Floating.default_float_rules,\n    Match(wm_class='confirmreset'),  # gitk\n    Match(wm_class='makebranch'),  # gitk\n    Match(wm_class='maketag'),  # gitk\n    Match(wm_class='ssh-askpass'),  # ssh-askpass\n    Match(title='branchdialog'),  # gitk\n    Match(title='pinentry'),  # GPG key password entry\n    Match(title='ulauncher'),\n    Match(title='onboard'),\n    Match(title='Transmission'),\n    Match(title='file-roller'),\n    Match(title='epicgameslauncher.exe'),\n    \n]", "epicgameslauncher", "    Match(title='epicgameslauncher.exe'),\n    Match(title='Origin.exe'),", "Match(title='", "Match(title=", "\"Origin.exe\"", "])]),", "Group(\"1\", label=\"\uf269\", layout='max', matches=[Match(wm_class=[\"firefox\", \"lutris\", \"liferea\",\n                                                                       \"epicgameslauncher.exe\", \"Origin.exe\"])]),\n                                                                       \n                                                                       \n          Group(\"2\", label=\"\uf1cb\", layout='monadtall', matches=[Match(wm_class=[\"jetbrains-pycharm-ce-debug\"])]),\n          Group(\"3\", label=\"\uf109\", layout='monadtall'),\n          Group(\"4\", label=\"\uf17c\", layout='monadtall'),\n          Group(\"5\", label=\"\uf1fb\", layout='monadtall'),\n          Group(\"6\", label=\"\uf0c3\", layout='monadtall'),\n          Group(\"7\", label=\"\uf07c\", layout='monadtall'),\n          Group(\"8\", label=\"\uf03e\", layout='floating')", "Group(\"1\", label=\"\uf269\", layout='max', matches=[Match(wm_class=[\"firefox\", \"lutris\", \"liferea\",\n                                                                       \"epicgameslauncher.exe\", \"Origin.exe\"])]),\n                                                                       \n          Group(\"2\", label=\"\uf1cb\", layout='monadtall', matches=[Match(wm_class=[\"jetbrains-pycharm-ce-debug\"])]),\n          Group(\"3\", label=\"\uf109\", layout='monadtall'),\n          Group(\"4\", label=\"\uf17c\", layout='monadtall'),\n          Group(\"5\", label=\"\uf1fb\", layout='monadtall'),\n          Group(\"6\", label=\"\uf0c3\", layout='monadtall'),\n          Group(\"7\", label=\"\uf07c\", layout='monadtall'),\n          Group(\"8\", label=\"\uf03e\", layout='floating')", "                                                                       \n", "Epic Games", "epicgameslauncher.exe", ".exe", " '/home/govi/Games/PC/STAR WARS Battlefront II/Wine/Launch-STAR_WARS_Battlefront_II.sh'", ".", "wine-pfx/drive_c/Games/STAR WARS Battlefront II/", "cd \"\"\n", "# Before Launch\n$COMP_Disabled\nkillall easystroke\nkillall polybar", "polybar", "killall polybar\n", "    $COMP_Disabled\n    sleep 5\n    killall lutris\n    killall cairo-dock", "$COMP_Disabled\nkillall easystroke", "#!/bin/bash\n\n# ======================================================================== #\n\n# Game Directory\nDIR=$(dirname \"$(realpath \"$0\")\")\n\n# Compositor\nCOMP_Disabled=\"killall picom\"\nCOMP_Enabled=\"picom -cCGb\"\n\n# Game Executable\nEXE=\"./starwarsbattlefrontii.exe\"\nPROCESS=\"starwarsbattlef\"\n\n# Wine Directories\nWINE=\"$DIR/wine\"\nWINEPREFIX=\"$DIR/wine-pfx\"\n\n# Environment\nexport WINEDLLOVERRIDES=\"OriginThinSetupInternal.exe=;nvapi,nvapi64=;winedbg.exe=d\"\nexport WINEFSYNC=1\nexport MANGOHUD=1\nexport ENABLE_VKBASALT=0\n\n# ======================================================================== #\n\n# Launch\ncd \"$DIR/wine-pfx/drive_c/Games/STAR WARS Battlefront II/\"\nWINEPREFIX=\"$WINEPREFIX\" \"$WINE\" \"$EXE\"\n\n# Before Launch\n    $COMP_Disabled\n    \n    sleep 5\n    killall lutris\n    killall cairo-dock\n\n# After Launch\nwhile ! pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\nwhile pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    killall EpicGamesLauncher.exe &\n    killall Origin.exe &\n    sleep 5\n    easystroke &\n    ~/.config/polybar/launch.sh &\n    sleep 5\n    killall QtWebEngineProcess.exe &\n    killall lutris &\n    $COMP_Enabled &\n    sleep 5 &\n#    PID=$(pgrep gamemoded)\n#    kill -9 $PID &&\n    exit", "killall easystroke\n", "#!/bin/bash\n\n# Current Directory\nDIR=$(dirname \"$(realpath \"$0\")\" | sed -s \"s|/Wine||g\")\n\n# Game Executable\nEXE=\"./Bin64/CrysisRemastered.exe\"\nPROCESS=\"CrysisRemastered.exe\"\nARGS=\"\"\n\n# Wine Directories\nWINE=\"$DIR/Wine/wine\"\nWINEPREFIX=\"$DIR/Wine/wine-pfx/\"\n\n# Environment\nexport WINEDLLOVERRIDES=\"mscoree,mshtml=\"\nexport WINEFSYNC=1\nexport MANGOHUD=1\nexport ENABLE_VKBASALT=1\nexport __GL_SHADER_DISK_CACHE_SKIP_CLEANUP=1\nexport __GL_SHADER_DISK_CACHE=1\nexport __GL_SHADER_DISK_CACHE_PATH=\"$DIR\"\n# export __GL_THREADED_OPTIMIZATIONS=1 # NVIDIA\n\n# ======================================================================== #\n\n# Chech if the script is in Wine directory\nLAUNCH_GAME=\"$(find \"${DIR}/Wine\" -type f -iname \"Launch-*\")\"\n\nwhile true; do\n    if [ ! -f \"$LAUNCH_GAME\" ]; then clear & sleep 1\n        echo -e '\\nThis Script needs to be in a folder called \"Wine\", with the prename \"Launch-\" (example: Launch-My_Game.sh) inside the Game folder.'\n        [ ! -d \"${DIR}/Wine\" ] &&\n            echo -e \"\\nCreating one in the current directory...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine\"\n        echo -e '\\nPlease, put this script in it and put \"Wine\" folder whatever you want in the Game folder.'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to close this script, make the changes and run it again...\")\"; echo &\n        exit\n\n    else\n        break\n    fi\ndone\n\n# Chech if wine-pfx exist\nwhile true; do\n    if [ ! -f \"${DIR}/Wine/wine-pfx/system.reg\" ]; then clear & sleep 1\n        echo -e \"\\nThere is not a valid wine-pfx folder.\\nThis is neccesary to run this script.\"\n        [ ! -d \"${DIR}/Wine/wine-pfx\" ] &&\n            echo -e \"\\nCreating wine-pfx folder...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine/wine-pfx\"\n        echo -e '\\nPlease, copy a valid wine-prefix in \"wine-pfx\" folder or delete the created folder and create a symlink to a valid wineprefix and call the symlink \"wine-pfx\"'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to continue...\")\"\n\n    elif [ -f \"${DIR}/Wine/wine-pfx/system.reg\" ]; then\n        break\n    fi\ndone\n\n# Chech if wine-build exist\nwhile true; do\n    if [ ! -d \"${DIR}/Wine/wine-build\" ] && [ ! -f \"${DIR}/Wine/wine\" ]; then clear & sleep 1\n        echo -e '\\nThere is not a valid \"wine-build folder\" or symlink to a \"wine\" file\\nThis is neccesary to run this script'\n        [ ! -d \"${DIR}/Wine/wine-build\" ] &&\n            echo -e \"\\nCreating wine-build folder...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine/wine-build\"\n        echo -e '\\nPlease, copy a valid wine-build in \"wine-build\" folder or delete the created folder and create a symlink to a valid \"wine-build\" folder and call the symlink \"wine-build.\\nOr create a symlink to a \"wine\" file\"'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to continue...\")\"\n\n    elif [ -d \"${DIR}/Wine/wine-build\" ]; then\n        WINE_BUILD=$(find -L \"${DIR}/Wine/wine-build\" -type f -iname \"wine\") 2> /dev/null\n        [ -f \"$WINE_BUILD\" ] && ln -sf \"$WINE_BUILD\" \"${DIR}/Wine/wine\" > /dev/null 2>&1\n        break\n\n    elif [ -f \"${DIR}/Wine/wine\" ]; then\n        [ -d \"${DIR}/Wine/wine-build\" ] &&\n            WINE_BUILD=$(find -L \"${DIR}/Wine/wine-build\" -type f -iname \"wine\") 2> /dev/null &&\n            ln -sf \"$WINE_BUILD\" \"${DIR}/Wine/wine\" > /dev/null 2>&1\n        break\n    fi\ndone\n\n# Set wine-build & wineprefix\nWINE=\"$DIR/Wine/wine\"\nWINEPREFIX=\"$DIR/Wine/wine-pfx/\"\n\n# ======================================================================== #\n\n# Launch\ncd \"$DIR\"\ngamemoderun WINEPREFIX=\"$WINEPREFIX\" \"$WINE\" \"$EXE\" $ARGS &\necho -e \"\\nLaunching $DIR/$EXE\\n\" | sed 's/\\.\\///g'\n\n# Before Launch\nwhile ! pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    $COMP_Disabled\n    \n    sleep 5\n    killall lutris\n    killall cairo-dock\n\n# After Launch\nwhile pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    $COMP_Enabled\n    cairo-dock > /dev/null 2>&1 &\n    sleep 5\n    killall gamemoded &\n    exit\n", "#!/bin/bash\n\n# Current Directory\nDIR=$(dirname \"$(realpath \"$0\")\" | sed -s \"s|/Wine||g\")\n\n# Game Executable\nEXE=\"./Bin64/CrysisRemastered.exe\"\nPROCESS=\"CrysisRemastered.exe\"\nARGS=\"\"\n\n# Wine Directories\nWINE=\"$DIR/Wine/wine\"\nWINEPREFIX=\"$DIR/Wine/wine-pfx/\"\n\n# Environment\nexport WINEDLLOVERRIDES=\"mscoree,mshtml=\"\nexport WINEFSYNC=1\nexport MANGOHUD=1\nexport ENABLE_VKBASALT=1\nexport __GL_SHADER_DISK_CACHE_SKIP_CLEANUP=1\nexport __GL_SHADER_DISK_CACHE=1\nexport __GL_SHADER_DISK_CACHE_PATH=\"$DIR\"\n# export __GL_THREADED_OPTIMIZATIONS=1 # NVIDIA\n\n# ======================================================================== #\n\n# Chech if the script is in Wine directory\nLAUNCH_GAME=\"$(find \"${DIR}/Wine\" -type f -iname \"Launch-*\")\"\n\nwhile true; do\n    if [ ! -f \"$LAUNCH_GAME\" ]; then clear & sleep 1\n        echo -e '\\nThis Script needs to be in a folder called \"Wine\", with the prename \"Launch-\" (example: Launch-My_Game.sh) inside the Game folder.'\n        [ ! -d \"${DIR}/Wine\" ] &&\n            echo -e \"\\nCreating one in the current directory...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine\"\n        echo -e '\\nPlease, put this script in it and put \"Wine\" folder whatever you want in the Game folder.'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to close this script, make the changes and run it again...\")\"; echo &\n        exit\n\n    else\n        break\n    fi\ndone\n\n# Chech if wine-pfx exist\nwhile true; do\n    if [ ! -f \"${DIR}/Wine/wine-pfx/system.reg\" ]; then clear & sleep 1\n        echo -e \"\\nThere is not a valid wine-pfx folder.\\nThis is neccesary to run this script.\"\n        [ ! -d \"${DIR}/Wine/wine-pfx\" ] &&\n            echo -e \"\\nCreating wine-pfx folder...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine/wine-pfx\"\n        echo -e '\\nPlease, copy a valid wine-prefix in \"wine-pfx\" folder or delete the created folder and create a symlink to a valid wineprefix and call the symlink \"wine-pfx\"'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to continue...\")\"\n\n    elif [ -f \"${DIR}/Wine/wine-pfx/system.reg\" ]; then\n        break\n    fi\ndone\n\n# Chech if wine-build exist\nwhile true; do\n    if [ ! -d \"${DIR}/Wine/wine-build\" ] && [ ! -f \"${DIR}/Wine/wine\" ]; then clear & sleep 1\n        echo -e '\\nThere is not a valid \"wine-build folder\" or symlink to a \"wine\" file\\nThis is neccesary to run this script'\n        [ ! -d \"${DIR}/Wine/wine-build\" ] &&\n            echo -e \"\\nCreating wine-build folder...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine/wine-build\"\n        echo -e '\\nPlease, copy a valid wine-build in \"wine-build\" folder or delete the created folder and create a symlink to a valid \"wine-build\" folder and call the symlink \"wine-build.\\nOr create a symlink to a \"wine\" file\"'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to continue...\")\"\n\n    elif [ -d \"${DIR}/Wine/wine-build\" ]; then\n        WINE_BUILD=$(find -L \"${DIR}/Wine/wine-build\" -type f -iname \"wine\") 2> /dev/null\n        [ -f \"$WINE_BUILD\" ] && ln -sf \"$WINE_BUILD\" \"${DIR}/Wine/wine\" > /dev/null 2>&1\n        break\n\n    elif [ -f \"${DIR}/Wine/wine\" ]; then\n        [ -d \"${DIR}/Wine/wine-build\" ] &&\n            WINE_BUILD=$(find -L \"${DIR}/Wine/wine-build\" -type f -iname \"wine\") 2> /dev/null &&\n            ln -sf \"$WINE_BUILD\" \"${DIR}/Wine/wine\" > /dev/null 2>&1\n        break\n    fi\ndone\n\n# Set wine-build & wineprefix\nWINE=\"$DIR/Wine/wine\"\nWINEPREFIX=\"$DIR/Wine/wine-pfx/\"\n\n# ======================================================================== #\n\n# Launch\ncd \"$DIR\"\ngamemoderun WINEPREFIX=\"$WINEPREFIX\" \"$WINE\" \"$EXE\" $ARGS &\necho -e \"\\nLaunching $DIR/$EXE\\n\" | sed 's/\\.\\///g'\n\n# Before Launch\nwhile ! pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    $COMP_Disabled\n    killall easystroke\n    sleep 5\n    killall lutris\n    killall cairo-dock\n\n# After Launch\nwhile pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    $COMP_Enabled\n    cairo-dock > /dev/null 2>&1 &\n    \n    sleep 5\n    killall gamemoded &\n    exit\n", "    killall ", "# Before Launch\nwhile ! pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    $COMP_Disabled\n    killall easystroke\n    sleep 5\n    killall lutris\n    killall cairo-dock\n\n# After Launch\nwhile pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    $COMP_Enabled\n    cairo-dock > /dev/null 2>&1 &\n    easystroke &\n    sleep 5\n    killall gamemoded &\n    exit", "$DIR", "'s/\\.\\///g'", "echo -e \"\\nLaunching $DIR/$EXE\\n\" | sed 's/\\.\\///g'\n", "#!/bin/bash\n\n# Current Directory\nDIR=$(dirname \"$(realpath \"$0\")\" | sed -s \"s|/Wine||g\")\n\n# Compositor\nCOMP_Disabled=\"killall picom\"\nCOMP_Enabled=\"picom -cCGb\"\n\n# Game Executable\nEXE=\"./bin/x64/Game.exe\"\nPROCESS=\"Game.exe\"\nARGS=\"-vulkan\"\n\n# Environment\nexport WINEDLLOVERRIDES=\"mscoree,mshtml=\"\nexport WINEFSYNC=1\nexport MANGOHUD=1\nexport ENABLE_VKBASALT=1\nexport __GL_SHADER_DISK_CACHE_SKIP_CLEANUP=1\nexport __GL_SHADER_DISK_CACHE=1\nexport __GL_SHADER_DISK_CACHE_PATH=\"$DIR\"\n# export __GL_THREADED_OPTIMIZATIONS=1 # NVIDIA\n\n# ======================================================================== #\n\n# Chech if the script is in Wine directory\nLAUNCH_GAME=\"$(find \"${DIR}/Wine\" -type f -iname \"Launch-*\")\"\n\nwhile true; do\n    if [ ! -f \"$LAUNCH_GAME\" ]; then clear & sleep 1\n        echo -e '\\nThis Script needs to be in a folder called \"Wine\", with the prename \"Launch-\" (example: Launch-My_Game.sh) inside the Game folder.'\n        [ ! -d \"${DIR}/Wine\" ] &&\n            echo -e \"\\nCreating one in the current directory...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine\"\n        echo -e '\\nPlease, put this script in it and put \"Wine\" folder whatever you want in the Game folder.'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to close this script, make the changes and run it again...\")\"; echo &\n        exit\n\n    else\n        break\n    fi\ndone\n\n# Chech if wine-pfx exist\nwhile true; do\n    if [ ! -f \"${DIR}/Wine/wine-pfx/system.reg\" ]; then clear & sleep 1\n        echo -e \"\\nThere is not a valid wine-pfx folder.\\nThis is neccesary to run this script.\"\n        [ ! -d \"${DIR}/Wine/wine-pfx\" ] &&\n            echo -e \"\\nCreating wine-pfx folder...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine/wine-pfx\"\n        echo -e '\\nPlease, copy a valid wine-prefix in \"wine-pfx\" folder or delete the created folder and create a symlink to a valid wineprefix and call the symlink \"wine-pfx\"'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to continue...\")\"\n\n    elif [ -f \"${DIR}/Wine/wine-pfx/system.reg\" ]; then\n        break\n    fi\ndone\n\n# Chech if wine-build exist\nwhile true; do\n    if [ ! -d \"${DIR}/Wine/wine-build\" ] && [ ! -f \"${DIR}/Wine/wine\" ]; then clear & sleep 1\n        echo -e '\\nThere is not a valid \"wine-build folder\" or symlink to a \"wine\" file\\nThis is neccesary to run this script'\n        [ ! -d \"${DIR}/Wine/wine-build\" ] &&\n            echo -e \"\\nCreating wine-build folder...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine/wine-build\"\n        echo -e '\\nPlease, copy a valid wine-build in \"wine-build\" folder or delete the created folder and create a symlink to a valid \"wine-build\" folder and call the symlink \"wine-build.\\nOr create a symlink to a \"wine\" file\"'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to continue...\")\"\n\n    elif [ -d \"${DIR}/Wine/wine-build\" ]; then\n        WINE_BUILD=$(find -L \"${DIR}/Wine/wine-build\" -type f -iname \"wine\") 2> /dev/null\n        [ -f \"$WINE_BUILD\" ] && ln -sf \"$WINE_BUILD\" \"${DIR}/Wine/wine\" > /dev/null 2>&1\n        break\n\n    elif [ -f \"${DIR}/Wine/wine\" ]; then\n        [ -d \"${DIR}/Wine/wine-build\" ] &&\n            WINE_BUILD=$(find -L \"${DIR}/Wine/wine-build\" -type f -iname \"wine\") 2> /dev/null &&\n            ln -sf \"$WINE_BUILD\" \"${DIR}/Wine/wine\" > /dev/null 2>&1\n        break\n    fi\ndone\n\n# Set wine-build & wineprefix\nWINE=\"$DIR/Wine/wine\"\nWINEPREFIX=\"$DIR/Wine/wine-pfx/\"\n\n# ======================================================================== #\n\n# Launch\ncd \"$DIR\"\n\ngamemoderun WINEPREFIX=\"$WINEPREFIX\" \"$WINE\" \"$EXE\" $ARGS\n\n# Before Launch\nwhile ! pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    $COMP_Disabled\n    sleep 5\n    killall lutris\n    killall cairo-dock\n\n# After Launch\nwhile pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    $COMP_Enabled\n    cairo-dock > /dev/null 2>&1 &\n    sleep 5\n    killall gamemoded &\n    exit\n", "30", "sleep 60", " ", "&&", "-9", "ps -ef | awk '$0 ~ /.*exe/ {print}'", " KIL", "KILL_PROCESS", " '{print $2}' | xargs -r kill -9", "ps -ef | awk '/exe/ {print $2}'", "rint $2}')", " | xargs kill -9", "$ k", "kill -9 $(ps -ef | awk '/exe/ {print $2}')", "kill", "     | xargs kill -9\n", "$", "kill -9 $(ps -ef | awk '/exe/ {print $2}')    killall gamemoded &\n", "    kill -9 $(ps -ef | awk '/exe/ {print $2}')    killall gamemoded &\n", "        killall gamemoded &\n", "$(ps -ef | awk '/exe/ {print $2}')", " '/home/govi/Programs/Adobe/Wine/wine'", " '/home/govi/Downloads/Adobe Photoshop 2021 v22.2.0.183 (x64) Multilingual (Pre-Activated) [FileCR]/Set-up.exe'", "\"", "wine64", "64", "bin/wine", "/Datos/Games", "/home/gov", "wine", "/home/govi/", "/bin/wine", "/home/govi", "$1", "#!/bin/bash\n\n# Current Directory\nDIR=$(dirname \"$(realpath \"$0\")\" | sed -s \"s|/Wine||g\")\n\n# Compositor\nCOMP_Disabled=\"killall picom\"\nCOMP_Enabled=\"picom -cCGb\"\n\n# Game Executable\nEXE=\"./bin/x64/Game.exe\"\nPROCESS=\"Game.exe\"\nARGS=\"-vulkan\"\n\n# Environment\nexport WINEDLLOVERRIDES=\"mscoree,mshtml=\"\nexport WINEFSYNC=1\nexport MANGOHUD=1\nexport ENABLE_VKBASALT=1\nexport __GL_SHADER_DISK_CACHE_SKIP_CLEANUP=1\nexport __GL_SHADER_DISK_CACHE=1\nexport __GL_SHADER_DISK_CACHE_PATH=\"$DIR\"\n# export __GL_THREADED_OPTIMIZATIONS=1 # NVIDIA\n\n# ======================================================================== #\n\n# Chech if the script is in Wine directory\nLAUNCH_GAME=\"$(find \"${DIR}/Wine\" -type f -iname \"Launch-*\")\"\n\nwhile true; do\n    if [ ! -f \"$LAUNCH_GAME\" ]; then clear & sleep 1\n        echo -e '\\nThis Script needs to be in a folder called \"Wine\", with the prename \"Launch-\" (example: Launch-My_Game.sh) inside the Game folder.'\n        [ ! -d \"${DIR}/Wine\" ] &&\n            echo -e \"\\nCreating one in the current directory...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine\"\n        echo -e '\\nPlease, put this script in it and put \"Wine\" folder whatever you want in the Game folder.'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to close this script, make the changes and run it again...\")\"; echo &\n        exit\n\n    else\n        break\n    fi\ndone\n\n# Chech if wine-pfx exist\nwhile true; do\n    if [ ! -f \"${DIR}/Wine/wine-pfx/system.reg\" ]; then clear & sleep 1\n        echo -e \"\\nThere is not a valid wine-pfx folder.\\nThis is neccesary to run this script.\"\n        [ ! -d \"${DIR}/Wine/wine-pfx\" ] &&\n            echo -e \"\\nCreating wine-pfx folder...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine/wine-pfx\"\n        echo -e '\\nPlease, copy a valid wine-prefix in \"wine-pfx\" folder or delete the created folder and create a symlink to a valid wineprefix and call the symlink \"wine-pfx\"'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to continue...\")\"\n\n    elif [ -f \"${DIR}/Wine/wine-pfx/system.reg\" ]; then\n        break\n    fi\ndone\n\n# Chech if wine-build exist\nwhile true; do\n    if [ ! -d \"${DIR}/Wine/wine-build\" ] && [ ! -f \"${DIR}/Wine/wine\" ]; then clear & sleep 1\n        echo -e '\\nThere is not a valid \"wine-build folder\" or symlink to a \"wine\" file\\nThis is neccesary to run this script'\n        [ ! -d \"${DIR}/Wine/wine-build\" ] &&\n            echo -e \"\\nCreating wine-build folder...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine/wine-build\"\n        echo -e '\\nPlease, copy a valid wine-build in \"wine-build\" folder or delete the created folder and create a symlink to a valid \"wine-build\" folder and call the symlink \"wine-build.\\nOr create a symlink to a \"wine\" file\"'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to continue...\")\"\n\n    elif [ -d \"${DIR}/Wine/wine-build\" ]; then\n        WINE_BUILD=$(find -L \"${DIR}/Wine/wine-build\" -type f -iname \"wine\") 2> /dev/null\n        [ -f \"$WINE_BUILD\" ] && ln -sf \"$WINE_BUILD\" \"${DIR}/Wine/wine\" > /dev/null 2>&1\n        break\n\n    elif [ -f \"${DIR}/Wine/wine\" ]; then\n        [ -d \"${DIR}/Wine/wine-build\" ] &&\n            WINE_BUILD=$(find -L \"${DIR}/Wine/wine-build\" -type f -iname \"wine\") 2> /dev/null &&\n            ln -sf \"$WINE_BUILD\" \"${DIR}/Wine/wine\" > /dev/null 2>&1\n        break\n    fi\ndone\n\n# Set wine-build & wineprefix\nWINE=\"$DIR/Wine/wine\"\nWINEPREFIX=\"$DIR/Wine/wine-pfx/\"\n\n# ======================================================================== #\n\n# Launch\n\ncd \"$DIR\"\necho -e \"\\nLaunching $DIR/$EXE\\n\" | sed 's/\\.\\///g'\ngamemoderun WINEPREFIX=\"$WINEPREFIX\" \"$WINE\" \"$EXE\" $ARGS\n\npgrep -x $PROCESS || sleep 60 || exit\n\n# Before Launch\nwhile ! pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    $COMP_Disabled\n    sleep 5\n    killall lutris\n    killall cairo-dock\n\n# After Launch\nwhile pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    $COMP_Enabled\n    cairo-dock > /dev/null 2>&1 &\n    sleep 5\n    kill -9 $(ps -e | awk '/exe/ {print $1}')\n    killall gamemoded &\n    exit\n", "#!/bin/bash\n\n# ======================================================================== #\n\n# Game Directory\nDIR=$(dirname \"$(realpath \"$0\")\" | sed -s \"s|/Wine||g\")\n\n# Game Executable\nEXE=\"./sekiro.exe\"\nPROCESS=\"sekiro.exe\"\nARGS=\"\"\n\n# Wine Directories\nWINE=\"$DIR/Wine/wine\"\nWINEPREFIX=\"$DIR/Wine/wine-pfx/\"\n\n# Environment\nexport WINEDLLOVERRIDES=\"mscoree,mshtml=\"\nexport WINEFSYNC=1\nexport MANGOHUD=1\nexport ENABLE_VKBASALT=1\n\n# ======================================================================== #\n\n# Launch\n\ncd \"$DIR\"\ngamemoderun WINEPREFIX=\"$WINEPREFIX\" \"$WINE\" \"$EXE\" $ARGS &\necho \"Launching $DIR/$EXE\"\n\n# Before Launch\nwhile ! pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    qdbus org.kde.KWin /Compositor suspend\n    killall polybar\n    sleep 5\n    killall lutris\n    killall cairo-dock\n\n# After Launch\nwhile pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    qdbus org.kde.KWin /Compositor resume\n    $HOME/Scripts/Bash/Polybar/launch.sh\n    cairo-dock > /dev/null 2>&1 &\n    sleep 5\n    killall gamemoded &\n    exit\n\n# ======================================================================== #\n", "ps", "    kill -9 $(ps -e | awk '/exe/ {print $1}')\n", "e", "kill -9 $(ps -e | awk '/exe/ {print $1}')\n", ", mouse_callbacks={'Button1': lambda: qtile.cmd_spawn('alacritty sudo pacman -Syu')}", ", ", "cmd_spawn", "                                                                     mouse_callbacks={'Button1': lambda: qtile.cmd_spawn('alacritty sudo pacman -Syu')}\n", ")", ", mouse_callbacks={'Button1': lambda: qtile.cmd_spawn('alacritty paru -Syua --skipreview')}", ":", ", mouse_callbacks={'Button1': lambda: qtile.cmd_spawn('alacritty paru -Syua --skipreview')}\n", "    , mouse_callbacks={'Button1': lambda: qtile.cmd_spawn('alacritty paru -Syua --skipreview')}\n", "$EXE", "echo \"Launching $DIR/$EXE\"\n", "#!/bin/bash\n\n# ======================================================================== #\n\n# Game Directory\nDIR=$(dirname \"$(realpath \"$0\")\" | sed -s \"s|/Wine||g\")\n\n# Game Executable\nEXE=\"./sekiro.exe\"\nPROCESS=\"sekiro.exe\"\nARGS=\"\"\n\n# Wine Directories\nWINE=\"$DIR/Wine/wine\"\nWINEPREFIX=\"$DIR/Wine/wine-pfx/\"\n\n# Environment\nexport WINEDLLOVERRIDES=\"mscoree,mshtml=\"\nexport WINEFSYNC=1\nexport MANGOHUD=1\nexport ENABLE_VKBASALT=1\n\n# ======================================================================== #\n\n# Launch\nkill -9 $(ps -e | awk '/exe/ {print $1}')\ncd \"$DIR\"\n\ngamemoderun WINEPREFIX=\"$WINEPREFIX\" \"$WINE\" \"$EXE\" $ARGS\n\n# Before Launch\nwhile ! pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    qdbus org.kde.KWin /Compositor suspend\n    killall polybar\n    sleep 5\n    killall lutris\n    killall cairo-dock\n\n# After Launch\nwhile pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    qdbus org.kde.KWin /Compositor resume\n    $HOME/Scripts/Bash/Polybar/launch.sh\n    cairo-dock > /dev/null 2>&1 &\n    sleep 5\n    killall gamemoded &\n    exit\n\n# ======================================================================== #\n", "# Compositor\nCOMP_Disabled=\"killall picom\"\nCOMP_Enabled=\"picom -cCGb\"", "#!/bin/bash\n\n# Current Directory\nDIR=$(dirname \"$(realpath \"$0\")\" | sed -s \"s|/Wine||g\")\n\n# Compositor\nCOMP_Disabled=\"killall picom\"\nCOMP_Enabled=\"picom -cCGb\"", "#!/bin/bash\n\n# ======================================================================== #\n\n# Game Directory\nDIR=$(dirname \"$(realpath \"$0\")\" | sed -s \"s|/Wine||g\")", "export __GL_SHADER_DISK_CACHE_SKIP_CLEANUP=1\nexport __GL_SHADER_DISK_CACHE=1\nexport __GL_SHADER_DISK_CACHE_PATH=\"$DIR\"\n# export __GL_THREADED_OPTIMIZATIONS=1 # NVIDIA\n\n# ======================================================================== #\n\n# Chech if the script is in Wine directory\nLAUNCH_GAME=\"$(find \"${DIR}/Wine\" -type f -iname \"Launch-*\")\"\n\nwhile true; do\n    if [ ! -f \"$LAUNCH_GAME\" ]; then clear & sleep 1\n        echo -e '\\nThis Script needs to be in a folder called \"Wine\", with the prename \"Launch-\" (example: Launch-My_Game.sh) inside the Game folder.'\n        [ ! -d \"${DIR}/Wine\" ] &&\n            echo -e \"\\nCreating one in the current directory...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine\"\n        echo -e '\\nPlease, put this script in it and put \"Wine\" folder whatever you want in the Game folder.'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to close this script, make the changes and run it again...\")\"; echo &\n        exit\n\n    else\n        break\n    fi\ndone\n\n# Chech if wine-pfx exist\nwhile true; do\n    if [ ! -f \"${DIR}/Wine/wine-pfx/system.reg\" ]; then clear & sleep 1\n        echo -e \"\\nThere is not a valid wine-pfx folder.\\nThis is neccesary to run this script.\"\n        [ ! -d \"${DIR}/Wine/wine-pfx\" ] &&\n            echo -e \"\\nCreating wine-pfx folder...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine/wine-pfx\"\n        echo -e '\\nPlease, copy a valid wine-prefix in \"wine-pfx\" folder or delete the created folder and create a symlink to a valid wineprefix and call the symlink \"wine-pfx\"'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to continue...\")\"\n\n    elif [ -f \"${DIR}/Wine/wine-pfx/system.reg\" ]; then\n        break\n    fi\ndone\n\n# Chech if wine-build exist\nwhile true; do\n    if [ ! -d \"${DIR}/Wine/wine-build\" ] && [ ! -f \"${DIR}/Wine/wine\" ]; then clear & sleep 1\n        echo -e '\\nThere is not a valid \"wine-build folder\" or symlink to a \"wine\" file\\nThis is neccesary to run this script'\n        [ ! -d \"${DIR}/Wine/wine-build\" ] &&\n            echo -e \"\\nCreating wine-build folder...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine/wine-build\"\n        echo -e '\\nPlease, copy a valid wine-build in \"wine-build\" folder or delete the created folder and create a symlink to a valid \"wine-build\" folder and call the symlink \"wine-build.\\nOr create a symlink to a \"wine\" file\"'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to continue...\")\"\n\n    elif [ -d \"${DIR}/Wine/wine-build\" ]; then\n        WINE_BUILD=$(find -L \"${DIR}/Wine/wine-build\" -type f -iname \"wine\") 2> /dev/null\n        [ -f \"$WINE_BUILD\" ] && ln -sf \"$WINE_BUILD\" \"${DIR}/Wine/wine\" > /dev/null 2>&1\n        break\n\n    elif [ -f \"${DIR}/Wine/wine\" ]; then\n        [ -d \"${DIR}/Wine/wine-build\" ] &&\n            WINE_BUILD=$(find -L \"${DIR}/Wine/wine-build\" -type f -iname \"wine\") 2> /dev/null &&\n            ln -sf \"$WINE_BUILD\" \"${DIR}/Wine/wine\" > /dev/null 2>&1\n        break\n    fi\ndone\n\n# Set wine-build & wineprefix\nWINE=\"$DIR/Wine/wine\"\nWINEPREFIX=\"$DIR/Wine/wine-pfx/\"\n\n# ======================================================================== #\n\n# Launch\nkill -9 $(ps -e | awk '/exe/ {print $1}')\ncd \"$DIR\"\necho -e \"\\nLaunching $DIR/$EXE\\n\" | sed 's/\\.\\///g'\ngamemoderun WINEPREFIX=\"$WINEPREFIX\" \"$WINE\" \"$EXE\" $ARGS\n\npgrep -x $PROCESS || sleep 60 || exit\n\n# Before Launch\nwhile ! pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    $COMP_Disabled\n    sleep 5\n    killall lutris\n    killall cairo-dock\n\n# After Launch\nwhile pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    $COMP_Enabled\n    cairo-dock > /dev/null 2>&1 &\n    sleep 5\n    kill -9 $(ps -e | awk '/exe/ {print $1}')\n    killall gamemoded &\n    exit\n", "\n# ======================================================================== #\n\n# Launch\nkill -9 $(ps -e | awk '/exe/ {print $1}')\ncd \"$DIR\"\necho \"Launching $DIR/$EXE\"\ngamemoderun WINEPREFIX=\"$WINEPREFIX\" \"$WINE\" \"$EXE\" $ARGS\n\n# Before Launch\nwhile ! pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    qdbus org.kde.KWin /Compositor suspend\n    killall polybar\n    sleep 5\n    killall lutris\n    killall cairo-dock\n\n# After Launch\nwhile pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    qdbus org.kde.KWin /Compositor resume\n    $HOME/Scripts/Bash/Polybar/launch.sh\n    cairo-dock > /dev/null 2>&1 &\n    sleep 5\n    killall gamemoded &\n    exit\n\n# ======================================================================== #", "KILL", "$KILL", "    sleep 5", "sleep", "#!/bin/bash\n\n# Current Directory\nDIR=$(dirname \"$(realpath \"$0\")\" | sed -s \"s|/Wine||g\")\n\n# Compositor\nCOMP_Disabled=\"killall picom\"\nCOMP_Enabled=\"picom -cCGb\"\n\n# Game Executable\nEXE=\"./bin/x64/Game.exe\"\nPROCESS=\"Game.exe\"\nARGS=\"-vulkan\"\n\n# Environment\nexport WINEDLLOVERRIDES=\"mscoree,mshtml=\"\nexport WINEFSYNC=1\nexport MANGOHUD=1\nexport ENABLE_VKBASALT=1\nexport __GL_SHADER_DISK_CACHE_SKIP_CLEANUP=1\nexport __GL_SHADER_DISK_CACHE=1\nexport __GL_SHADER_DISK_CACHE_PATH=\"$DIR\"\n# export __GL_THREADED_OPTIMIZATIONS=1 # NVIDIA\n\n# ======================================================================== #\n\n# Chech if the script is in Wine directory\nLAUNCH_GAME=\"$(find \"${DIR}/Wine\" -type f -iname \"Launch-*\")\"\n\nwhile true; do\n    if [ ! -f \"$LAUNCH_GAME\" ]; then clear & sleep 1\n        echo -e '\\nThis Script needs to be in a folder called \"Wine\", with the prename \"Launch-\" (example: Launch-My_Game.sh) inside the Game folder.'\n        [ ! -d \"${DIR}/Wine\" ] &&\n            echo -e \"\\nCreating one in the current directory...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine\"\n        echo -e '\\nPlease, put this script in it and put \"Wine\" folder whatever you want in the Game folder.'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to close this script, make the changes and run it again...\")\"; echo &\n        exit\n\n    else\n        break\n    fi\ndone\n\n# Chech if wine-pfx exist\nwhile true; do\n    if [ ! -f \"${DIR}/Wine/wine-pfx/system.reg\" ]; then clear & sleep 1\n        echo -e \"\\nThere is not a valid wine-pfx folder.\\nThis is neccesary to run this script.\"\n        [ ! -d \"${DIR}/Wine/wine-pfx\" ] &&\n            echo -e \"\\nCreating wine-pfx folder...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine/wine-pfx\"\n        echo -e '\\nPlease, copy a valid wine-prefix in \"wine-pfx\" folder or delete the created folder and create a symlink to a valid wineprefix and call the symlink \"wine-pfx\"'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to continue...\")\"\n\n    elif [ -f \"${DIR}/Wine/wine-pfx/system.reg\" ]; then\n        break\n    fi\ndone\n\n# Chech if wine-build exist\nwhile true; do\n    if [ ! -d \"${DIR}/Wine/wine-build\" ] && [ ! -f \"${DIR}/Wine/wine\" ]; then clear & sleep 1\n        echo -e '\\nThere is not a valid \"wine-build folder\" or symlink to a \"wine\" file\\nThis is neccesary to run this script'\n        [ ! -d \"${DIR}/Wine/wine-build\" ] &&\n            echo -e \"\\nCreating wine-build folder...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine/wine-build\"\n        echo -e '\\nPlease, copy a valid wine-build in \"wine-build\" folder or delete the created folder and create a symlink to a valid \"wine-build\" folder and call the symlink \"wine-build.\\nOr create a symlink to a \"wine\" file\"'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to continue...\")\"\n\n    elif [ -d \"${DIR}/Wine/wine-build\" ]; then\n        WINE_BUILD=$(find -L \"${DIR}/Wine/wine-build\" -type f -iname \"wine\") 2> /dev/null\n        [ -f \"$WINE_BUILD\" ] && ln -sf \"$WINE_BUILD\" \"${DIR}/Wine/wine\" > /dev/null 2>&1\n        break\n\n    elif [ -f \"${DIR}/Wine/wine\" ]; then\n        [ -d \"${DIR}/Wine/wine-build\" ] &&\n            WINE_BUILD=$(find -L \"${DIR}/Wine/wine-build\" -type f -iname \"wine\") 2> /dev/null &&\n            ln -sf \"$WINE_BUILD\" \"${DIR}/Wine/wine\" > /dev/null 2>&1\n        break\n    fi\ndone\n\n# Set wine-build & wineprefix\nWINE=\"$DIR/Wine/wine\"\nWINEPREFIX=\"$DIR/Wine/wine-pfx/\"\n\n# ======================================================================== #\n\nKILL=\"kill -9 $(ps -e | awk '/exe/ {print $1}')\"\n\n# Launch\n$KILL\ncd \"$DIR\"\necho -e \"\\nLaunching $DIR/$EXE\\n\" | sed 's/\\.\\///g'\ngamemoderun WINEPREFIX=\"$WINEPREFIX\" \"$WINE\" \"$EXE\" $ARGS\n\npgrep -x $PROCESS || sleep 60 || $KILL || exit\n\n# Before Launch\nwhile ! pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    $COMP_Disabled\n    sleep 5\n    killall lutris\n    killall cairo-dock\n\n# After Launch\nwhile pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    \n    $COMP_Enabled\n    cairo-dock > /dev/null 2>&1 &\n    $KILL\n    killall gamemoded &\n    exit\n", "    sleep 5\n", "#!/bin/bash\n\n# Current Directory\nDIR=$(dirname \"$(realpath \"$0\")\" | sed -s \"s|/Wine||g\")\n\n# Compositor\nCOMP_Disabled=\"killall picom\"\nCOMP_Enabled=\"picom -cCGb\"\n\n# Game Executable\nEXE=\"./bin/x64/Game.exe\"\nPROCESS=\"Game.exe\"\nARGS=\"-vulkan\"\n\n# Environment\nexport WINEDLLOVERRIDES=\"mscoree,mshtml=\"\nexport WINEFSYNC=1\nexport MANGOHUD=1\nexport ENABLE_VKBASALT=1\nexport __GL_SHADER_DISK_CACHE_SKIP_CLEANUP=1\nexport __GL_SHADER_DISK_CACHE=1\nexport __GL_SHADER_DISK_CACHE_PATH=\"$DIR\"\n# export __GL_THREADED_OPTIMIZATIONS=1 # NVIDIA\n\n# ======================================================================== #\n\n# Chech if the script is in Wine directory\nLAUNCH_GAME=\"$(find \"${DIR}/Wine\" -type f -iname \"Launch-*\")\"\n\nwhile true; do\n    if [ ! -f \"$LAUNCH_GAME\" ]; then clear & sleep 1\n        echo -e '\\nThis Script needs to be in a folder called \"Wine\", with the prename \"Launch-\" (example: Launch-My_Game.sh) inside the Game folder.'\n        [ ! -d \"${DIR}/Wine\" ] &&\n            echo -e \"\\nCreating one in the current directory...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine\"\n        echo -e '\\nPlease, put this script in it and put \"Wine\" folder whatever you want in the Game folder.'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to close this script, make the changes and run it again...\")\"; echo &\n        exit\n\n    else\n        break\n    fi\ndone\n\n# Chech if wine-pfx exist\nwhile true; do\n    if [ ! -f \"${DIR}/Wine/wine-pfx/system.reg\" ]; then clear & sleep 1\n        echo -e \"\\nThere is not a valid wine-pfx folder.\\nThis is neccesary to run this script.\"\n        [ ! -d \"${DIR}/Wine/wine-pfx\" ] &&\n            echo -e \"\\nCreating wine-pfx folder...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine/wine-pfx\"\n        echo -e '\\nPlease, copy a valid wine-prefix in \"wine-pfx\" folder or delete the created folder and create a symlink to a valid wineprefix and call the symlink \"wine-pfx\"'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to continue...\")\"\n\n    elif [ -f \"${DIR}/Wine/wine-pfx/system.reg\" ]; then\n        break\n    fi\ndone\n\n# Chech if wine-build exist\nwhile true; do\n    if [ ! -d \"${DIR}/Wine/wine-build\" ] && [ ! -f \"${DIR}/Wine/wine\" ]; then clear & sleep 1\n        echo -e '\\nThere is not a valid \"wine-build folder\" or symlink to a \"wine\" file\\nThis is neccesary to run this script'\n        [ ! -d \"${DIR}/Wine/wine-build\" ] &&\n            echo -e \"\\nCreating wine-build folder...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine/wine-build\"\n        echo -e '\\nPlease, copy a valid wine-build in \"wine-build\" folder or delete the created folder and create a symlink to a valid \"wine-build\" folder and call the symlink \"wine-build.\\nOr create a symlink to a \"wine\" file\"'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to continue...\")\"\n\n    elif [ -d \"${DIR}/Wine/wine-build\" ]; then\n        WINE_BUILD=$(find -L \"${DIR}/Wine/wine-build\" -type f -iname \"wine\") 2> /dev/null\n        [ -f \"$WINE_BUILD\" ] && ln -sf \"$WINE_BUILD\" \"${DIR}/Wine/wine\" > /dev/null 2>&1\n        break\n\n    elif [ -f \"${DIR}/Wine/wine\" ]; then\n        [ -d \"${DIR}/Wine/wine-build\" ] &&\n            WINE_BUILD=$(find -L \"${DIR}/Wine/wine-build\" -type f -iname \"wine\") 2> /dev/null &&\n            ln -sf \"$WINE_BUILD\" \"${DIR}/Wine/wine\" > /dev/null 2>&1\n        break\n    fi\ndone\n\n# Set wine-build & wineprefix\nWINE=\"$DIR/Wine/wine\"\nWINEPREFIX=\"$DIR/Wine/wine-pfx/\"\n\n# ======================================================================== #\n\nKILL=\"kill -9 $(ps -e | awk '/exe/ {print $1}')\"\n\n# Launch\n$KILL\ncd \"$DIR\"\necho -e \"\\nLaunching $DIR/$EXE\\n\" | sed 's/\\.\\///g'\ngamemoderun WINEPREFIX=\"$WINEPREFIX\" \"$WINE\" \"$EXE\" $ARGS\n\npgrep -x $PROCESS || sleep 60 || $KILL || exit\n\n# Before Launch\nwhile ! pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    $COMP_Disabled\n    sleep 5\n    killall lutris\n    killall cairo-dock\n\n# After Launch\nwhile pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    $COMP_Enabled\n    cairo-dock > /dev/null 2>&1 &\n    $KILL\n    \n    killall gamemoded &\n    exit\n", "    \n", "#!/bin/bash\n\n# Current Directory\nDIR=$(dirname \"$(realpath \"$0\")\" | sed -s \"s|/Wine||g\")\n\n# Compositor\nCOMP_Disabled=\"killall picom\"\nCOMP_Enabled=\"picom -cCGb\"\n\n# Game Executable\nEXE=\"./bin/x64/Game.exe\"\nPROCESS=\"Game.exe\"\nARGS=\"-vulkan\"\n\n# Environment\nexport WINEDLLOVERRIDES=\"mscoree,mshtml=\"\nexport WINEFSYNC=1\nexport MANGOHUD=1\nexport ENABLE_VKBASALT=1\nexport __GL_SHADER_DISK_CACHE_SKIP_CLEANUP=1\nexport __GL_SHADER_DISK_CACHE=1\nexport __GL_SHADER_DISK_CACHE_PATH=\"$DIR\"\n# export __GL_THREADED_OPTIMIZATIONS=1 # NVIDIA\n\n# ======================================================================== #\n\n# Chech if the script is in Wine directory\nLAUNCH_GAME=\"$(find \"${DIR}/Wine\" -type f -iname \"Launch-*\")\"\n\nwhile true; do\n    if [ ! -f \"$LAUNCH_GAME\" ]; then clear & sleep 1\n        echo -e '\\nThis Script needs to be in a folder called \"Wine\", with the prename \"Launch-\" (example: Launch-My_Game.sh) inside the Game folder.'\n        [ ! -d \"${DIR}/Wine\" ] &&\n            echo -e \"\\nCreating one in the current directory...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine\"\n        echo -e '\\nPlease, put this script in it and put \"Wine\" folder whatever you want in the Game folder.'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to close this script, make the changes and run it again...\")\"; echo &\n        exit\n\n    else\n        break\n    fi\ndone\n\n# Chech if wine-pfx exist\nwhile true; do\n    if [ ! -f \"${DIR}/Wine/wine-pfx/system.reg\" ]; then clear & sleep 1\n        echo -e \"\\nThere is not a valid wine-pfx folder.\\nThis is neccesary to run this script.\"\n        [ ! -d \"${DIR}/Wine/wine-pfx\" ] &&\n            echo -e \"\\nCreating wine-pfx folder...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine/wine-pfx\"\n        echo -e '\\nPlease, copy a valid wine-prefix in \"wine-pfx\" folder or delete the created folder and create a symlink to a valid wineprefix and call the symlink \"wine-pfx\"'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to continue...\")\"\n\n    elif [ -f \"${DIR}/Wine/wine-pfx/system.reg\" ]; then\n        break\n    fi\ndone\n\n# Chech if wine-build exist\nwhile true; do\n    if [ ! -d \"${DIR}/Wine/wine-build\" ] && [ ! -f \"${DIR}/Wine/wine\" ]; then clear & sleep 1\n        echo -e '\\nThere is not a valid \"wine-build folder\" or symlink to a \"wine\" file\\nThis is neccesary to run this script'\n        [ ! -d \"${DIR}/Wine/wine-build\" ] &&\n            echo -e \"\\nCreating wine-build folder...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine/wine-build\"\n        echo -e '\\nPlease, copy a valid wine-build in \"wine-build\" folder or delete the created folder and create a symlink to a valid \"wine-build\" folder and call the symlink \"wine-build.\\nOr create a symlink to a \"wine\" file\"'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to continue...\")\"\n\n    elif [ -d \"${DIR}/Wine/wine-build\" ]; then\n        WINE_BUILD=$(find -L \"${DIR}/Wine/wine-build\" -type f -iname \"wine\") 2> /dev/null\n        [ -f \"$WINE_BUILD\" ] && ln -sf \"$WINE_BUILD\" \"${DIR}/Wine/wine\" > /dev/null 2>&1\n        break\n\n    elif [ -f \"${DIR}/Wine/wine\" ]; then\n        [ -d \"${DIR}/Wine/wine-build\" ] &&\n            WINE_BUILD=$(find -L \"${DIR}/Wine/wine-build\" -type f -iname \"wine\") 2> /dev/null &&\n            ln -sf \"$WINE_BUILD\" \"${DIR}/Wine/wine\" > /dev/null 2>&1\n        break\n    fi\ndone\n\n# Set wine-build & wineprefix\nWINE=\"$DIR/Wine/wine\"\nWINEPREFIX=\"$DIR/Wine/wine-pfx/\"\n\n# ======================================================================== #\n\nKILL=\"kill -9 $(ps -e | awk '/exe/ {print $1}')\"\n\n# Launch\n$KILL\ncd \"$DIR\"\necho -e \"\\nLaunching $DIR/$EXE\\n\" | sed 's/\\.\\///g'\ngamemoderun WINEPREFIX=\"$WINEPREFIX\" \"$WINE\" \"$EXE\" $ARGS\n\npgrep -x $PROCESS || sleep 60 || $KILL || exit\n\n# Before Launch\nwhile ! pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    $COMP_Disabled\n    sleep 5\n    killall lutris\n    killall cairo-dock\n\n# After Launch\nwhile pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n\n    $COMP_Enabled\n    cairo-dock > /dev/null 2>&1 &\n    $KILL\n    sleep 5\n    killall gamemoded &\n    exit\n", "5", "kill -9 $(ps -e | awk '/exe/ {print $1}')", "ps -e | awk '/exe/ {print $1}'", "\n1\n\nI have the following:\n\necho AS:i:0  UQ:i:0  ZZ:Z:mus.sup  NM:i:0  MD:Z:50  ZZ:Z:cas.sup  CO:Z:endOfLine|awk '{match($0,/ZZ:Z[^ ]*/,m); print m[0], m[1]}' \n\nwhich unfortunately outputs only the first entry (out of two):\n\nZZ:Z:mus.sup \n\nIt looks to me that the match() function is incapable of storing more than one match into its array. Unless I'm missing here something...?\n\nIf this is indeed the case, would someone kindly suggest an awk-based 'matching' alternative that will allow to obtain the two ZZ:Z entries. Note, that these are NOT located each time at the same column(!) - hence the need of using the match() function.\n\nThe general idea here is to obtain at the same awk command some values that appear at known column positions (e.g. col1, col2), and some values (fetched based on their unique signature \"ZZ:Z\") that located at unknown indexed columns.\n\nIn addition, the following attempt - using gensub() also fails to output/print the two ZZ:Z entries, and identify only one of the two (and the other one upon deprecation of the reciprocal..)\n\necho AS:i:0  UQ:i:0  ZZ:Z:mus.sup  NM:i:0  MD:Z:50  ZZ:Z:cas.sup  CO:Z:endOfLine|awk '{val= gensub(/.*(ZZ:Z[^ ]*).*/,\"\\\\1 \\\\2\",\"g\",$0);print val}'\n\nthe result in this case is:\n\nZZ:Z:cas.sup\n\nbut I'd like to have as result:\n\nZZ:Z:mus.sup ZZ:Z:cas.sup \n\nawk\nmatch\n\ufeff\nShare\nFollow\nedited Nov 13 '16 at 1:35\nasked Nov 13 '16 at 1:01\nRoy\n60322 gold badges55 silver badges2020 bronze badges\nAdd a comment\n3 Answers\n3\n\nYou were just calling the wrong function, you should be using split() not match():\n\n$ echo AS:i:0  UQ:i:0  ZZ:Z:mus.sup  NM:i:0  MD:Z:50  ZZ:Z:cas.sup  CO:Z:endOfLine|\nawk '{split($0,t,/ZZ:Z[^ ]*/,m); print m[1], m[2]}'\nZZ:Z:mus.sup ZZ:Z:cas.sup\n\nor to print any number of occurrences in the order they appeared in the input:\n\n$ echo AS:i:0  UQ:i:0  ZZ:Z:mus.sup  NM:i:0  MD:Z:50  ZZ:Z:cas.sup  CO:Z:endOfLine|\nawk '{split($0,t,/ZZ:Z[^ ]*/,m); for (i=1; i in m; i++) print m[i]}'\nZZ:Z:mus.sup\nZZ:Z:cas.sup\n\nThat uses GNU awk for the 4th arg to split() just like you were using GNU awk for the 3rd arg to match().\n\nIf you had to do this in a non-GNU awk it'd just be:\n\n$ echo AS:i:0  UQ:i:0  ZZ:Z:mus.sup  NM:i:0  MD:Z:50  ZZ:Z:cas.sup  CO:Z:endOfLine|\nawk '{while(match($0,/ZZ:Z[^ ]*/)) {print substr($0,RSTART,RLENGTH); $0=substr($0,RSTART+RLENGTH)}}'\nZZ:Z:mus.sup\nZZ:Z:cas.sup\n\n\ufeff\nShare\nFollow\nedited Nov 13 '16 at 22:23\nanswered Nov 13 '16 at 14:31\nEd Morton\n152k1515 gold badges6161 silver badges148148 bronze badges\n\n    Could you please check your solution, it might be a problem only at my end, but I do get an error message: \" awk: fatal: 4 is invalid as number of arguments for split \" \u2013 Roy Nov 13 '16 at 20:53\n    You need to use GNU awk 4.0 or more recent. If you're on an older version than that you need to update ASAP as 4.0 has been around for 5+ years (4.0.0 came out June 2011, we're now on version 4.1.4!) and you're missing a ton of extremely useful functionality and bug fixes (see gnu.org/software/gawk/manual/gawk.html#Feature-History) \u2013 Ed Morton Nov 13 '16 at 22:12 \n\nAdd a comment\n1\n\nThe results of match can be used to get the unmatched portion for additional matching:\n\n{\n        for (s = $0; match(s, /ZZ:Z[^ ]*/);\n            s = substr(s, RSTART + RLENGTH, length))\n                printf(\"%s%s\", s == $0 ? \"\" : \" \", \n                    substr(s, RSTART, RLENGTH))\n        print \"\"\n}\n\nAlternatively, the string can be split on the unique identifier, either with split or FS:\n\n{\n        l = split($0, a, /ZZ:Z/)\n        for(i = 2; i <= l; i++)\n                printf(\"%s%s\", i == 2 ? \"\" : \" \",\n                    \"ZZ:Z\" substr(a[i], 1, index(a[i], \" \") - 1))\n        print \"\"\n}\n\n\ufeff\nShare\nFollow\nanswered Nov 13 '16 at 1:51\nkdhp\n1,9361111 silver badges1414 bronze badges\n\n    this is a neat general solution, can work with as many appearances as they come - very nice! tnx \u2013 Roy Nov 13 '16 at 2:41 \n\nAdd a comment\n0\n\nThanks, the above solutions are great and provide generalized solving for the problem - no matter how many time the ZZ:Z entry repeats in the original line.\n\nThis is however the one liner I was aiming for, which is a fix to the wrong matching condition I was using above:\n\necho AS:i:0  UQ:i:0  ZZ:Z:mus.sup  NM:i:0  MD:Z:50  ZZ:Z:cas.sup  CO:Z:endOfLine|awk '{val= gensub(/.*(ZZ:Z[^ ]*).*(ZZ:Z[^ ]*).*/,\"\\\\1 \\\\2\",\"g\");print val}'\n\noutput:\n\nZZ:Z:mus.sup ZZ:Z:cas.sup\n\nAlso, this is the solution - using awk's match() :\n\necho AS:i:0  UQ:i:0  ZZ:Z:mus.sup  NM:i:0  MD:Z:50  ZZ:Z:cas.sup  CO:Z:endOfLine|", "ps -e | awk '/cairo-dock/ || /onboard/ {print $0}'", "awk", " || ", "cairo", "    sleep 5\n    killall gamemoded &", "null", "    cairo-dock > /dev/null 2>&1 &\n", "$0", "#ps -e | awk '/cairo-dock/ || /onboard/ {print $0}'\n", "'/exe/ || /cairo-dock/ || /gamemoded/ {print $1}'", "KILL_B=\"kill -9 $(ps -e | awk '/exe/ || /cairo-dock/ || /gamemoded/ {print $1}')\"\n", "gamemoded", "    killall lutris\n    killall cairo-dock", "KILL_B", " || /cairo-dock/", "    killall easystroke\n", "/", "|", "|| ", "/easystroke/", "/cairo-dock/", "easystroke", "launch", "    ~/.config/polybar/launch.sh &\n", "lutris", "    killall lutris &\n", "$PROCESS", "while ! pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n", "#!/bin/bash\n\n# ======================================================================== #\n\n# Game Directory\nDIR=$(dirname \"$(realpath \"$0\")\")\n\n# Compositor\nCOMP_Disabled=\"killall picom\"\nCOMP_Enabled=\"picom -cCGb\"\n\n# Game Executable\nEXE=\"./starwarsbattlefrontii.exe\"\nPROCESS=\"starwarsbattlef\"\n\n# Wine Directories\nWINE=\"$DIR/wine\"\nWINEPREFIX=\"$DIR/wine-pfx\"\n\n# Environment\nexport WINEDLLOVERRIDES=\"OriginThinSetupInternal.exe=;nvapi,nvapi64=;winedbg.exe=d\"\nexport WINEFSYNC=1\nexport MANGOHUD=1\nexport ENABLE_VKBASALT=0\n\n# ======================================================================== #\n\n# Launch\ncd \"$DIR/wine-pfx/drive_c/Games/STAR WARS Battlefront II/\"\nWINEPREFIX=\"$WINEPREFIX\" \"$WINE\" \"$EXE\"\n\n# Before Launch\n\n    $COMP_Disabled\n    killall easystroke\n    sleep 5\n    killall lutris\n    killall cairo-dock\n\n# After Launch\nwhile ! pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\nwhile pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    killall EpicGamesLauncher.exe &\n    killall Origin.exe &\n    sleep 5\n    easystroke &\n    sleep 5\n    killall QtWebEngineProcess.exe &\n    $COMP_Enabled &\n    sleep 5 &\n#    PID=$(pgrep gamemoded)\n#    kill -9 $PID &&\n    exit", "\n", "#    PID=$(pgrep gamemoded)\n#    kill -9 $PID &", "channel", "https://www.youtube.com/channel/UCQ3zNtUFa8nSG1Tncsr-cWQ", "rtx", "1080", "Shops", "Gamebuyers", "Ebay", "Pa", "PPaa", "alexpeed48@gmail.com", "alex33351", "donchebay*48", "amd 5000", "spacefm plugins", "B", "A", "Before", "Launch", "cairo-dock > /dev/null 2>&1 &", "./Scripts/Shell/Autostart/cairo-dock", "cairo-dock", "killall cairo-dock & cairo-dock > /dev/null 2>&1"], "CLIPBOARD": ["e", "o", "l", "y", "b", "a", "r", "/home/govi/.config/polybar/scripts/system_update.sh\n/home/govi/.config/polybar/scripts/updates_AUR.sh\n/home/govi/.config/polybar/scripts/updates_pacman.sh\n", "/home/govi/.config/qtile/scripts/rss_youtube_Reset.sh", "lazy.restart()", "cmd_restart", "padding=3", ", margin=8),", "http://www.gmail.com", "                    mouse_callbacks={'Button1': lambda qtile: qtile.cmd_spawn('firefox \"http://www.gmail.com\"')}),\n", "                widget.Spacer(length=3),\n", "                widget.Spacer(length=2),\n", "notf_ON", "                widget.GenPollText(func=lambda: subprocess.getoutput('~/.config/qtile/scripts/rss_github_not.sh'),\n                    update_interval=300, fontsize=12),", "                widget.GenPollText(func=lambda: subprocess.getoutput('~/.config/qtile/scripts/updates_pacman.sh'),\n                                   update_interval=300, fontsize=12),", "font='GoVi_Icons'", "        touch ~/.config/qtile/scripts/updates-pacman_icon\n", "/home/govi/.config/qtile/scripts/updates_pacman.sh\n", "~/.config/qtile/scripts/updates-pacman_icon", "def cpu_icon():\n    if cpu_temp < 55:\n        print(\"text='0'\", end='')\n    else:\n        print(\"text='\ud83d\udd25'\", end='')", "cpu_icon", "fmt", "cpu_temp = subprocess.getoutput('~/.config/qtile/scripts/cpu_temp.sh | cut -c1-2')\ncpu_temp = int(cpu_temp)", "def cpu_icon():\n    cpu_temp = subprocess.getoutput('~/.config/qtile/scripts/cpu_temp.sh | cut -c1-2')\n    cpu_temp = int(cpu_temp)\n\n    if cpu_temp <= 50:\n        return str('0')\n\n    elif cpu_temp >= 51:\n        return str('\ud83d\udd25')", "nvidia-smi --query-gpu=temperature.gpu --format=csv,noheader,nounits", "cat \"/sys/devices/platform/it87.2608/hwmon/hwmon2/temp1_input\" | cut -c -2", "paru -Qua | wc -l | cut -c1-1", "updates_aur", "mouse_callbacks={'Button1': lambda qtile: qtile.cmd_spawn('sh -c ~/.config/qtile/scripts/rss_github_Reset.sh')}", "mouse_callbacks={'Button1': lambda qtile: qtile.cmd_spawn('&FILEMANAGER  /')}", "mouse_callbacks={'Button1': lambda qtile: qtile.cmd_spawn('spacefm  /')})", " '/home/govi/Programs/Adobe/Wine/Launch-Photoshop.sh'", "/home/govi/Downloads/Godfall.v2.4.44-0xdeadc0de/Godfall/Aperion\n/home/govi/Downloads/Godfall.v2.4.44-0xdeadc0de/Godfall/Engine\n/home/govi/Downloads/Godfall.v2.4.44-0xdeadc0de/Godfall/OnlineFix\n/home/govi/Downloads/Godfall.v2.4.44-0xdeadc0de/Godfall/Aperion.exe\n/home/govi/Downloads/Godfall.v2.4.44-0xdeadc0de/Godfall/Launcher.exe\n/home/govi/Downloads/Godfall.v2.4.44-0xdeadc0de/Godfall/Manifest_DebugFiles_Win64.txt\n/home/govi/Downloads/Godfall.v2.4.44-0xdeadc0de/Godfall/Manifest_NonUFSFiles_Win64.txt\n/home/govi/Downloads/Godfall.v2.4.44-0xdeadc0de/Godfall/OnlineFixLauncher.ini\n", "v0.143.5", "/home/govi/Games/PC/Cyberpunk 2077/Cyberpunk.2077/game/files/archive\n/home/govi/Games/PC/Cyberpunk 2077/Cyberpunk.2077/game/files/bin\n/home/govi/Games/PC/Cyberpunk 2077/Cyberpunk.2077/game/files/engine\n/home/govi/Games/PC/Cyberpunk 2077/Cyberpunk.2077/game/files/r6\n/home/govi/Games/PC/Cyberpunk 2077/Cyberpunk.2077/game/files/gog.ico\n/home/govi/Games/PC/Cyberpunk 2077/Cyberpunk.2077/game/files/goggame-1423049311.hashdb\n/home/govi/Games/PC/Cyberpunk 2077/Cyberpunk.2077/game/files/goggame-1423049311.ico\n/home/govi/Games/PC/Cyberpunk 2077/Cyberpunk.2077/game/files/goggame-1423049311.info\n/home/govi/Games/PC/Cyberpunk 2077/Cyberpunk.2077/game/files/goggame-galaxyFileList.ini\n/home/govi/Games/PC/Cyberpunk 2077/Cyberpunk.2077/game/files/goglog.ini\n/home/govi/Games/PC/Cyberpunk 2077/Cyberpunk.2077/game/files/Launch Cyberpunk 2077.lnk\n/home/govi/Games/PC/Cyberpunk 2077/Cyberpunk.2077/game/files/support.ico\n", "/home/govi/Games/PC/Cyberpunk 2077/Cyberpunk.2077/game/prefix\n/home/govi/Games/PC/Cyberpunk 2077/Cyberpunk.2077/game/wine\n", "/home/govi/Games/PC/Cyberpunk 2077/wine-build\n", " '/home/govi/Games/PC/Cyberpunk 2077/Wine/wine-build/bin/wine64'", "/home/govi/wine64\n", "wine-pfx", "/home/govi/Games/PC/Cyberpunk 2077/wine-pfx\n", "/home/govi/Games/PC/Dyson Sphere Program/Wine\n", "#!/bin/bash\n\n# ======================================================================== #\n\n# Current Directory\nDIR=$(dirname \"$(realpath \"$0\")\" | sed -s \"s|/Wine||g\")\n\n# Compositor\nCOMP_Disabled=\"killall picom\"\nCOMP_Enabled=\"picom -cCGb\"\n\n# Game Executable\nEXE=\"./bin/x64/Game.exe\"\nPROCESS=\"Game.exe\"\nARGS=\"-vulkan\"\n\n# Environment\nexport WINEDLLOVERRIDES=\"mscoree,mshtml=\"\nexport WINEFSYNC=1\nexport MANGOHUD=1\nexport ENABLE_VKBASALT=1\nexport __GL_THREADED_OPTIMIZATIONS=1 # NVIDIA\nexport __GL_SHADER_DISK_CACHE_SKIP_CLEANUP=1\nexport __GL_SHADER_DISK_CACHE=1\nexport __GL_SHADER_DISK_CACHE_PATH=\"$DIR\"\n\n# ======================================================================== #\n\n# Chech if the script is in Wine directory\nLAUNCH_GAME=\"$(find \"${DIR}/Wine\" -type f -iname \"Launch-*\")\"\n\nwhile true; do\n    if [ ! -f \"$LAUNCH_GAME\" ]; then clear & sleep 1\n        echo -e '\\nThis Script needs to be in a folder called \"Wine\", with the prename \"Launch-\" (example: Launch-My_Game.sh) inside the Game folder.'\n        [ ! -d \"${DIR}/Wine\" ] &&\n            echo -e \"\\nCreating one in the current directory...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine\"\n        echo -e '\\nPlease, put this script in it and put \"Wine\" folder whatever you want in the Game folder.'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to close this script, make the changes and run it again...\")\"; echo &\n        exit\n\n    else\n        break\n    fi\ndone\n\n# Chech if wine-pfx exist\nwhile true; do\n    if [ ! -f \"${DIR}/Wine/wine-pfx/system.reg\" ]; then clear & sleep 1\n        echo -e \"\\nThere is not a valid wine-pfx folder.\\nThis is neccesary to run this script.\"\n        [ ! -d \"${DIR}/Wine/wine-pfx\" ] &&\n            echo -e \"\\nCreating wine-pfx folder...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine/wine-pfx\"\n        echo -e '\\nPlease, copy a valid wine-prefix in \"wine-pfx\" folder or delete the created folder and create a symlink to a valid wineprefix and call the symlink \"wine-pfx\"'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to continue...\")\"\n\n    elif [ -f \"${DIR}/Wine/wine-pfx/system.reg\" ]; then\n        break\n    fi\ndone\n\n# Chech if wine-build exist\nwhile true; do\n    if [ ! -d \"${DIR}/Wine/wine-build\" ] && [ ! -f \"${DIR}/Wine/wine\" ]; then clear & sleep 1\n        echo -e '\\nThere is not a valid \"wine-build folder\" or symlink to a \"wine\" file\\nThis is neccesary to run this script'\n        [ ! -d \"${DIR}/Wine/wine-build\" ] &&\n            echo -e \"\\nCreating wine-build folder...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine/wine-build\"\n        echo -e '\\nPlease, copy a valid wine-build in \"wine-build\" folder or delete the created folder and create a symlink to a valid \"wine-build\" folder and call the symlink \"wine-build.\\nOr create a symlink to a \"wine\" file\"'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to continue...\")\"\n\n    elif [ -d \"${DIR}/Wine/wine-build\" ]; then\n        WINE_BUILD=$(find -L \"${DIR}/Wine/wine-build\" -type f -iname \"wine\") 2> /dev/null\n        [ -f \"$WINE_BUILD\" ] && ln -sf \"$WINE_BUILD\" \"${DIR}/Wine/wine\" > /dev/null 2>&1\n        break\n\n    elif [ -f \"${DIR}/Wine/wine\" ]; then\n        [ -d \"${DIR}/Wine/wine-build\" ] &&\n            WINE_BUILD=$(find -L \"${DIR}/Wine/wine-build\" -type f -iname \"wine\") 2> /dev/null &&\n            ln -sf \"$WINE_BUILD\" \"${DIR}/Wine/wine\" > /dev/null 2>&1\n        break\n    fi\ndone\n\n# Set wine-build & wineprefix\nWINE=\"$DIR/Wine/wine\"\nWINEPREFIX=\"$DIR/Wine/wine-pfx/\"\n\n# ======================================================================== #\n\n# Launch\ncd \"$DIR\"\ngamemoderun WINEPREFIX=\"$WINEPREFIX\" \"$WINE\" \"$EXE\" $ARGS &\necho -e \"\\nLaunching $DIR/$EXE\\n\" | sed 's/\\.\\///g'\n\n# Before Launch\nwhile ! pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    $COMP_Disabled\n    killall polybar\n    sleep 5\n    killall lutris\n    killall cairo-dock\n\n# After Launch\nwhile pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    $COMP_Enabled\n    ~/.config/polybar/launch.sh\n    cairo-dock > /dev/null 2>&1 &\n    sleep 5\n    killall gamemoded\n    exit\n", "#!/bin/bash\n\n# ======================================================================== #\n\n# Current Directory\nDIR=$(dirname \"$(realpath \"$0\")\" | sed -s \"s|/Wine||g\")\n\n# Compositor\nCOMP_Disabled=\"killall picom\"\nCOMP_Enabled=\"picom -cCGb\"\n\n# Game Executable\nEXE=\"./bin/x64/Game.exe\"\nPROCESS=\"Game.exe\"\nARGS=\"-vulkan\"\n\n# Environment\nexport WINEDLLOVERRIDES=\"mscoree,mshtml=\"\nexport WINEFSYNC=1\nexport MANGOHUD=1\nexport ENABLE_VKBASALT=1\nexport __GL_THREADED_OPTIMIZATIONS=1 # NVIDIA\nexport __GL_SHADER_DISK_CACHE_SKIP_CLEANUP=1\nexport __GL_SHADER_DISK_CACHE=1\nexport __GL_SHADER_DISK_CACHE_PATH=\"$DIR\"\n\n# ======================================================================== #\n\n# Chech if the script is in Wine directory\nLAUNCH_GAME=\"$(find \"${DIR}/Wine\" -type f -iname \"Launch-*\")\"\n\nwhile true; do\n    if [ ! -f \"$LAUNCH_GAME\" ]; then clear & sleep 1\n        echo -e '\\nThis Script needs to be in a folder called \"Wine\", with the prename \"Launch-\" (example: Launch-My_Game.sh) inside the Game folder.'\n        [ ! -d \"${DIR}/Wine\" ] &&\n            echo -e \"\\nCreating one in the current directory...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine\"\n        echo -e '\\nPlease, put this script in it and put \"Wine\" folder whatever you want in the Game folder.'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to close this script, make the changes and run it again...\")\"; echo &\n        exit\n\n    else\n        break\n    fi\ndone\n\n# Chech if wine-pfx exist\nwhile true; do\n    if [ ! -f \"${DIR}/Wine/wine-pfx/system.reg\" ]; then clear & sleep 1\n        echo -e \"\\nThere is not a valid wine-pfx folder.\\nThis is neccesary to run this script.\"\n        [ ! -d \"${DIR}/Wine/wine-pfx\" ] &&\n            echo -e \"\\nCreating wine-pfx folder...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine/wine-pfx\"\n        echo -e '\\nPlease, copy a valid wine-prefix in \"wine-pfx\" folder or delete the created folder and create a symlink to a valid wineprefix and call the symlink \"wine-pfx\"'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to continue...\")\"\n\n    elif [ -f \"${DIR}/Wine/wine-pfx/system.reg\" ]; then\n        break\n    fi\ndone\n\n# Chech if wine-build exist\nwhile true; do\n    if [ ! -d \"${DIR}/Wine/wine-build\" ] && [ ! -f \"${DIR}/Wine/wine\" ]; then clear & sleep 1\n        echo -e '\\nThere is not a valid \"wine-build folder\" or symlink to a \"wine\" file\\nThis is neccesary to run this script'\n        [ ! -d \"${DIR}/Wine/wine-build\" ] &&\n            echo -e \"\\nCreating wine-build folder...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine/wine-build\"\n        echo -e '\\nPlease, copy a valid wine-build in \"wine-build\" folder or delete the created folder and create a symlink to a valid \"wine-build\" folder and call the symlink \"wine-build.\\nOr create a symlink to a \"wine\" file\"'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to continue...\")\"\n\n    elif [ -d \"${DIR}/Wine/wine-build\" ]; then\n        WINE_BUILD=$(find -L \"${DIR}/Wine/wine-build\" -type f -iname \"wine\") 2> /dev/null\n        [ -f \"$WINE_BUILD\" ] && ln -sf \"$WINE_BUILD\" \"${DIR}/Wine/wine\" > /dev/null 2>&1\n        break\n\n    elif [ -f \"${DIR}/Wine/wine\" ]; then\n        [ -d \"${DIR}/Wine/wine-build\" ] &&\n            WINE_BUILD=$(find -L \"${DIR}/Wine/wine-build\" -type f -iname \"wine\") 2> /dev/null &&\n            ln -sf \"$WINE_BUILD\" \"${DIR}/Wine/wine\" > /dev/null 2>&1\n        break\n    fi\ndone\n\n# Set wine-build & wineprefix\nWINE=\"$DIR/Wine/wine\"\nWINEPREFIX=\"$DIR/Wine/wine-pfx/\"\n\n# ======================================================================== #\n\n# Launch\ncd \"$DIR\"\ngamemoderun WINEPREFIX=\"$WINEPREFIX\" \"$WINE\" \"$EXE\" $ARGS &\necho -e \"\\nLaunching $DIR/$EXE\\n\" | sed 's/\\.\\///g'\n\n# Before Launch\nwhile ! pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    $COMP_Disabled\n    sleep 5\n    killall lutris\n    killall cairo-dock\n\n# After Launch\nwhile pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    $COMP_Enabled\n    cairo-dock > /dev/null 2>&1 &\n    sleep 5\n    killall gamemoded\n    exit\n", "valheim.exe", " '/home/govi/Wine/wine_6.2/wine-build_tkg/usr/bin/wine'", "/home/govi/wine\n/home/govi/wine64\n", " '/home/govi/Games/PC/Valheim/Wine/Launch-Valheim.sh'", "/home/govi/Wine/wine_6.2/wine\n", "/home/govi/Wine/wine_6.1/wine\n", "/home/govi/Wine/wine_6.0/wine\n", "Valheim", "/sys/devices/platform/", "sensors | grep \"edge\" | awk '{print $2}' | cut -b2-3", "awk -F '\\+|\\.' 'NF>1 {print $2}'", "'{print substr($0,2,6)}'", "sensors | awk '$1 ~ /^Package/ {print substr($0,17,2)}'", "sensors | awk '$1 ~ /^edge:/ {print substr($0,16,2)}'", "NR < 1", "NR > 1 { exit }; 1", "/home/govi/.config/qtile/scripts/rss_youtube.sh", "sensors | awk '$1 ~ /^temp1/ {print substr($0,16,2)} NR > 1 { exit }; 1'", "NR==52", "enable_experimental_conpty_backend", "\\", "\\[\\033[1;32m\\]\\u:\\[\\033[1;34m\\] \\W\\[\\033[1;34m\\] \\$\\[\\033[0m\\]", "shopt checkwinsize", "PS1=$'\\e[0;31m$ \\e[0m'", "\\e[0;31m$ \\e[0m", "PS1=\"%{$fg[red]%}%n%{$reset_color%}@%{$fg[blue]%}%m %{$fg[yellow]%}%~ %{$reset_color%}%% \"", "PS1=\"%{$fg[red]%}%n%{$reset_color%}@%{$fg[blue]%}%m %{$fg[yellow]%}%(5~|%-1~/.../%3~|%4~) %{$reset_color%}%% \"", "%\\", "PS1=\"%{%F{red}%}%n%{%f%}@%{%F{blue}%}%m %{%F{yellow}%}%~ %{$%f%}%% \"", "%B%", "{%F{yellow}%}", "{%F{green}%}:", "{%F{red}[%}", "%f%", "'NR>1'", "sensors | awk '$1 ~ /^temp1/ {print substr($0,16,2)}' | awk 'NR==1'", "FNR==i", "~/.config/qtile/scripts/cpu_temp.sh", "/usr/share/xsessions/qtile.desktop", "~/.xinitrc", "def open_calendar(qtile):  # spawn calendar widget\n    qtile.cmd_spawn('gsimplecal next_month')", "ulauncher", "open_ulauncher", "lambda qtile: ", "-o cmd -f restart  ", "qtile cmd-obj", "cairo-dock > /dev/null 2>&1 & exit", "qtile cmd-obj -o cmd", " -f restart", "cairo-dock &", "autostart = [\n        \"sh ~/.xinitrc\",\n]\n\nfor x in autostart:\n    os.system(x)", "qtile cmd-obj -o cmd -f restart", "zenity --info --text \"RSS YouTube Restarted\" 2> /dev/null", "pgrep -x firewall-applet || firewall-applet &", "pgrep -x firewall-applet || ", "nm-applet", "cairo-dock", "pgrep -x picom ||", "pgrep -x picom && killall picom\n", "# Compositor\nCOMP_Disabled=\"killall picom\"\nCOMP_Enabled=\"picom -cCGb\"", "    killall UnrealCEFSubProcess.exe\n", "\n# Compositor\nCOMP_Disabled=\"killall picom\"\nCOMP_Enabled=\"picom -cCGb\"\n", "export __GL_SHADER_DISK_CACHE_SKIP_CLEANUP=1\nexport __GL_SHADER_DISK_CACHE=1\nexport __GL_SHADER_DISK_CACHE_PATH=\"$DIR\"", "/home/govi/Games/PC/Grounded/Wine/Launch-Grounded.sh\n", "/home/govi/Games/PC/Cyberpunk 2077/Wine/Launch-Cyberpunk_2077.sh\n", "/home/govi/Games/PC/Valheim/Launch-Valheim.sh\n", "#export __GL_THREADED_OPTIMIZATIONS=1 # NVIDIA\n", "# Extract start with and print especific characters\nawk '$1 ~ /^temp1/ {print substr($0,16,2)}'", "awk '$3 ~ /snow/ { print }' dummy_file ", "awk -F, '$1 ~ /Rent/'", "NR==1 &&", "awk -v FS=\"(START|END)\" '{print $2}'", "awk -F \"START|END\" '{print $2}'", "; if (/}/) exit", "'/Option_1/,/}/{print; if ($0 ~ /}/) exit}'", "sensors | awk '$1 ~ /^temp1/ {print substr($0,16,2); exit}'", "STRING", "https://www.youtube.com/c/JCGigamisterios/videos?view=0&sort=p&flow=grid", "JC Gigamisterios", ".xml?channel_id=", "/feeds/videos.xml?channel_id=", "UCQ3zNtUFa8nSG1Tncsr-cWQ", "https://www.youtube.com/feeds/videos.xml?channel_id=UCQ3zNtUFa8nSG1Tncsr-cWQ", "curl -s \"https://www.youtube.com/feeds/videos.xml?channel_id=UCQ3zNtUFa8nSG1Tncsr-cWQ\"| awk -F \"<media:title>|</media:title>\" 'NF>1 {print $2}'", "pgrep -x firewall-applet && killall firewall-applet\npgrep -x nm-applet && killall nm-applet\npgrep -x cairo-dock && killall cairo-dock\npgrep -x easystroke && killall easystroke", "# Autostart\nexport PATH=$PATH:$HOME/Scripts/Shell/Autostart/\n\npgrep -x firewall-applet && killall firewall-applet\npgrep -x nm-applet && killall nm-applet\npgrep -x cairo-dock && killall cairo-dock\npgrep -x easystroke && killall easystroke\n\n# nvidia_led.sh &\n\n# nvidia-settings --load-config-only &\n\npicom -cCGb &\n\nsetxkbmap -layout es &\n\nset_background.sh &\n\nfirewall-applet &\n\nnm-applet --sm-disable &\n\ncairo-dock &\n\neasystroke &\n\nimwheel.sh &\n\nexec qtile", "arch linux suspend", "Exec=/home/govi/Scripts/Bash/Config.bak.sh\nIcon=/home/govi/Im\u00e1genes/Icons/Confidential_documents.png\n", "Icon=~/Programs/Pycharm/bin/pycharm.sh\nMimeType=\n", "# Current Directory\nDIR=$(dirname \"$(realpath \"$0\")\" | sed -s \"s|/Wine||g\")\n\n# Compositor\nCOMP_Disabled=\"killall picom\"\nCOMP_Enabled=\"picom -cCGb\"", "# Launch\ncd \"$DIR\"\ngamemoderun WINEPREFIX=\"$WINEPREFIX\" \"$WINE\" \"$EXE\" $ARGS &\necho -e \"\\nLaunching $DIR/$EXE\\n\" | sed 's/\\.\\///g'\n\n# Before Launch\nwhile ! pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    $COMP_Disabled\n    sleep 5\n    killall lutris\n    killall cairo-dock\n\n# After Launch\nwhile pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    $COMP_Enabled\n    cairo-dock > /dev/null 2>&1 &\n    sleep 5\n    killall gamemoded &\n    exit", "export __GL_SHADER_DISK_CACHE_SKIP_CLEANUP=1\nexport __GL_SHADER_DISK_CACHE=1\nexport __GL_SHADER_DISK_CACHE_PATH=\"$DIR\"\n#export __GL_THREADED_OPTIMIZATIONS=1 # NVIDIA\n\n# ======================================================================== #\n\n# Chech if the script is in Wine directory\nLAUNCH_GAME=\"$(find \"${DIR}/Wine\" -type f -iname \"Launch-*\")\"\n\nwhile true; do\n    if [ ! -f \"$LAUNCH_GAME\" ]; then clear & sleep 1\n        echo -e '\\nThis Script needs to be in a folder called \"Wine\", with the prename \"Launch-\" (example: Launch-My_Game.sh) inside the Game folder.'\n        [ ! -d \"${DIR}/Wine\" ] &&\n            echo -e \"\\nCreating one in the current directory...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine\"\n        echo -e '\\nPlease, put this script in it and put \"Wine\" folder whatever you want in the Game folder.'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to close this script, make the changes and run it again...\")\"; echo &\n        exit\n\n    else\n        break\n    fi\ndone\n\n# Chech if wine-pfx exist\nwhile true; do\n    if [ ! -f \"${DIR}/Wine/wine-pfx/system.reg\" ]; then clear & sleep 1\n        echo -e \"\\nThere is not a valid wine-pfx folder.\\nThis is neccesary to run this script.\"\n        [ ! -d \"${DIR}/Wine/wine-pfx\" ] &&\n            echo -e \"\\nCreating wine-pfx folder...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine/wine-pfx\"\n        echo -e '\\nPlease, copy a valid wine-prefix in \"wine-pfx\" folder or delete the created folder and create a symlink to a valid wineprefix and call the symlink \"wine-pfx\"'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to continue...\")\"\n\n    elif [ -f \"${DIR}/Wine/wine-pfx/system.reg\" ]; then\n        break\n    fi\ndone\n\n# Chech if wine-build exist\nwhile true; do\n    if [ ! -d \"${DIR}/Wine/wine-build\" ] && [ ! -f \"${DIR}/Wine/wine\" ]; then clear & sleep 1\n        echo -e '\\nThere is not a valid \"wine-build folder\" or symlink to a \"wine\" file\\nThis is neccesary to run this script'\n        [ ! -d \"${DIR}/Wine/wine-build\" ] &&\n            echo -e \"\\nCreating wine-build folder...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine/wine-build\"\n        echo -e '\\nPlease, copy a valid wine-build in \"wine-build\" folder or delete the created folder and create a symlink to a valid \"wine-build\" folder and call the symlink \"wine-build.\\nOr create a symlink to a \"wine\" file\"'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to continue...\")\"\n\n    elif [ -d \"${DIR}/Wine/wine-build\" ]; then\n        WINE_BUILD=$(find -L \"${DIR}/Wine/wine-build\" -type f -iname \"wine\") 2> /dev/null\n        [ -f \"$WINE_BUILD\" ] && ln -sf \"$WINE_BUILD\" \"${DIR}/Wine/wine\" > /dev/null 2>&1\n        break\n\n    elif [ -f \"${DIR}/Wine/wine\" ]; then\n        [ -d \"${DIR}/Wine/wine-build\" ] &&\n            WINE_BUILD=$(find -L \"${DIR}/Wine/wine-build\" -type f -iname \"wine\") 2> /dev/null &&\n            ln -sf \"$WINE_BUILD\" \"${DIR}/Wine/wine\" > /dev/null 2>&1\n        break\n    fi\ndone\n\n# Set wine-build & wineprefix\nWINE=\"$DIR/Wine/wine\"\nWINEPREFIX=\"$DIR/Wine/wine-pfx/\"\n\n# ======================================================================== #\n\n# Launch\ncd \"$DIR\"\ngamemoderun WINEPREFIX=\"$WINEPREFIX\" \"$WINE\" \"$EXE\" $ARGS &\necho -e \"\\nLaunching $DIR/$EXE\\n\" | sed 's/\\.\\///g'\n\n# Before Launch\nwhile ! pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    $COMP_Disabled\n    sleep 5\n    killall lutris\n    killall cairo-dock\n\n# After Launch\nwhile pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    $COMP_Enabled\n    cairo-dock > /dev/null 2>&1 &\n    sleep 5\n    killall gamemoded &\n    exit\n", "/home/govi/Games/PC/Crysis Remastered/Wine", "$HOME/Wine/wine_Proton/Proton-5.21-GE-1/dist/bin/wine", "WINE=\"$DIR/Wine/wine\"\nWINEPREFIX=\"$DIR/Wine/wine-pfx/\"", "PROCESS=\"Game.exe\"\n", "CrysisRemastered", "#!/bin/bash\n\n# Current Directory\nDIR=$(dirname \"$(realpath \"$0\")\" | sed -s \"s|/Wine||g\")", "/home/govi/Games/PC/Crysis Remastered/Wine/Launch-Crysis_Remastered.sh", "/home/govi/Games/PC/Anno 1800/Wine/Launch-Anno_1800.sh", " '/home/govi/Games/PC/Anno 1800/Wine/wine-build/wine_6.0-RC1/bin/wine64'", "# Game Executable\nEXE=\"./bin/x64/Game.exe\"\nPROCESS=\"Game.exe\"\nARGS=\"-vulkan\"", " '/home/govi/Games/PC/Anno 1800/Bin/Win64/Anno1800.exe'", "/home/govi/Wine/wine_6.2/wine64\n", "/home/govi/Wine/wine_Lutris/wine-build_6.0/wine64\n", "/home/govi/Games/PC/Anno 1800/Wine/Launch-Anno_1800.sh\n", "300738", "epicgameslauncher.exe", "    Match(title='epicgameslauncher.exe'),\n", "    Match(title='epicgameslauncher.exe'),\n    Match(title='Origin.exe'),", "Epic Games", " '/home/govi/Games/PC/STAR WARS Battlefront II/Wine/Launch-STAR_WARS_Battlefront_II.sh'", "/home/govi/Games/PC/-Launchers/STAR WARS Battlefront II\n", "# Before Launch\n$COMP_Disabled\nkillall easystroke\nkillall polybar", "    $COMP_Disabled\n    sleep 5\n    killall lutris\n    killall cairo-dock", "killall easystroke\n", "    killall easystroke\n", "# Before Launch\nwhile ! pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    $COMP_Disabled\n    killall easystroke\n    sleep 5\n    killall lutris\n    killall cairo-dock\n\n# After Launch\nwhile pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    $COMP_Enabled\n    cairo-dock > /dev/null 2>&1 &\n    easystroke &\n    sleep 5\n    killall gamemoded &\n    exit", "echo -e \"\\nLaunching $DIR/$EXE\\n\" | sed 's/\\.\\///g'\n", "/home/govi/Programs/Adobe/Wine/Launch-Photoshop.sh", "-9", " | xargs kill -9", "kill -9 $(ps -ef | awk '/exe/ {print $2}')", " '/home/govi/Programs/Adobe/Wine/wine'", " '/home/govi/Downloads/Adobe Photoshop 2021 v22.2.0.183 (x64) Multilingual (Pre-Activated) [FileCR]/Set-up.exe'", "/home/govi/Wine/wine_Lutris/wine-build_5.21/wine64\n", "/home/govi/Wine/wine_Lutris/wine-build_5.7.11/wine64\n", "/home/govi/Wine/wine_Lutris/wine-build_5.21/wine\n", "    kill -9 $(ps -e | awk '/exe/ {print $1}')\n", "kill -9 $(ps -e | awk '/exe/ {print $1}')\n", "/home/govi/Wine/Scripts/Lutris/wine_5.7.10/Sekiro.sh\n", "/home/govi/Wine/Scripts/Lutris/wine_5.7.11/Sekiro.sh\n", ", mouse_callbacks={'Button1': lambda: qtile.cmd_spawn('alacritty sudo pacman -Syu')}", ", mouse_callbacks={'Button1': lambda: qtile.cmd_spawn('alacritty paru -Syua --skipreview')}", "echo \"Launching $DIR/$EXE\"\n", "#!/bin/bash\n\n# Current Directory\nDIR=$(dirname \"$(realpath \"$0\")\" | sed -s \"s|/Wine||g\")\n\n# Compositor\nCOMP_Disabled=\"killall picom\"\nCOMP_Enabled=\"picom -cCGb\"", "export __GL_SHADER_DISK_CACHE_SKIP_CLEANUP=1\nexport __GL_SHADER_DISK_CACHE=1\nexport __GL_SHADER_DISK_CACHE_PATH=\"$DIR\"\n# export __GL_THREADED_OPTIMIZATIONS=1 # NVIDIA\n\n# ======================================================================== #\n\n# Chech if the script is in Wine directory\nLAUNCH_GAME=\"$(find \"${DIR}/Wine\" -type f -iname \"Launch-*\")\"\n\nwhile true; do\n    if [ ! -f \"$LAUNCH_GAME\" ]; then clear & sleep 1\n        echo -e '\\nThis Script needs to be in a folder called \"Wine\", with the prename \"Launch-\" (example: Launch-My_Game.sh) inside the Game folder.'\n        [ ! -d \"${DIR}/Wine\" ] &&\n            echo -e \"\\nCreating one in the current directory...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine\"\n        echo -e '\\nPlease, put this script in it and put \"Wine\" folder whatever you want in the Game folder.'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to close this script, make the changes and run it again...\")\"; echo &\n        exit\n\n    else\n        break\n    fi\ndone\n\n# Chech if wine-pfx exist\nwhile true; do\n    if [ ! -f \"${DIR}/Wine/wine-pfx/system.reg\" ]; then clear & sleep 1\n        echo -e \"\\nThere is not a valid wine-pfx folder.\\nThis is neccesary to run this script.\"\n        [ ! -d \"${DIR}/Wine/wine-pfx\" ] &&\n            echo -e \"\\nCreating wine-pfx folder...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine/wine-pfx\"\n        echo -e '\\nPlease, copy a valid wine-prefix in \"wine-pfx\" folder or delete the created folder and create a symlink to a valid wineprefix and call the symlink \"wine-pfx\"'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to continue...\")\"\n\n    elif [ -f \"${DIR}/Wine/wine-pfx/system.reg\" ]; then\n        break\n    fi\ndone\n\n# Chech if wine-build exist\nwhile true; do\n    if [ ! -d \"${DIR}/Wine/wine-build\" ] && [ ! -f \"${DIR}/Wine/wine\" ]; then clear & sleep 1\n        echo -e '\\nThere is not a valid \"wine-build folder\" or symlink to a \"wine\" file\\nThis is neccesary to run this script'\n        [ ! -d \"${DIR}/Wine/wine-build\" ] &&\n            echo -e \"\\nCreating wine-build folder...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine/wine-build\"\n        echo -e '\\nPlease, copy a valid wine-build in \"wine-build\" folder or delete the created folder and create a symlink to a valid \"wine-build\" folder and call the symlink \"wine-build.\\nOr create a symlink to a \"wine\" file\"'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to continue...\")\"\n\n    elif [ -d \"${DIR}/Wine/wine-build\" ]; then\n        WINE_BUILD=$(find -L \"${DIR}/Wine/wine-build\" -type f -iname \"wine\") 2> /dev/null\n        [ -f \"$WINE_BUILD\" ] && ln -sf \"$WINE_BUILD\" \"${DIR}/Wine/wine\" > /dev/null 2>&1\n        break\n\n    elif [ -f \"${DIR}/Wine/wine\" ]; then\n        [ -d \"${DIR}/Wine/wine-build\" ] &&\n            WINE_BUILD=$(find -L \"${DIR}/Wine/wine-build\" -type f -iname \"wine\") 2> /dev/null &&\n            ln -sf \"$WINE_BUILD\" \"${DIR}/Wine/wine\" > /dev/null 2>&1\n        break\n    fi\ndone\n\n# Set wine-build & wineprefix\nWINE=\"$DIR/Wine/wine\"\nWINEPREFIX=\"$DIR/Wine/wine-pfx/\"\n\n# ======================================================================== #\n\n# Launch\nkill -9 $(ps -e | awk '/exe/ {print $1}')\ncd \"$DIR\"\necho -e \"\\nLaunching $DIR/$EXE\\n\" | sed 's/\\.\\///g'\ngamemoderun WINEPREFIX=\"$WINEPREFIX\" \"$WINE\" \"$EXE\" $ARGS\n\npgrep -x $PROCESS || sleep 60 || exit\n\n# Before Launch\nwhile ! pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    $COMP_Disabled\n    sleep 5\n    killall lutris\n    killall cairo-dock\n\n# After Launch\nwhile pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    $COMP_Enabled\n    cairo-dock > /dev/null 2>&1 &\n    sleep 5\n    kill -9 $(ps -e | awk '/exe/ {print $1}')\n    killall gamemoded &\n    exit\n", "$KILL", "    sleep 5\n", "kill -9 $(ps -e | awk '/exe/ {print $1}')", "ps -e | awk '/cairo-dock/ || /onboard/ {print $0}'", "gamemoded", "lutris", "KILL_B", "easystroke", "while ! pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n", "https://www.youtube.com/channel/UCQ3zNtUFa8nSG1Tncsr-cWQ", "cairo-dock > /dev/null 2>&1 &", "*/5 * * * * ~/Scripts/Shell/Autostart/set_background.sh\n00 00 * * * ~/Scripts/Shell/Utils/Webgrab_GIT.sh > ~/Programs/Webgrab++/webgrab.log\n", "\u00ba", "/home/govi/Scripts/Shell/Autostart/cairo-dock.sh"]}
{"PRIMARY": ["3.15", "06", "v.1", "wine", " '/home/govi/Games/PC/Cyberpunk 2077/Wine/wine-build/bin/wine64'", "wine-pfx", "prefix", "Launch-Dyson_Sphere_Program", "Dyson_Sphere_Program", "#!/bin/bash\n\n# ======================================================================== #\n\n# Current Directory\nDIR=$(dirname \"$(realpath \"$0\")\" | sed -s \"s|/Wine||g\")\n\n# Compositor\nCOMP_Disabled=\"killall picom\"\nCOMP_Enabled=\"picom -cCGb\"\n\n# Game Executable\nEXE=\"./bin/x64/Game.exe\"\nPROCESS=\"Game.exe\"\nARGS=\"-vulkan\"\n\n# Environment\nexport WINEDLLOVERRIDES=\"mscoree,mshtml=\"\nexport WINEFSYNC=1\nexport MANGOHUD=1\nexport ENABLE_VKBASALT=1\nexport __GL_THREADED_OPTIMIZATIONS=1 # NVIDIA\nexport __GL_SHADER_DISK_CACHE_SKIP_CLEANUP=1\nexport __GL_SHADER_DISK_CACHE=1\nexport __GL_SHADER_DISK_CACHE_PATH=\"$DIR\"\n\n# ======================================================================== #\n\n# Chech if the script is in Wine directory\nLAUNCH_GAME=\"$(find \"${DIR}/Wine\" -type f -iname \"Launch-*\")\"\n\nwhile true; do\n    if [ ! -f \"$LAUNCH_GAME\" ]; then clear & sleep 1\n        echo -e '\\nThis Script needs to be in a folder called \"Wine\", with the prename \"Launch-\" (example: Launch-My_Game.sh) inside the Game folder.'\n        [ ! -d \"${DIR}/Wine\" ] &&\n            echo -e \"\\nCreating one in the current directory...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine\"\n        echo -e '\\nPlease, put this script in it and put \"Wine\" folder whatever you want in the Game folder.'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to close this script, make the changes and run it again...\")\"; echo &\n        exit\n\n    else\n        break\n    fi\ndone\n\n# Chech if wine-pfx exist\nwhile true; do\n    if [ ! -f \"${DIR}/Wine/wine-pfx/system.reg\" ]; then clear & sleep 1\n        echo -e \"\\nThere is not a valid wine-pfx folder.\\nThis is neccesary to run this script.\"\n        [ ! -d \"${DIR}/Wine/wine-pfx\" ] &&\n            echo -e \"\\nCreating wine-pfx folder...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine/wine-pfx\"\n        echo -e '\\nPlease, copy a valid wine-prefix in \"wine-pfx\" folder or delete the created folder and create a symlink to a valid wineprefix and call the symlink \"wine-pfx\"'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to continue...\")\"\n\n    elif [ -f \"${DIR}/Wine/wine-pfx/system.reg\" ]; then\n        break\n    fi\ndone\n\n# Chech if wine-build exist\nwhile true; do\n    if [ ! -d \"${DIR}/Wine/wine-build\" ] && [ ! -f \"${DIR}/Wine/wine\" ]; then clear & sleep 1\n        echo -e '\\nThere is not a valid \"wine-build folder\" or symlink to a \"wine\" file\\nThis is neccesary to run this script'\n        [ ! -d \"${DIR}/Wine/wine-build\" ] &&\n            echo -e \"\\nCreating wine-build folder...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine/wine-build\"\n        echo -e '\\nPlease, copy a valid wine-build in \"wine-build\" folder or delete the created folder and create a symlink to a valid \"wine-build\" folder and call the symlink \"wine-build.\\nOr create a symlink to a \"wine\" file\"'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to continue...\")\"\n\n    elif [ -d \"${DIR}/Wine/wine-build\" ]; then\n        WINE_BUILD=$(find -L \"${DIR}/Wine/wine-build\" -type f -iname \"wine\") 2> /dev/null\n        [ -f \"$WINE_BUILD\" ] && ln -sf \"$WINE_BUILD\" \"${DIR}/Wine/wine\" > /dev/null 2>&1\n        break\n\n    elif [ -f \"${DIR}/Wine/wine\" ]; then\n        [ -d \"${DIR}/Wine/wine-build\" ] &&\n            WINE_BUILD=$(find -L \"${DIR}/Wine/wine-build\" -type f -iname \"wine\") 2> /dev/null &&\n            ln -sf \"$WINE_BUILD\" \"${DIR}/Wine/wine\" > /dev/null 2>&1\n        break\n    fi\ndone\n\n# Set wine-build & wineprefix\nWINE=\"$DIR/Wine/wine\"\nWINEPREFIX=\"$DIR/Wine/wine-pfx/\"\n\n# ======================================================================== #\n\n# Launch\ncd \"$DIR\"\ngamemoderun WINEPREFIX=\"$WINEPREFIX\" \"$WINE\" \"$EXE\" $ARGS &\necho -e \"\\nLaunching $DIR/$EXE\\n\" | sed 's/\\.\\///g'\n\n# Before Launch\nwhile ! pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    $COMP_Disabled\n    killall polybar\n    sleep 5\n    killall lutris\n    killall cairo-dock\n\n# After Launch\nwhile pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    $COMP_Enabled\n    ~/.config/polybar/launch.sh\n    cairo-dock > /dev/null 2>&1 &\n    sleep 5\n    killall gamemoded\n    exit\n", "    killall polybar\n", "polybar", "    ~/.config/polybar/launch.sh\n", "#!/bin/bash\n\n# ======================================================================== #\n\n# Game Directory\nDIR=$(dirname \"$(realpath \"$0\")\" | sed -s \"s|/Wine||g\")\n\n# Game Executable\nEXE=\"./DSPGAME.exe\"\nPROCESS=\"DSPGAME.exe\"\nARGS=\"\"\n\n# Environment\nexport WINEDLLOVERRIDES=\"mscoree,mshtml=\"\nexport WINEFSYNC=1\nexport MANGOHUD=1\nexport ENABLE_VKBASALT=1\nexport __GL_THREADED_OPTIMIZATIONS=1\nexport __GL_SHADER_DISK_CACHE_SKIP_CLEANUP=1\nexport __GL_SHADER_DISK_CACHE=1\nexport __GL_SHADER_DISK_CACHE_PATH=\"$DIR\"\n\n# ======================================================================== #\n\n# Wine Directories\nLAUNCH_GAME=\"$(find \"${DIR}/Wine\" -type f -iname \"Launch-*\")\"\n\nwhile true; do\n    if [ ! -f \"$LAUNCH_GAME\" ]; then\n        clear & sleep 1\n        echo -e '\\nThis Script needs to be in a folder called \"Wine\" inside the Current (Game) folder.'\n        [ ! -d \"${DIR}/Wine\" ] &&\n        echo -e \"\\nCreating one in the current directory...\" &&\n        sleep 2 && mkdir -p \"${DIR}/Wine\"\n        echo -e '\\nPlease, put this script in it and put \"Wine\" folder whatever you want in the Game folder.'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to close this script and make the changes...\")\"\n        echo \"\" & exit\n    else\n        break\n    fi\ndone\n\nwhile true; do\n    if [ ! -f \"${DIR}/Wine/wine-pfx/system.reg\" ]; then\n        clear & sleep 1\n        echo -e \"\\nThere is not a valid wine-pfx folder.\\nThis is neccesary to run this script.\"\n        [ ! -d \"${DIR}/Wine/wine-pfx\" ] &&\n        echo -e \"\\nCreating wine-pfx folder...\" && sleep 2 &&\n        mkdir -p \"${DIR}/Wine/wine-pfx\"\n        echo -e '\\nPlease, copy a valid wine-prefix in \"wine-pfx\" folder or delete the created folder and create a symlink to a valid wineprefix and call the symlink \"wine-pfx\"'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to continue...\")\"\n\n    elif [ -f \"${DIR}/Wine/wine-pfx/system.reg\" ]; then\n        break\n    fi\ndone\n\nwhile true; do\n    if [ ! -d \"${DIR}/Wine/wine-build\" ] && [ ! -f \"${DIR}/Wine/wine\" ]; then\n        clear & sleep 1\n        echo -e '\\nThere is not a valid \"wine-build folder\" or symlink to a \"wine\" file\\nThis is neccesary to run this script'\n        [ ! -d \"${DIR}/Wine/wine-build\" ] &&\n        echo -e \"\\nCreating wine-build folder...\" && sleep 2 &&\n        mkdir -p \"${DIR}/Wine/wine-build\"\n        echo -e '\\nPlease, copy a valid wine-build in \"wine-build\" folder or delete the created folder and create a symlink to a valid \"wine-build\" folder and call the symlink \"wine-build.\\nOr create a symlink to a \"wine\" file\"'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to continue...\")\"\n\n    elif [ -d \"${DIR}/Wine/wine-build\" ]; then\n        WINE_BUILD=$(find -L \"${DIR}/Wine/wine-build\" -type f -iname \"wine\") 2> /dev/null\n        [ -f \"$WINE_BUILD\" ] && ln -sf \"$WINE_BUILD\" \"${DIR}/Wine/wine\" > /dev/null 2>&1\n        break\n\n    elif [ -f \"${DIR}/Wine/wine\" ]; then\n        [ -d \"${DIR}/Wine/wine-build\" ] &&\n        WINE_BUILD=$(find -L \"${DIR}/Wine/wine-build\" -type f -iname \"wine\") 2> /dev/null &&\n        ln -sf \"$WINE_BUILD\" \"${DIR}/Wine/wine\" > /dev/null 2>&1\n        break\n    fi\ndone\n\nWINE=\"$DIR/Wine/wine\"\nWINEPREFIX=\"$DIR/Wine/wine-pfx/\"\n\n# ======================================================================== #\n\n# Launch\ncd \"$DIR\"\ngamemoderun WINEPREFIX=\"$WINEPREFIX\" \"$WINE\" \"$EXE\" $ARGS &\necho -e \"\\nLaunching $DIR/$EXE\\n\" | sed 's/\\.\\///g'\n\n# Before Launch\nwhile ! pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    qdbus org.kde.KWin /Compositor suspend\n    killall polybar\n    sleep 5\n    killall lutris\n    killall cairo-dock\n\n# After Launch\nwhile pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    qdbus org.kde.KWin /Compositor resume\n    $HOME/Scripts/Bash/Polybar/launch.sh\n    cairo-dock > /dev/null 2>&1 &\n    sleep 5\n    killall gamemoded\n", "#!/bin/bash\n\n# ======================================================================== #\n\n# Current Directory\nDIR=$(dirname \"$(realpath \"$0\")\" | sed -s \"s|/Wine||g\")\n\n# Compositor\nCOMP_Disabled=\"killall picom\"\nCOMP_Enabled=\"picom -cCGb\"\n\n# Game Executable\nEXE=\"./bin/x64/Game.exe\"\nPROCESS=\"Game.exe\"\nARGS=\"-vulkan\"\n\n# Environment\nexport WINEDLLOVERRIDES=\"mscoree,mshtml=\"\nexport WINEFSYNC=1\nexport MANGOHUD=1\nexport ENABLE_VKBASALT=1\nexport __GL_THREADED_OPTIMIZATIONS=1 # NVIDIA\nexport __GL_SHADER_DISK_CACHE_SKIP_CLEANUP=1\nexport __GL_SHADER_DISK_CACHE=1\nexport __GL_SHADER_DISK_CACHE_PATH=\"$DIR\"\n\n# ======================================================================== #\n\n# Chech if the script is in Wine directory\nLAUNCH_GAME=\"$(find \"${DIR}/Wine\" -type f -iname \"Launch-*\")\"\n\nwhile true; do\n    if [ ! -f \"$LAUNCH_GAME\" ]; then clear & sleep 1\n        echo -e '\\nThis Script needs to be in a folder called \"Wine\", with the prename \"Launch-\" (example: Launch-My_Game.sh) inside the Game folder.'\n        [ ! -d \"${DIR}/Wine\" ] &&\n            echo -e \"\\nCreating one in the current directory...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine\"\n        echo -e '\\nPlease, put this script in it and put \"Wine\" folder whatever you want in the Game folder.'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to close this script, make the changes and run it again...\")\"; echo &\n        exit\n\n    else\n        break\n    fi\ndone\n\n# Chech if wine-pfx exist\nwhile true; do\n    if [ ! -f \"${DIR}/Wine/wine-pfx/system.reg\" ]; then clear & sleep 1\n        echo -e \"\\nThere is not a valid wine-pfx folder.\\nThis is neccesary to run this script.\"\n        [ ! -d \"${DIR}/Wine/wine-pfx\" ] &&\n            echo -e \"\\nCreating wine-pfx folder...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine/wine-pfx\"\n        echo -e '\\nPlease, copy a valid wine-prefix in \"wine-pfx\" folder or delete the created folder and create a symlink to a valid wineprefix and call the symlink \"wine-pfx\"'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to continue...\")\"\n\n    elif [ -f \"${DIR}/Wine/wine-pfx/system.reg\" ]; then\n        break\n    fi\ndone\n\n# Chech if wine-build exist\nwhile true; do\n    if [ ! -d \"${DIR}/Wine/wine-build\" ] && [ ! -f \"${DIR}/Wine/wine\" ]; then clear & sleep 1\n        echo -e '\\nThere is not a valid \"wine-build folder\" or symlink to a \"wine\" file\\nThis is neccesary to run this script'\n        [ ! -d \"${DIR}/Wine/wine-build\" ] &&\n            echo -e \"\\nCreating wine-build folder...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine/wine-build\"\n        echo -e '\\nPlease, copy a valid wine-build in \"wine-build\" folder or delete the created folder and create a symlink to a valid \"wine-build\" folder and call the symlink \"wine-build.\\nOr create a symlink to a \"wine\" file\"'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to continue...\")\"\n\n    elif [ -d \"${DIR}/Wine/wine-build\" ]; then\n        WINE_BUILD=$(find -L \"${DIR}/Wine/wine-build\" -type f -iname \"wine\") 2> /dev/null\n        [ -f \"$WINE_BUILD\" ] && ln -sf \"$WINE_BUILD\" \"${DIR}/Wine/wine\" > /dev/null 2>&1\n        break\n\n    elif [ -f \"${DIR}/Wine/wine\" ]; then\n        [ -d \"${DIR}/Wine/wine-build\" ] &&\n            WINE_BUILD=$(find -L \"${DIR}/Wine/wine-build\" -type f -iname \"wine\") 2> /dev/null &&\n            ln -sf \"$WINE_BUILD\" \"${DIR}/Wine/wine\" > /dev/null 2>&1\n        break\n    fi\ndone\n\n# Set wine-build & wineprefix\nWINE=\"$DIR/Wine/wine\"\nWINEPREFIX=\"$DIR/Wine/wine-pfx/\"\n\n# ======================================================================== #\n\n# Launch\ncd \"$DIR\"\ngamemoderun WINEPREFIX=\"$WINEPREFIX\" \"$WINE\" \"$EXE\" $ARGS &\necho -e \"\\nLaunching $DIR/$EXE\\n\" | sed 's/\\.\\///g'\n\n# Before Launch\nwhile ! pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    $COMP_Disabled\n    sleep 5\n    killall lutris\n    killall cairo-dock\n\n# After Launch\nwhile pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    $COMP_Enabled\n    cairo-dock > /dev/null 2>&1 &\n    sleep 5\n    killall gamemoded\n    exit\n", "valheim", "valheim.exe", "bin/x64/Game.exe", "Game.exe", "-vulkan", " '/home/govi/Wine/wine_6.2/wine-build_tkg/usr/bin/wine'", " '/home/govi/Games/PC/Valheim/Wine/Launch-Valheim.sh'", "Launch-Valheim", "Valheim", "linux", "/sys/devices/platform/coretemp.", "/sys/devices/platform/", "Games/", "/home/govi/Games/PC", "40", "\"^STRING\"", " 'NF>1 {print $2}'", "awk -F '\\+|\\.' 'NF>1 {print $2}'", "'{print substr($0,2,6)}'", "sensors | awk '$1 ~ /^Package/ {print substr($0,17,2)}'", "cat /sys/devices/platform/coretemp.0/hwmon/hwmon1/temp1_input | cut -c -2", "sensors | awk '$1 ~ /^edge:/ {print substr($0,16,2)}'", "sensors | grep \"edge\" | awk '{print $2}' | cut -b2-3", "{print substr($0,17,2)}'", "2 characters", "NR < 1", "NR > 1 { exit }; 1", "sensors | awk '$1 ~ /^temp1/ {print substr($0,16,2)} NR > 1 { exit }; 1'", "govi", "/home/govi/.config/qtile/scripts/rss_youtube.sh", "exit", "sensors | awk '$1 ~ /^temp1/ {print substr($0,16,2)} NR > 2 { exit }; 1'", " NR > 2 { exit }; 1", "sensors | awk '$1 ~ /^temp1/ {print substr($0,16,2)}'", "NR==52", "enable_experimental_conpty_backend", "cut", "enable_", "enable_experimental_", "_backend", "c", "back", "alacritty ", "]", "m\\]", "\\[\\033[1;32m\\]\\u:\\[\\033[1;34m\\] \\W\\[\\033[1;34m\\] \\$\\[\\033[0m\\]", "\"%B%{$fg[red]%}[%{$fg[yellow]%}%n%{$fg[green]%}@%{$fg[blue]%}%M$fg[green]%}:%{$fg[magenta]%}%~%{$fg[red]%}]%{$reset_color%}$%b\"", "shopt checkwinsize", "#PS1=\"%B%{$fg[red]%}[%{$fg[yellow]%}%n%{$fg[green]%}@%{$fg[blue]%}%M$fg[green]%}:%{$fg[magenta]%}%~%{$fg[red]%}]%{$reset_color%}$%b\"\n", "\n\nHere's an example of how to set a red prompt:\n\nPS1=$'\\e[0;31m$ \\e[0m'\n", "PS1=$'\\e[0;31m$ \\e[0m'", "\\e[0;31m$ \\e[0m", "\\e[0;31m\\", "%n%", "0", "e[0m", "2", "autoload -U colors && colors", "PS1=\"%{$fg[red]%}%n%{$reset_color%}@%{$fg[blue]%}%m %{$fg[yellow]%}%~ %{$reset_color%}%% \"", "e", "PS1=$'\\e[0;31m\\[ \\e[0m \\e[0;33%n%\\ \\e[0m \\e[0;31m$ \\e[0m'\n", "https://superuser.com/a/1251045/290299", "https://unix.stackexchange.com/a/174596/194343", "http://zsh.sourceforge.net/Doc/Release/Prompt-Expansion.html#Visual-effects", "https://unix.stackexchange.com/a/124409/194343", "t_color%}%% \"\n\nSupported Colors:\nred, blue, green, cyan, yellow, magenta, black, & white (from this answer) although different computers may have different valid options.\n\nSurround color codes (and any other non-printable chars) with %{....%}. This is for the text wrapping to work correctly.\n\nAdditionally, here is how you can get this to work with the directory-trimming from here.\n\nPS1=\"%{$fg[red]%}%n%{$reset_color%}@%{$fg[blue]%}%m %{$fg[yellow]%}%(5~|%-1~/.../%3~|%4~) %{$reset_color%}%% \"\n\nShare\nImprove this answer\nFollow\nedited Oct 15 '19 at 18:17\nJacob Ford\n1,96011 gold badge1818 silver badges3131 bronze badges\nanswered Mar 28 '10 at 21:37\nJoe the Person\n3,13133 gold badges1919 silver badges3232 bronze badges\n\n    5\n    Agreed, by far the superior answer (luckily this answer was the third Google result ;) \u2013 new123456 Nov 14 '10 at 5:02\n    4\n    not working for me. :( zsh: colors: function definition file not found \u2013 balki Sep 8 '11 at 4:20\n    Are you using ZSH4? I don't think it works on versions less than 4.3.11. If you have the latest version maybe it is not using the right files. \u2013 Joe the Person Sep 8 '11 at 22:53\n    What are the valid color values? \u2013 chakrit Jun 13 '12 at 5:43\n    13\n    the %{...%} means that the content will be interpreted as a literal escape sequence, so the cursor wont move while printing the sequence. If you dont use this, the color codes can actually move the cursor and produce undesired effects. This is documented in the Visual Effects section in zshmisc man page \u2013 Bruno Penteado Jul 14 '13 at 17:06 \n\nShow 1 more comments\n81\n\nZsh comes with colored prompts builtin. Try\n\nautoload -U promptinit && promptinit\n\nand then prompt -l lists available prompts, -p fire previews the \"fire\" prompt, -s fire sets it.\n\nWhen you are ready to add a prompt add something like this below the autoload line above:\n\nprompt fade red\n\nShare\nImprove this answer\nFollow\nedited Jun 22 '11 at 12:27\npjammer\n8,96544 gold badges4343 silver badges5656 bronze badges\nanswered Dec 21 '10 at 0:32\nMitro\n1,3061212 silver badges1111 bronze badges\n\n    Is there a way to color all the themes? I like the walters prompt but would like it in red. \u2013 Pat Myron Oct 25 '17 at 21:29\n\nAdd a comment\n25\n\nI don't think the autoload -U colors && colors is needed anymore and one can simply do:\n\nPS1=\"%{%F{red}%}%n%{%f%}@%{%F{blue}%}%m %{%F{yellow}%}%~ %{$%f%}%% \"\n\nto achieve the same result as FireDude's answer. See the ZSH documentation for more info.\nShare\nImprove this answer\nFollow\nedited May 23 '17 at 12:17\nCommunity\u2666\n111 silver badge\nanswered Apr 8 '11 at 7:54\nAndrew Marshall\n88.4k1919 gold badges206206 silver badges205205 bronze badges\n\n    1\n    FYI. I've just tried in Ubunutu 11.04 and colors didn't work for me without autoload -U colors && colors \u2013 dpc.pw Apr 16 '11 at 20:09\n    2\n    Weird. Works for me on OS X & Ubuntu 10.04. \u2013 Andrew Marshall Apr 16 '11 at 20:40\n    @Andrew Marshall Yes, but it is more likely to work with autoload on. \u2013 Joe the Person Jul 26 '11 at 3:53 \n\n@fireDude67 How to set autoload on ? \u2013 balki Sep 8 '11 at 4:22\n1\nIf you don't need autoload -U colors, that means that your distro already has it in some other zsh initialization file. You should still include it in scripts you intend to share with others. \u2013 kindall Aug 19 '19 at 22:33\n\nShow 3 more comments\n24\n\nThe answer by Bryan Oakley above has a glitch as it has already been pointed out and the solution offered by Andrew Marshall though it does not carry the glitch, nevertheless it does not make it obvious for too much customization on the colors used.\n\nAs macOS Catalina asks for zsh to be the default shell from now on, I think several more people may want to customize their prompt and might be coming here for an answer. So, I thought I would try to give a broader summary and touch upon other very closely-related notions that allow more customization.\n\n3-Digit Codes for Various Colors. First of all, here we can find 3-digit codes for various colors: https://unix.stackexchange.com/a/124409/194343. For example, 214 is some kind of orange color.\n\nForeground and Background. The other key information is that for Foreground and bacKground colors one can define what they want with F and K respectively. Source is zsh manual on visual effects: http://zsh.sourceforge.net/Doc/Release/Prompt-Expansion.html#Visual-effects\n\nSo, for example, the following two commands\n\nautoload -U colors && colors\nexport PS1=\"%F{214}%K{000}%m%F{015}%K{000}:%F{039}%K{000}%~%F{015}%K{000}\\$ \"\n\npresent the hostname in orange with black background, followed by a colon in white with black background, followed by the current working directory in bright blue with black background, followed by the dollar sign in white with black background.\n\nMore related information is found below.\n\nPrompt information on the right-hand side. For example, adding a timestamp. See https://superuser.com/a/1251045/290299. Of course, this can be color-coded, for example with some light blue/purple-ish color, like this:\n\nRPROMPT=\"%F{111}%K{000}[%D{%f/%m/%y}|%@]\"\n\nColors for ls. After reading the manual for ls, one for example can activate the colors for ls using the following two commands:\n\nexport CLICOLOR=1\nexport LSCOLORS=gafacadabaegedabagacad\n\nFinally, as a last remark that I have not tested as I am happy with my configuration, another avenue might be for someone to install the port coreutils from MacPorts and then use gdircolors (source: https://unix.stackexchange.com/a/174596/194343). (I may edit this last part in the future as all the above are related pieces that make every-day life much more fun and easier to cope with.)\nShare\nImprove this answer\nFollow\nedited Oct 25 '19 at 18:08\nanswered Oct 25 '19 at 17:52\nMightyMouse\n10.4k77 gold badges2828 silver badges4141 bronze badges\n\n    1\n    This is an immensely helpful answer. Thanks for putting this together. \u2013 shaunakde Jul 16 '20 at 19:49\n\nAdd a comment\n4\n\nTry my favorite: put in\n\n~/.zshrc\n\nthis line:\n\nPROMPT='%F{240}%n%F{red}@%F{green}%m:%F{141}%d$ %F{reset}'\n\ndon't forget\n\nsource ~/.zshrc\n\nto test the changes\n\nyou can change the colors/color codes, of course :-)\nShare\nImprove this answer\nFollow\nanswered Apr 11 '20 at 7:54\nHermann Schwarz\n55244 silver badges1313 bronze badges\nAdd a comment\n3\n\nI have found that, with zsh5 (the default one on Debian Jessie), all those solutions works:\n\n    $'\\e[00m\n    $fg[white]\n    $fg{white}\n\nNow, they have a problem: they will move the cursor, resulting in ugly decal when tabbing (for auto-completion). The solution is simply to surround the escape sequences with %{FOOBAR%}. Took me a while to figure this. For 2nd and 3rd solutions loading colors module is mandatory. To keep the 1st solution readable, just define variables for the colors you use.\nShare\nImprove this answer\nFollow\nanswered Feb 29 '16 at 10:30\nuser3459474\n12566 bronze badges\nAdd a comment\n3\n\nTo get a prompt with the color depending on the last command\u2019s exit status, you could use this:\n\nPS1='%(?.%F{green}.%F{red})%n@%m:%~%# %f'\n\nJust add this line to your ~/.zshrc.\n\nThe documentation lists possible placeholders.\nShare\nImprove this answer\nFollow\nedited Oct 17 '19 at 14:58\nanswered Oct 13 '19 at 16:27\nMartin\n1,8671818 silver badges2020 bronze badges\n\n    This is the best solution here, Thank you very much. \u2013 Eddy Ekofo Jan 10 '20 at 15:07\n\nAdd a comment\n2\n\nTo complement all of the above answers another convenient trick is to place the coloured prompt settings into a zsh function. There you may define local variables to alias longer commands, e.g. rc=$reset_color or define your own colour variables. Don't forget to place it into your .zshrc file and call the function you have defined:\n\n# Coloured prompt\nautoload -U colors && colors\nfunction myprompt {\n  local rc=$reset_color\n  export PS1=\"%F{cyan}%n%{$rc%}@%F{green}%m%{$rc%}:%F{magenta}%~%{$rc%}%# \"\n}\nmyprompt\n\nShare\nImprove this answer\nFollow\nanswered Feb 26 '20 at 17:18\nmabalenk\n55555 silver badges1212 bronze badges\nAdd a comment\n1\n\nman zshall and search for PROMPT EXPANSION\n\nAfter reading the existing answers here, several of them are conflicting. I've tried the various approaches on systems running zsh 4.2 and 5+ and found that the reason these answers are conflicting is that they do not say which version of ZSH they are targeted at. Different versions use different syntax for this and some of them require various autoloads.\n\nSo, the best bet is probably to man zshall and search for PROMPT EXPANSION to find out all the rules for your particular installation of zsh. Note in the comments, things like \"I use Ubuntu 11.04 or 10.4 or OSX\" Are not very meaningful as it's unclear which version of ZSH you are using. Ubuntu 11.04 does not imply a newer version of ZSH than ubuntu 10.04. There may be any number of reasons that an older version was installed. For that matter a newer version of ZSH does not imply which syntax to use without knowing which version of ZSH it is.\nShare\nImprove this answer\nFollow\nanswered Jul 17 '14 at 16:02\ncs_alumnus\n1,4091515 silver badges2323 bronze badges\nAdd a comment\n1\n\nIn order to not waste space in the terminal with special characters to pieces of information, you can differentiate information using multiple colors.\n\nEg. in order to get this desired effect:\n\nDesired Outcome\n\nYou can do the following to your prompt:\n\nPROMPT='%F{magenta}${PWD/#$HOME/~} %F{green}${vcs_info_msg_0_} %F{cyan}$%F{reset_color} '\n\nThe way it works is every time you set a color using $F{myColor} the color from that point onward will stick to that. It's important to add in %{reset_color} at the end so that the input text goes back to the original color (or you could set it to something else if you'd like).\nShare\nImprove this answer\nFollow\nanswered Jan 10 at 8:22\nBarry Michael Doyle\n6,1501616 gold badges6161 silver badges106106 bronze badges\nAdd a comment\nYour Answer\n\nSign up or log in\nPost as a guest\nName\nEmail\n\nRequired, but never shown\n\nBy clicking \u201cPost Your Answer\u201d, you agree to our terms of service, privacy policy and cookie policy\nNot the answer you're looking for? Browse other questions tagged colors zsh prompt or ask your own question.\n\n    The Overflow Blog\n\nPodcast 313: What makes for a great API?\n\n    Level Up: Mastering statistics with Python\n    Featured on Meta\n    Opt-in alpha test for a new Stacks editor\n    Visual design changes to the review queues\n\n52 people chatting\nLinked\n48\nHow do I change my $PS1 on a Macbook for oh-my-zsh?\n25\nHow do zsh ansi colour codes work?\n15\nWhat is %K %F in oh my zsh theme?\n5\nzsh prompt configuration for bold colour variants\n1\nChanging username, hostname, and path color in iterm2\nRelated\n628\nHow do I get the color from a hexadecimal color code using .NET?\n564\nHow to set the text color of TextView in code?\n184\nHow to compare two colors for similarity/difference\n11\nzsh change prompt input color\n660\nHow to change node.js's console font color?\n34\nHow to show git colors on Zsh?\n7\nhow to migrate my bash prompt to zsh\n0\nchange background color in zsh (ubuntu 12.04)\n49\nHow to change zsh-autosuggestions color\n1\n", "\n141\n50\n\nTo recognize better the start and the end of output on a commandline, I want to change the color of my prompt, so that it is visibly different from the programs output. As I use zsh, can anyone give me a hint?\ncolors\nzsh\nprompt\nShare\nImprove this question\nFollow\nasked Mar 27 '09 at 13:29\nMnementh\n46.6k4141 gold badges140140 silver badges198198 bronze badges\nAdd a comment\n11 Answers\n67\n\nHere's an example of how to set a red prompt:\n\nPS1=$'\\e[0;31m$ \\e[0m'\n\nThe magic is the \\e[0;31m (turn on red foreground) and \\e[0m (turn off character attributes). These are called escape sequences. Different escape sequences give you different results, from absolute cursor positioning, to color, to being able to change the title bar of your window, and so on.\n\nFor more on escape sequences, see the wikipedia entry on ANSI escape codes\nShare\nImprove this answer\nFollow\nedited Oct 26 '10 at 14:11\nanswered Mar 27 '09 at 13:41\nBryan Oakley\n299k3131 gold badges426426 silver badges566566 bronze badges\n\n    3\n    I am using PROMPT='[%!]' in my .zshrc. How can you color it? I run unsuccessfully PROMPT='\\e[0;31m[%!] \\e[0m' in my .zshrc. \u2013 L\u00e9o L\u00e9opold Hertz \uc900\uc601 Apr 29 '09 at 3:22\n    3\n    @erikb85: why do you say it's wrong? Is there something I can do to make the answer better? For me, doing the above gives me a red dollar sign, so I don't understand why you think it's wrong. \u2013 Bryan Oakley Nov 24 '13 at 21:53\n    4\n    It is working, but the $ before the string make zshrc to glitch. The text is put on the left when I use tabulation. I prefer @Joe the Person answer \u2013 Moebius Jul 17 '15 at 11:10\n    1\n    I agree @Moebius I wanted this one to work it was clear and simple, but it completely messes up the tab on cd \u2013 diek Oct 7 '17 at 20:11 \n\n    3\n    I thought zsh didn't need crazy weird ANSI escape stuff...there must be a better answer... \u2013 Charlie Parker Nov 12 '19 at 16:52\n\nShow 1 more comments\n285\n\nPut this in ~/.zshrc:\n\nautoload -U colors && colors\nPS1=\"%{$fg[red]%}%n%{$reset_color%}@%{$fg[blue]%}%m %{$fg[yellow]%}%~ %{$reset_color%}", "5\n\nPut this in ~/.zshrc:\n\nautoload -U colors ", "#", "PS1=\"%{$fg[red]%}%n%{$reset_color%}@%{$fg[blue]%}%m %{$fg[yellow]%}%~ %{$reset_color%}$ \"\n", "~ %{$reset", "%b", "force_color_prompt", "#unset color_prompt force_color_prompt\n", "reset_color", "PS1=\"%{$fg[red]%}%n%{$reset_color%}@%{$fg[blue]%}%m %{$fg[yellow]%}%(5~|%-1~/.../%3~|%4~) %{$reset_color%}%% \"", "# History\nHISTSIZE=10000\nSAVEHIST=10000\nHISTFILE=~/.cache/zsh_history\n\n# Autocd\nsetopt autocd\n\n# Auto/tab complete\nautoload -U compinit\nzstyle ':completion:*' menu select\nzmodload zsh/complist\ncompinit\n_comp_options+=(globdots) # Include hidden files.\n\n# Bind keys, \"showkey -a\" to see output of a key.\nbindkey \"^[[H\" beginning-of-line\nbindkey \"^[[1~\" beginning-of-line\nbindkey \"^[[F\" end-of-line\nbindkey \"^[[4~\" end-of-line\nbindkey \"^[[3~\" delete-char\nbindkey -M menuselect 'h' vi-backward-char\nbindkey -M menuselect 'k' vi-up-line-or-history\nbindkey -M menuselect 'l' vi-forward-char\nbindkey -M menuselect 'j' vi-down-line-or-history\n\n# Colors\nunset color_prompt force_color_prompt\nautoload -U colors && colors\nPS1=\"%B%{$fg[red]%}[%{$fg[yellow]%}%n%{$fg[green]%}@%{$fg[blue]%}%M$fg[green]%}:%{$fg[magenta]%}%~%{$fg[red]%}]%{$reset_color%}$ %b\"\n\nalias diff='diff --color=auto'\nalias egrep='egrep --color=auto'\nalias fgrep='fgrep --color=auto'\nalias grep='grep --color=auto'\nexport GREP_COLOR='1;32'\nexport GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'\nexport CLICOLOR=1\nexport TERM='xterm-256color'\n\n# Environment\nexport BROWSER=\"firefox\"\nexport FILEMANAGER=\"spacefm\"\nexport TERMINAL=\"alacritty\"\nexport EDITOR=\"nvim\"\nexport VISUAL=\"nvim\"\nexport JAVA_OPTIONS='-Dawt.useSystemAAFontSettings=on -Dswing.aatext=true -Dswing.defaultlaf=com.sun.java.swing.plaf.gtk.GTKLookAndFeel'\nexport PATH=$PATH:$HOME/Scripts/Shell/\nexport PATH=$PATH:$HOME/Scripts/Shell/Autostart/\nexport PATH=$PATH:$HOME/Scripts/Shell/Games/\nexport PATH=$PATH:$HOME/Scripts/Shell/Polybar/\nexport PATH=$PATH:$HOME/Scripts/Shell/Programs/\nexport PATH=$PATH:$HOME/Scripts/Shell/Utils/\nexport PATH=$PATH:$HOME/Programs/Pycharm/bin/\n\n# Environment Games\n# export WINEFSYNC=1\n# export MANGOHUD=1\n# export MANGOHUD_DLSYM=1\n# export ENABLE_VKBASALT=1\nexport VKBASALT_CONFIG_FILE=\"$HOME/.config/vkBasalt/vkBasalt.conf\"\n\n# Load aliases if exist.\n[ -f \"$HOME/.config/aliasrc\" ] && source \"$HOME/.config/aliasrc\"\n\n# Aliases\nalias am=\"alsamixer\"\nalias cp=\"cp -rfv\"\nalias d1-p1=\"zenity --info --text \"Complete\" && paplay $HOME/.local/share/sounds/cause-and-effect.ogg\"\nalias du1=\"du -d1 -h\"\nalias ff=\"find \".\" -type f -iname \"\nalias fd=\"find \".\" -type d -iname \"\nalias ht=\"htop\"\nalias hy=\"history\"\nalias k9=\"kill -9\"\nalias ka=\"killall\"\nalias l=\"exa -al --color=always --group-directories-first\"\nalias mv=\"mv -fv\"\nalias nv=\"nvim\"\nalias pc=\"pavucontrol &\"\nalias pm=\"pacman\"\nalias pu=\"paru\"\nalias py=\"python3\"\nalias pyc=\"pycharm.sh\"\nalias rlz=\"source .zshrc\"\nalias rm=\"rm -rfv\"\nalias sfm=\"spacefm\"\nalias spm=\"sudo pacman\"\nalias sth=\"sort -h\"\nalias snv=\"sudo -E nvim\"\nalias wrt=\"wrestool -x --output=. -t14\"\nalias yt=\"youtube-dl --add-metadata -ic\"\n\n# Git aliases\nalias gcl=\"git clone\"\nalias ga=\"git add\"\nalias gcm=\"git commit -m\"\nalias gpm=\"git push -u origin master\"\n\n# System Info\nneofetch\n\n# Load zsh-autosuggestions.\nsource /usr/share/zsh/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh 2>/dev/null\nZSH_AUTOSUGGEST_HIGHLIGHT_STYLE='fg=242'\n\n# Load zsh-syntax-highlighting; should be last.\nsource /usr/share/zsh/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh 2>/dev/null", "$reset_color", "%}@%{", "$fg", "%\\", "s=on -D", "\\", "[", "PS1=\"%{%F{red}%}%n%{%f%}@%{%F{blue}%}%m %{%F{yellow}%}%~ %{$%f%}%% \"", "#PS1=\"%{$fg[red]%}%n%{$reset_color%}@%{$fg[blue]%}%m %{$fg[yellow]%}%(5~|%-1~/.../%3~|%4~) %{$reset_color%}%% \"", "green", "%B%", "%", "red", "{%F{yellow}%}", "%F{green}%}", "{%F{blue}%}", "{%F{green}%}:", "{%F{red}[%}", "%f%", "$", "}", "blue", "#PS1=\"%B%{$fg[red]%}[%{$fg[yellow]%}%n%{$fg[green]%}@%{$fg[blue]%}%M$fg[green]%}:%{$fg[magenta]%}%~%{$fg[red]%}]%{$reset_color%}$ %b\"\n", "1", "sensors | awk '$1 ~ /^temp1/ {print substr($0,16,2)}' | awk 'NR==1'", "cat \"/sys/devices/platform/it87.2608/hwmon/hwmon2/temp1_input\" | cut -c -2", "'NR>1'", "print only one line that starts with", "\n-1\n1\n\nWould like to run multiple \"awk\" commands in single script .. For example Master.csv.gz located at /cygdrive/e/Test/Master.csv.gz and Input files are located in different sub directories like /cygdrive/f/Jan/Input_Jan.csv.gz & /cygdrive/f/Feb/Input_Feb.csv.gz and so on .. All input files are *.gz extension files.\n\nBelow commands are working fine while executing command one by one:\n\nCommand#1\n\nawk ' BEGIN {FS = OFS = \",\"} FNR==NR {a[$2] = $0; next} ($2 in a) {print $0}'  <(gzip -dc /cygdrive/e/Test/Master.csv.gz) <(gzip -dc /cygdrive/f/Jan/Input_Jan.csv.gz) >>Output.txt\n\nOutput#1:\n\nName,Age,Location\nabc,20,xxx\n\nCommand#2\n\nawk ' BEGIN {FS = OFS = \",\"} FNR==NR {a[$2] = $0; next} ($2 in a) {print $0}'  ", "commands", "FNR==i", "one", "line", "only first ", " only first line", "print line that ", "~/.config/qtile/scripts/cpu_temp.sh", "/usr/share/xsessions/qtile.desktop", "yellow", "desktop", "sudo nvim /usr/share/xsessions/qtile.desktop\n", "~/.xinitrc", "def open_calendar(qtile):  # spawn calendar widget\n    qtile.cmd_spawn('gsimplecal next_month')", "calendar", "ulauncher", "gsimplecal next_month", "open_ulauncher", "lambda qtile: qtile.cmd_spawn('ulauncher')", "lambda qtile: ", "qtile.", "\ndef open_ulauncher(qtile):  # spawn calendar widget\n    lambda cmd_spawn('ulauncher')", "spawn", "-", "cmd", "_", "-o cmd -f restart  ", "Qtile Documentation, Release 0.17.1.dev3+g0245768.d20210217Live DocumentationThe shellhelpcommand provides the canonical documentation for the Qtile API:> cd layout/1layout[1]> helphelp command   -- Helpfora specific command.Builtins========cd    exit  help  ls    q     quitCommandsforthis object========================add           commands      current       delete        docdown          get_info      items         next          previousrotate        shuffle_down  shuffle_up    toggle_split  uplayout[1]> help previousprevious()Focus previous stack.1.4.3  qtile cmd-objThis is a simple tool to expose qtile.command functionality to shell.  This can be used standalone or in other shellscripts.Examples:Output ofqtile cmd-obj -husage: qtile cmd-obj [-h] [--object OBJ_SPEC [OBJ_SPEC ...]][--function FUNCTION] [--args ARGS [ARGS ...]] [--info]Simple tool to expose qtile.command functionality to shell.optional arguments:-h, --help            show this help message and exit--object OBJ_SPEC [OBJ_SPEC ...], -o OBJ_SPEC [OBJ_SPEC ...]Specify path to object (space separated). If no--function flag display available commands.--function FUNCTION, -f FUNCTIONSelect function to execute.--args ARGS [ARGS ...], -a ARGS [ARGS ...]Set arguments supplied to function.--info, -i            With both --object and --function args printsdocumentation for function.Examples:qtile cmd", "Qtile Documentation, Release 0.17.1.dev3+g0245768.d20210217Live DocumentationThe shellhelpcommand provides the canonical documentation for the Qtile API:> cd layout/1layout[1]> helphelp command   -- Helpfora specific command.Builtins========cd    exit  help  ls    q     quitCommandsforthis object========================add           commands      current       delete        docdown          get_info      items         next          previousrotate        shuffle_down  shuffle_up    toggle_split  uplayout[1]> help previousprevious()Focus previous stack.1.4.3  qtile cmd-objThis is a simple tool to expose qtile.command functionality to shell.  This can be used standalone or in other shellscripts.Examples:Output ofqtile cmd-obj -husage: qtile cmd-obj [-h] [--object OBJ_SPEC [OBJ_SPEC ...]][--function FUNCTION] [--args ARGS [ARGS ...]] [--info]Simple tool to expose qtile.command functionality to shell.optional arguments:-h, --help            show this help message and exit--object OBJ_SPEC [OBJ_SPEC ...], -o OBJ_SPEC [OBJ_SPEC ...]Specify path to object (space separated). If no--function flag display available commands.--function FUNCTION, -f FUNCTIONSelect function to execute.--args ARGS [ARGS ...], -a ARGS [ARGS ...]Set arguments supplied to function.--info, -i            With both --object and --function args printsdocumentation for function.Examples:qtile ", "qtile cmd-obj", "cairo-dock > /dev/null 2>&1 & exit", "Qtile Documentation, Release 0.17.1.dev3+g0245768.d20210217Live DocumentationThe shellhelpcommand provides the canonical documentation for the Qtile API:> cd layout/1layout[1]> helphelp command   -- Helpfora specific command.Builtins========cd    exit  help  ls    q     quitCommandsforthis object========================add           commands      current       delete        docdown          get_info      items         next          previousrotate        shuffle_down  shuffle_up    toggle_split  uplayout[1]> help previousprevious()Focus previous stack.1.4.3  qtile cmd-objThis is a simple tool to expose qtile.command functionality to shell.  This can be used standalone or in other shellscripts.Examples:Output ofqtile cmd-obj -husage: qtile cmd-obj [-h] [--object OBJ_SPEC [OBJ_SPEC ...]][--function FUNCTION] [--args ARGS [ARGS ...]] [--info]Simple tool to expose qtile.command functionality to shell.optional arguments:-h, --help            show this help message and exit--object OBJ_SPEC [OBJ_SPEC ...], -o OBJ_SPEC [OBJ_SPEC ...]Specify path to object (space separated). If no--function flag display available commands.--function FUNCTION, -f FUNCTIONSelect function to execute.--args ARGS [ARGS ...], -a ARGS [ARGS ...]Set arguments supplied to function.--info, -i            With both --object and --function args printsdocumentation for function.Examples:qtile cmd-objqtile cmd", "qtile cmd-obj -o cmd", " -f restart", " > /dev/null 2>&1", "cairo-dock &", "autostart = [\n        \"sh ~/.xinitrc\",\n]\n\nfor x in autostart:\n    os.system(x)", "$ qtile cmd-obj -o cmd -f restart", "qtile cmd-obj -o cmd -f restart", "text", "zenity --info --text \"RSS YouTube Restarted\" 2> /dev/null", "cairo-doc", " cairo-d", "cairo-dock ", "easystroke ", " easystroke &", "killall easystroke & ", "\n\n\n\n\n", "\n\n\n\n\n\n\n\n", " firewall-applet", "&&", "pgrep -x firewall-applet || firewall-applet &", "firewall-applet &", "pgrep -x ", " picom", " cairo-dock ", " easystroke ", "pgrep -x firewall-applet || ", "firewall", "applet", "pgrep -x firewall-applet && killall firewall-applet\n", "nm-applet", "pgrep -x  ||", "cairo-dock", " ", "pgrep -x cairo-dock  || ", "easystroke", "firewall-applet", "pgrep -x  || ", "pgrep -x picom ||", "||", "killall ", "icom && killall picom", "picom", "pgrep -x picom && killall picom\n", "#!/bin/sh\n\nuserresources=$HOME/.Xresources\nusermodmap=$HOME/.Xmodmap\nsysresources=/etc/X11/xinit/.Xresources\nsysmodmap=/etc/X11/xinit/.Xmodmap\n\n# merge in defaults and keymaps\n\nif [ -f $sysresources ]; then\n    xrdb -merge $sysresources\nfi\n\nif [ -f $sysmodmap ]; then\n    xmodmap $sysmodmap\nfi\n\nif [ -f \"$userresources\" ]; then\n  xrdb -merge \"$userresources\"\nfi\n\nif [ -f \"$usermodmap\" ]; then\n    xmodmap \"$usermodmap\"\nfi\n\n# start some nice programs\n\nif [ -d /etc/X11/xinit/xinitrc.d ] ; then\n for f in /etc/X11/xinit/xinitrc.d/?*.sh ; do\n  [ -x \"$f\" ] && . \"$f\"\n done\n unset f\nfi\n\n# twm &\n# xclock -geometry 50x50-1+1 &\n# xterm -geometry 80x50+494+51 &\n# xterm -geometry 80x20+494-0 &\n# exec xterm -geometry 80x66+0+0 -name login\n\n# Autostart\nexport PATH=$PATH:$HOME/Scripts/Shell/Autostart/\n\n# nvidia_led.sh &\n\n# nvidia-settings --load-config-only &\npgrep -x firewall-applet && killall firewall-applet\npgrep -x nm-applet && killall nm-applet\npgrep -x cairo-dock && killall cairo-dock\npgrep -x easystroke && killall easystroke\n\n\n picom -cCGb &\n\nsetxkbmap -layout es &\n\nset_background.sh &\n\nfirewall-applet &\n\nnm-applet --sm-disable &\n\ncairo-dock &\n\neasystroke &\n\nimwheel.sh &\n\nexec qtile\n", "\n", " qtile:", "lambda qtile:"], "CLIPBOARD": ["    subprocess.call([r'/home/govi/Scripts/Bash/Webgrab_Update_to_GIT.sh'])\n\n", "widget.GenPollText(", "/home/govi/.config/polybar/scripts/email.sh", "font=", "/home/govi/Scripts/Shell/Polybar/email.sh\n", "/home/govi/Scripts/Shell/Polybar/notf_switch.sh\n/home/govi/Scripts/Shell/Polybar/notifications.sh\n", "/home/govi/.config/qtile/scripts/notf_switch.sh\n/home/govi/.config/qtile/scripts/notifications.sh\n", " '/home/govi/.config/qtile/scripts/email.sh'", "%n%{$fg[green]%}@%", "    echo \"$fg[yellow]9\"\n", "echo \"$fg[yellow]", "~/.config/polybar/scripts/notifications.sh", "                    update_interval=180),\n", "GoVi_Icons", "                widget.Spacer(length=20),\n", "export PS1=\"\\[\\e[0;31m\\][\\[\\e[1;33m\\]\\u\\[\\e[1;37m\\]@\\[\\e[1;32m\\]\\h\\[\\e[1;37m\\]:\\[\\e[1;34m\\]\\w\\[\\e[0;31m\\]]\\[\\e[1;37m\\]$ \\[\\e[m\\]\"\nalias grep=\"grep --color=auto\"\n", "[\\e[0;31m\\]", "lambda: subprocess.call('~/.config/qtile/scripts/notifications.sh'),\n                    shell=True, text=True,", "getoutput", "def email():\n    e = subprocess.run('~/.config/qtile/scripts/notifications.sh',\n    shell=True, text=True,)\n    print(e, end=' '),", ", universal_newlines=True", "`tput setaf 1`", "\ud83d\udd15", "\ud83d\udd14", "def email():\n    e = subprocess.run('~/.config/qtile/scripts/notifications.sh',\n    shell=True, stdout=subprocess.PIPE)\n    print(e.stdout, end=' '),", "def email():\n    e = subprocess.run('~/.config/qtile/scripts/notifications.sh',\n    shell=True, stdout=subprocess.PIPE, universal_newlines=True)\n    print(e.stdout, end=' '),", "Noto Color Emoji", "def notf():\n    n = subprocess.run('~/.config/qtile/scripts/notifications.sh',\n    shell=True, stdout=subprocess.PIPE, universal_newlines=True)\n    print(n.stdout, end=' '),", "                    func=lambda: subprocess.getoutput('~/.config/qtile/scripts/email.sh'),\n", "def notf():\n    lambda: subprocess.getoutput('~/.config/qtile/scripts/notifications.sh')", "notf", "gpu_temp", "mb_temp", "/home/govi/.config/polybar/scripts/cpu_temp.sh\n", "application/x-desktop", "/home/govi/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Icons/mimetypes/64/text-x-script.svg\n", "/home/govi/Downloads/Deepin-4All/Deepin-4All\n", "\n# Bad lectures\n#sensors | grep \"Package id 0:\" | tr -d 'Package id 0:(hh=8.,rt=1.+)' | cut -c -5\n\n# Works on terminal not in polybar though\n#     echo -e \ud83c\udf21 \"\\e[38;5;26m\"$temp\" \u00b0C\"\n\n# Search temperature output\n# for i in /sys/class/hwmon/hwmon*/temp*_input; do echo \"$(<$(dirname $i)/name): $(cat ${i%_*}_label 2>/dev/null || echo $(basename ${i%_*})) $(readlink -f $i)\"; done\n", " %{T3}0 %{T-}%{F#0095ff}", "%{F#fdbc4b}", "%{F-}\n", "%{F#f90e39}", " '/home/govi/.config/qtile/scripts/cpu_temp.sh'", "mb_temp = open('/sys/devices/platform/it87.2608/hwmon/hwmon2/temp1_input', 'r')\n", "cat /sys/devices/platform/coretemp.0/hwmon/hwmon1/temp1_input | cut -c -2", "/home/govi/.config/qtile/scripts/cpu_temp.sh", "cpu_temp = subprocess.getoutput('/home/govi/.config/qtile/scripts/cpu_temp.sh')\n", "widget.GenPollText(func=gpu_temp, update_interval=1, foreground=", "notf = subprocess.getoutput('~/.config/qtile/scripts/notifications.sh')", "cpu_temp = subprocess.getoutput('~/.config/qtile/scripts/cpu_temp.sh')\n", "\u00b0C ", "~/.config/qtile/scripts/email.sh", "subprocess.getoutput('~/.config/qtile/scripts/cpu_temp.sh')", "subprocess.getoutput('~/.config/qtile/scripts/gpu_temp.sh')", "subprocess.getoutput('~/.config/qtile/scripts/notifications.')", "                widget.TextBox(font='GoVi_Icons', text='H'),\n", "                widget.TextBox(font='GoVi_Icons', text='3'),\n", "0", " ", "font='GoVi_Icons',", "    echo \"\ud83d\udd25 $temp\u00b0C \"\n\n", "                widget.Image(filename='~/.local/share/icons/GoVi_gtk-Icons/apps/64/arrow_up.png'),\n", "t", "lambda: subprocess.getoutput('~/.config/qtile/scripts/cpu_temp.sh'", "~/.config/polybar/scripts/notf_switch.sh", "'Button1': ", "subprocess.run('~/.config/polybar/scripts/notf_switch.sh')", "subprocess.run('~/.config/qtile/scripts/notf_switch.sh')", "subprocess.call('~/.config/qtile/scripts/notf_switch.sh', shell=True)", "lambda:", "~/.config/qtile/scripts/notf_switch.sh", "margin=7,", "margin=15", ", margin=9", "subprocess", "                    update_interval=1),\n", "os.system('~/.config/qtile/scripts/notf_switch.sh')", "lambda: ", "mouse_callbacks", "qtile.cmd_spawn", "lambda qtile: qtile.cmd_spawn", "'Button1': lambda qtile: qtile.cmd_spawn", "os.system", "                    mouse_callbacks={'Button1': lambda qtile: qtile.cmd_spawn('sh -c ~/.config/qtile/scripts/notf_switch.sh')}),\n", "firefox \"http://www.gmail.com\"", "'sh -c ~/.config/qtile/scripts/notf_switch.sh'", "rss_youtube_Reset.sh", "                    mouse_callbacks = {'Button1': lambda qtile: qtile.cmd_spawn('sh -c ~/.config/qtile/scripts/rss_youtube_Reset.sh')}),\n", "                    mouse_callbacks = {'Button1': lambda qtile: qtile.cmd_spawn('sh -c ~/.config/qtile/scripts/rss_games_Reset.sh')}),\n", "github", "qtile", "e", "o", "l", "y", "b", "a", "r", "/home/govi/.config/polybar/scripts/system_update.sh\n/home/govi/.config/polybar/scripts/updates_AUR.sh\n/home/govi/.config/polybar/scripts/updates_pacman.sh\n", "/home/govi/.config/qtile/scripts/rss_youtube_Reset.sh", "lazy.restart()", "cmd_restart", "padding=3", ", margin=8),", "http://www.gmail.com", "                    mouse_callbacks={'Button1': lambda qtile: qtile.cmd_spawn('firefox \"http://www.gmail.com\"')}),\n", "                widget.Spacer(length=3),\n", "                widget.Spacer(length=2),\n", "notf_ON", "                widget.GenPollText(func=lambda: subprocess.getoutput('~/.config/qtile/scripts/rss_github_not.sh'),\n                    update_interval=300, fontsize=12),", "                widget.GenPollText(func=lambda: subprocess.getoutput('~/.config/qtile/scripts/updates_pacman.sh'),\n                                   update_interval=300, fontsize=12),", "font='GoVi_Icons'", "        touch ~/.config/qtile/scripts/updates-pacman_icon\n", "/home/govi/.config/qtile/scripts/updates_pacman.sh\n", "~/.config/qtile/scripts/updates-pacman_icon", "def cpu_icon():\n    if cpu_temp < 55:\n        print(\"text='0'\", end='')\n    else:\n        print(\"text='\ud83d\udd25'\", end='')", "cpu_icon", "fmt", "cpu_temp = subprocess.getoutput('~/.config/qtile/scripts/cpu_temp.sh | cut -c1-2')\ncpu_temp = int(cpu_temp)", "def cpu_icon():\n    cpu_temp = subprocess.getoutput('~/.config/qtile/scripts/cpu_temp.sh | cut -c1-2')\n    cpu_temp = int(cpu_temp)\n\n    if cpu_temp <= 50:\n        return str('0')\n\n    elif cpu_temp >= 51:\n        return str('\ud83d\udd25')", "nvidia-smi --query-gpu=temperature.gpu --format=csv,noheader,nounits", "cat \"/sys/devices/platform/it87.2608/hwmon/hwmon2/temp1_input\" | cut -c -2", "paru -Qua | wc -l | cut -c1-1", "updates_aur", "mouse_callbacks={'Button1': lambda qtile: qtile.cmd_spawn('sh -c ~/.config/qtile/scripts/rss_github_Reset.sh')}", "mouse_callbacks={'Button1': lambda qtile: qtile.cmd_spawn('&FILEMANAGER  /')}", "mouse_callbacks={'Button1': lambda qtile: qtile.cmd_spawn('spacefm  /')})", " '/home/govi/Programs/Adobe/Wine/Launch-Photoshop.sh'", "/home/govi/Downloads/Godfall.v2.4.44-0xdeadc0de/Godfall/Aperion\n/home/govi/Downloads/Godfall.v2.4.44-0xdeadc0de/Godfall/Engine\n/home/govi/Downloads/Godfall.v2.4.44-0xdeadc0de/Godfall/OnlineFix\n/home/govi/Downloads/Godfall.v2.4.44-0xdeadc0de/Godfall/Aperion.exe\n/home/govi/Downloads/Godfall.v2.4.44-0xdeadc0de/Godfall/Launcher.exe\n/home/govi/Downloads/Godfall.v2.4.44-0xdeadc0de/Godfall/Manifest_DebugFiles_Win64.txt\n/home/govi/Downloads/Godfall.v2.4.44-0xdeadc0de/Godfall/Manifest_NonUFSFiles_Win64.txt\n/home/govi/Downloads/Godfall.v2.4.44-0xdeadc0de/Godfall/OnlineFixLauncher.ini\n", "v0.143.5", "/home/govi/Games/PC/Cyberpunk 2077/Cyberpunk.2077/game/files/archive\n/home/govi/Games/PC/Cyberpunk 2077/Cyberpunk.2077/game/files/bin\n/home/govi/Games/PC/Cyberpunk 2077/Cyberpunk.2077/game/files/engine\n/home/govi/Games/PC/Cyberpunk 2077/Cyberpunk.2077/game/files/r6\n/home/govi/Games/PC/Cyberpunk 2077/Cyberpunk.2077/game/files/gog.ico\n/home/govi/Games/PC/Cyberpunk 2077/Cyberpunk.2077/game/files/goggame-1423049311.hashdb\n/home/govi/Games/PC/Cyberpunk 2077/Cyberpunk.2077/game/files/goggame-1423049311.ico\n/home/govi/Games/PC/Cyberpunk 2077/Cyberpunk.2077/game/files/goggame-1423049311.info\n/home/govi/Games/PC/Cyberpunk 2077/Cyberpunk.2077/game/files/goggame-galaxyFileList.ini\n/home/govi/Games/PC/Cyberpunk 2077/Cyberpunk.2077/game/files/goglog.ini\n/home/govi/Games/PC/Cyberpunk 2077/Cyberpunk.2077/game/files/Launch Cyberpunk 2077.lnk\n/home/govi/Games/PC/Cyberpunk 2077/Cyberpunk.2077/game/files/support.ico\n", "/home/govi/Games/PC/Cyberpunk 2077/Cyberpunk.2077/game/prefix\n/home/govi/Games/PC/Cyberpunk 2077/Cyberpunk.2077/game/wine\n", "/home/govi/Games/PC/Cyberpunk 2077/wine-build\n", " '/home/govi/Games/PC/Cyberpunk 2077/Wine/wine-build/bin/wine64'", "/home/govi/wine64\n", "wine-pfx", "/home/govi/Games/PC/Cyberpunk 2077/wine-pfx\n", "/home/govi/Games/PC/Dyson Sphere Program/Wine\n", "#!/bin/bash\n\n# ======================================================================== #\n\n# Current Directory\nDIR=$(dirname \"$(realpath \"$0\")\" | sed -s \"s|/Wine||g\")\n\n# Compositor\nCOMP_Disabled=\"killall picom\"\nCOMP_Enabled=\"picom -cCGb\"\n\n# Game Executable\nEXE=\"./bin/x64/Game.exe\"\nPROCESS=\"Game.exe\"\nARGS=\"-vulkan\"\n\n# Environment\nexport WINEDLLOVERRIDES=\"mscoree,mshtml=\"\nexport WINEFSYNC=1\nexport MANGOHUD=1\nexport ENABLE_VKBASALT=1\nexport __GL_THREADED_OPTIMIZATIONS=1 # NVIDIA\nexport __GL_SHADER_DISK_CACHE_SKIP_CLEANUP=1\nexport __GL_SHADER_DISK_CACHE=1\nexport __GL_SHADER_DISK_CACHE_PATH=\"$DIR\"\n\n# ======================================================================== #\n\n# Chech if the script is in Wine directory\nLAUNCH_GAME=\"$(find \"${DIR}/Wine\" -type f -iname \"Launch-*\")\"\n\nwhile true; do\n    if [ ! -f \"$LAUNCH_GAME\" ]; then clear & sleep 1\n        echo -e '\\nThis Script needs to be in a folder called \"Wine\", with the prename \"Launch-\" (example: Launch-My_Game.sh) inside the Game folder.'\n        [ ! -d \"${DIR}/Wine\" ] &&\n            echo -e \"\\nCreating one in the current directory...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine\"\n        echo -e '\\nPlease, put this script in it and put \"Wine\" folder whatever you want in the Game folder.'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to close this script, make the changes and run it again...\")\"; echo &\n        exit\n\n    else\n        break\n    fi\ndone\n\n# Chech if wine-pfx exist\nwhile true; do\n    if [ ! -f \"${DIR}/Wine/wine-pfx/system.reg\" ]; then clear & sleep 1\n        echo -e \"\\nThere is not a valid wine-pfx folder.\\nThis is neccesary to run this script.\"\n        [ ! -d \"${DIR}/Wine/wine-pfx\" ] &&\n            echo -e \"\\nCreating wine-pfx folder...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine/wine-pfx\"\n        echo -e '\\nPlease, copy a valid wine-prefix in \"wine-pfx\" folder or delete the created folder and create a symlink to a valid wineprefix and call the symlink \"wine-pfx\"'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to continue...\")\"\n\n    elif [ -f \"${DIR}/Wine/wine-pfx/system.reg\" ]; then\n        break\n    fi\ndone\n\n# Chech if wine-build exist\nwhile true; do\n    if [ ! -d \"${DIR}/Wine/wine-build\" ] && [ ! -f \"${DIR}/Wine/wine\" ]; then clear & sleep 1\n        echo -e '\\nThere is not a valid \"wine-build folder\" or symlink to a \"wine\" file\\nThis is neccesary to run this script'\n        [ ! -d \"${DIR}/Wine/wine-build\" ] &&\n            echo -e \"\\nCreating wine-build folder...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine/wine-build\"\n        echo -e '\\nPlease, copy a valid wine-build in \"wine-build\" folder or delete the created folder and create a symlink to a valid \"wine-build\" folder and call the symlink \"wine-build.\\nOr create a symlink to a \"wine\" file\"'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to continue...\")\"\n\n    elif [ -d \"${DIR}/Wine/wine-build\" ]; then\n        WINE_BUILD=$(find -L \"${DIR}/Wine/wine-build\" -type f -iname \"wine\") 2> /dev/null\n        [ -f \"$WINE_BUILD\" ] && ln -sf \"$WINE_BUILD\" \"${DIR}/Wine/wine\" > /dev/null 2>&1\n        break\n\n    elif [ -f \"${DIR}/Wine/wine\" ]; then\n        [ -d \"${DIR}/Wine/wine-build\" ] &&\n            WINE_BUILD=$(find -L \"${DIR}/Wine/wine-build\" -type f -iname \"wine\") 2> /dev/null &&\n            ln -sf \"$WINE_BUILD\" \"${DIR}/Wine/wine\" > /dev/null 2>&1\n        break\n    fi\ndone\n\n# Set wine-build & wineprefix\nWINE=\"$DIR/Wine/wine\"\nWINEPREFIX=\"$DIR/Wine/wine-pfx/\"\n\n# ======================================================================== #\n\n# Launch\ncd \"$DIR\"\ngamemoderun WINEPREFIX=\"$WINEPREFIX\" \"$WINE\" \"$EXE\" $ARGS &\necho -e \"\\nLaunching $DIR/$EXE\\n\" | sed 's/\\.\\///g'\n\n# Before Launch\nwhile ! pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    $COMP_Disabled\n    killall polybar\n    sleep 5\n    killall lutris\n    killall cairo-dock\n\n# After Launch\nwhile pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    $COMP_Enabled\n    ~/.config/polybar/launch.sh\n    cairo-dock > /dev/null 2>&1 &\n    sleep 5\n    killall gamemoded\n    exit\n", "#!/bin/bash\n\n# ======================================================================== #\n\n# Current Directory\nDIR=$(dirname \"$(realpath \"$0\")\" | sed -s \"s|/Wine||g\")\n\n# Compositor\nCOMP_Disabled=\"killall picom\"\nCOMP_Enabled=\"picom -cCGb\"\n\n# Game Executable\nEXE=\"./bin/x64/Game.exe\"\nPROCESS=\"Game.exe\"\nARGS=\"-vulkan\"\n\n# Environment\nexport WINEDLLOVERRIDES=\"mscoree,mshtml=\"\nexport WINEFSYNC=1\nexport MANGOHUD=1\nexport ENABLE_VKBASALT=1\nexport __GL_THREADED_OPTIMIZATIONS=1 # NVIDIA\nexport __GL_SHADER_DISK_CACHE_SKIP_CLEANUP=1\nexport __GL_SHADER_DISK_CACHE=1\nexport __GL_SHADER_DISK_CACHE_PATH=\"$DIR\"\n\n# ======================================================================== #\n\n# Chech if the script is in Wine directory\nLAUNCH_GAME=\"$(find \"${DIR}/Wine\" -type f -iname \"Launch-*\")\"\n\nwhile true; do\n    if [ ! -f \"$LAUNCH_GAME\" ]; then clear & sleep 1\n        echo -e '\\nThis Script needs to be in a folder called \"Wine\", with the prename \"Launch-\" (example: Launch-My_Game.sh) inside the Game folder.'\n        [ ! -d \"${DIR}/Wine\" ] &&\n            echo -e \"\\nCreating one in the current directory...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine\"\n        echo -e '\\nPlease, put this script in it and put \"Wine\" folder whatever you want in the Game folder.'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to close this script, make the changes and run it again...\")\"; echo &\n        exit\n\n    else\n        break\n    fi\ndone\n\n# Chech if wine-pfx exist\nwhile true; do\n    if [ ! -f \"${DIR}/Wine/wine-pfx/system.reg\" ]; then clear & sleep 1\n        echo -e \"\\nThere is not a valid wine-pfx folder.\\nThis is neccesary to run this script.\"\n        [ ! -d \"${DIR}/Wine/wine-pfx\" ] &&\n            echo -e \"\\nCreating wine-pfx folder...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine/wine-pfx\"\n        echo -e '\\nPlease, copy a valid wine-prefix in \"wine-pfx\" folder or delete the created folder and create a symlink to a valid wineprefix and call the symlink \"wine-pfx\"'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to continue...\")\"\n\n    elif [ -f \"${DIR}/Wine/wine-pfx/system.reg\" ]; then\n        break\n    fi\ndone\n\n# Chech if wine-build exist\nwhile true; do\n    if [ ! -d \"${DIR}/Wine/wine-build\" ] && [ ! -f \"${DIR}/Wine/wine\" ]; then clear & sleep 1\n        echo -e '\\nThere is not a valid \"wine-build folder\" or symlink to a \"wine\" file\\nThis is neccesary to run this script'\n        [ ! -d \"${DIR}/Wine/wine-build\" ] &&\n            echo -e \"\\nCreating wine-build folder...\" && sleep 2 &&\n            mkdir -p \"${DIR}/Wine/wine-build\"\n        echo -e '\\nPlease, copy a valid wine-build in \"wine-build\" folder or delete the created folder and create a symlink to a valid \"wine-build\" folder and call the symlink \"wine-build.\\nOr create a symlink to a \"wine\" file\"'\n        read -rsn1 -p \"$(echo -e \"\\nPress any key to continue...\")\"\n\n    elif [ -d \"${DIR}/Wine/wine-build\" ]; then\n        WINE_BUILD=$(find -L \"${DIR}/Wine/wine-build\" -type f -iname \"wine\") 2> /dev/null\n        [ -f \"$WINE_BUILD\" ] && ln -sf \"$WINE_BUILD\" \"${DIR}/Wine/wine\" > /dev/null 2>&1\n        break\n\n    elif [ -f \"${DIR}/Wine/wine\" ]; then\n        [ -d \"${DIR}/Wine/wine-build\" ] &&\n            WINE_BUILD=$(find -L \"${DIR}/Wine/wine-build\" -type f -iname \"wine\") 2> /dev/null &&\n            ln -sf \"$WINE_BUILD\" \"${DIR}/Wine/wine\" > /dev/null 2>&1\n        break\n    fi\ndone\n\n# Set wine-build & wineprefix\nWINE=\"$DIR/Wine/wine\"\nWINEPREFIX=\"$DIR/Wine/wine-pfx/\"\n\n# ======================================================================== #\n\n# Launch\ncd \"$DIR\"\ngamemoderun WINEPREFIX=\"$WINEPREFIX\" \"$WINE\" \"$EXE\" $ARGS &\necho -e \"\\nLaunching $DIR/$EXE\\n\" | sed 's/\\.\\///g'\n\n# Before Launch\nwhile ! pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    $COMP_Disabled\n    sleep 5\n    killall lutris\n    killall cairo-dock\n\n# After Launch\nwhile pgrep -x \"$PROCESS\" > /dev/null; do sleep 1; done\n    $COMP_Enabled\n    cairo-dock > /dev/null 2>&1 &\n    sleep 5\n    killall gamemoded\n    exit\n", "valheim.exe", " '/home/govi/Wine/wine_6.2/wine-build_tkg/usr/bin/wine'", "/home/govi/wine\n/home/govi/wine64\n", " '/home/govi/Games/PC/Valheim/Wine/Launch-Valheim.sh'", "/home/govi/Wine/wine_6.2/wine\n", "/home/govi/Wine/wine_6.1/wine\n", "/home/govi/Wine/wine_6.0/wine\n", "Valheim", "/sys/devices/platform/", "sensors | grep \"edge\" | awk '{print $2}' | cut -b2-3", "awk -F '\\+|\\.' 'NF>1 {print $2}'", "'{print substr($0,2,6)}'", "sensors | awk '$1 ~ /^Package/ {print substr($0,17,2)}'", "sensors | awk '$1 ~ /^edge:/ {print substr($0,16,2)}'", "NR < 1", "NR > 1 { exit }; 1", "/home/govi/.config/qtile/scripts/rss_youtube.sh", "sensors | awk '$1 ~ /^temp1/ {print substr($0,16,2)} NR > 1 { exit }; 1'", "NR==52", "enable_experimental_conpty_backend", "\\", "\\[\\033[1;32m\\]\\u:\\[\\033[1;34m\\] \\W\\[\\033[1;34m\\] \\$\\[\\033[0m\\]", "shopt checkwinsize", "PS1=$'\\e[0;31m$ \\e[0m'", "\\e[0;31m$ \\e[0m", "PS1=\"%{$fg[red]%}%n%{$reset_color%}@%{$fg[blue]%}%m %{$fg[yellow]%}%~ %{$reset_color%}%% \"", "PS1=\"%{$fg[red]%}%n%{$reset_color%}@%{$fg[blue]%}%m %{$fg[yellow]%}%(5~|%-1~/.../%3~|%4~) %{$reset_color%}%% \"", "%\\", "PS1=\"%{%F{red}%}%n%{%f%}@%{%F{blue}%}%m %{%F{yellow}%}%~ %{$%f%}%% \"", "%B%", "{%F{yellow}%}", "{%F{green}%}:", "{%F{red}[%}", "%f%", "'NR>1'", "sensors | awk '$1 ~ /^temp1/ {print substr($0,16,2)}' | awk 'NR==1'", "FNR==i", "~/.config/qtile/scripts/cpu_temp.sh", "/usr/share/xsessions/qtile.desktop", "~/.xinitrc", "def open_calendar(qtile):  # spawn calendar widget\n    qtile.cmd_spawn('gsimplecal next_month')", "ulauncher", "open_ulauncher", "lambda qtile: ", "-o cmd -f restart  ", "qtile cmd-obj", "cairo-dock > /dev/null 2>&1 & exit", "qtile cmd-obj -o cmd", " -f restart", "cairo-dock &", "autostart = [\n        \"sh ~/.xinitrc\",\n]\n\nfor x in autostart:\n    os.system(x)", "qtile cmd-obj -o cmd -f restart", "zenity --info --text \"RSS YouTube Restarted\" 2> /dev/null", "pgrep -x firewall-applet || firewall-applet &", "pgrep -x firewall-applet || ", "nm-applet", "cairo-dock", "easystroke", "pgrep -x picom ||", "pgrep -x picom && killall picom\n"]}
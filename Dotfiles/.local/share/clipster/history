{"PRIMARY": [".", "https://github.com/yannishuber/pass-ulauncher", "edia\ninterva", "$FILEMANAGER", "alacritty", "$TERMINAL", "$B", "ROWSER h", "irefox h", "BROWSER", "BROWSER = 'firefox'\nFILEMANAGER = 'spacefm'\nTERMINAL = 'alacritty'", " '/home/govi/Scripts/Shell/Utils/Home_GIT.sh'", "govi", "widget.Image(filename='~/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Icons/panel/audio-volume-zero-panel.svg',\n                             mouse_callbacks={'Button1': lambda qtile: qtile.cmd_spawn('pavucontrol')}),", "~/Pictures", "widget.Image(filename='~/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Icons/panel/audio-volume-zero-panel.svg',\n", "    widget.Image(filename='~/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Icons/panel/audio-volume-zero-panel.svg',\n", " '/home/govi/.local/share/icons/GoVi_gtk-Icons/apps/64/nvidia.png'", "/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Icons/panel/audio-volume-zero-panel.svg", "'/home/govi/", "'", "$BROWSER", "~/.fehbg &", "feh --bg-max --randomize ~/.wallpaper/* &", "feh --bg-fill --randomize ~/Pictures/Desktop/* &", " --no-fehbg", "ill --randomize ~/Pictures/Desktop/*", "feh --bg-fill --no-fehbg --randomize ~/Pictures/Desktop/* &", "nitrogen --restore &", "sudo pacman -S alsa-utils feh htop lxappearance nitrogen pavucontrol picom-jonaburg-git qtile xorg xorg-xinit\n", "nitrogen", " every 5 seconds", "set_backround", "/home/govi/Proyects/Github/GoVi-Arch_Linux", "/home/govi/Scripts/Shell/Autostart", "# Autostart\nexport PATH=$PATH:$HOME/Scripts/Shell/Autostart/\n\nnvidia_led.sh &\n\nnvidia-settings --load-config-only &\n\nnm-applet --sm-disable &\n\npicom -cCGb &\n\nsetxkbmap -layout es &\n\nfeh --bg-fill --no-fehbg --randomize ~/Pictures/Desktop/* &\n\npolybar.sh &\n\neasystroke &\n\nimwheel.sh &\n\ncairo-dock &\n\nexec qtile", "# Autostart\nexport PATH=$PATH:$HOME/Scripts/Bash/Autostart/\n\nnvidia_led.sh &\n\nnvidia-settings --load-config-only &\n\npicom &\n\nsetxkbmap -layout es &\n\nnitrogen --restore &    m\n\npolybar.sh &\n\neasystroke &\n\nimwheel.sh &\n\ncairo-dock &\n\nexec qtile", " ", "Lutris", " '/home/govi/Scripts/Shell/Utils/set_backround.sh'", "  \"100:class_g     = 'Polybar'\",\n", "#################################\n#          Animations           #\n#################################\n# requires https://github.com/jonaburg/picom\n# (These are also the default values)       \ntransition-length = 200\ntransition-pow-x = 0.1\ntransition-pow-y = 0.1\ntransition-pow-w = 0.1\ntransition-pow-h = 0.1\nsize-transition = true\n\n\n#################################\n#             Corners           #\n#################################\n# requires: https://github.com/sdhand/compton or https://github.com/jonaburg/picom\ncorner-radius = 4.0;\nrounded-corners-exclude = [\n  #\"window_type = 'normal'\",\n  \"class_g = 'awesome'\",\n  \"class_g = 'URxvt'\",\n  \"class_g = 'XTerm'\",\n  \"class_g = 'kitty'\",\n  \"class_g = 'Alacritty'\",\n  \"class_g = 'Polybar'\",\n  \"class_g = 'code-oss'\",\n  #\"class_g = 'TelegramDesktop'\",\n  \"class_g = 'firefox'\",\n  \"class_g = 'Thunderbird'\"\n];\nround-borders = 1;\nround-borders-exclude = [\n  #\"class_g = 'TelegramDesktop'\",\n];\n\n#################################\n#             Shadows           #\n#################################\n\n\n# Enabled client-side shadows on windows. Note desktop windows \n# (windows with '_NET_WM_WINDOW_TYPE_DESKTOP') never get shadow, \n# unless explicitly requested using the wintypes option.\n#\n# shadow = false\nshadow = true;\n\n# The blur radius for shadows, in pixels. (defaults to 12)\n# shadow-radius = 12\nshadow-radius = 7;\n\n# The opacity of shadows. (0.0 - 1.0, defaults to 0.75)\n# shadow-opacity = .75\n\n# The left offset for shadows, in pixels. (defaults to -15)\n# shadow-offset-x = -15\nshadow-offset-x = -7;\n\n# The top offset for shadows, in pixels. (defaults to -15)\n# shadow-offset-y = -15\nshadow-offset-y = -7;\n\n# Avoid drawing shadows on dock/panel windows. This option is deprecated,\n# you should use the *wintypes* option in your config file instead.\n#\n# no-dock-shadow = false\n\n# Don't draw shadows on drag-and-drop windows. This option is deprecated, \n# you should use the *wintypes* option in your config file instead.\n#\n# no-dnd-shadow = false\n\n# Red color value of shadow (0.0 - 1.0, defaults to 0).\n# shadow-red = 0\n\n# Green color value of shadow (0.0 - 1.0, defaults to 0).\n# shadow-green = 0\n\n# Blue color value of shadow (0.0 - 1.0, defaults to 0).\n# shadow-blue = 0\n\n# Do not paint shadows on shaped windows. Note shaped windows \n# here means windows setting its shape through X Shape extension. \n# Those using ARGB background is beyond our control. \n# Deprecated, use \n#   shadow-exclude = 'bounding_shaped'\n# or \n#   shadow-exclude = 'bounding_shaped && !rounded_corners'\n# instead.\n#\n# shadow-ignore-shaped = ''\n\n# Specify a list of conditions of windows that should have no shadow.\n#\n# examples:\n#   shadow-exclude = \"n:e:Notification\";\n#\n# shadow-exclude = []\nshadow-exclude = [\n  \"name = 'Notification'\",\n  \"class_g = 'Conky'\",\n  \"class_g ?= 'Notify-osd'\",\n  \"class_g = 'Cairo-clock'\",\n  \"class_g = 'slop'\",\n  \"class_g = 'Polybar'\",\n  \"_GTK_FRAME_EXTENTS@:c\"\n];\n\n# Specify a X geometry that describes the region in which shadow should not\n# be painted in, such as a dock window region. Use \n#    shadow-exclude-reg = \"x10+0+0\"\n# for example, if the 10 pixels on the bottom of the screen should not have shadows painted on.\n#\n# shadow-exclude-reg = \"\" \n\n# Crop shadow of a window fully on a particular Xinerama screen to the screen.\n# xinerama-shadow-crop = false\n\n\n#################################\n#           Fading              #\n#################################\n\n\n# Fade windows in/out when opening/closing and when opacity changes,\n#  unless no-fading-openclose is used.\n# fading = false\nfading = true;\n\n# Opacity change between steps while fading in. (0.01 - 1.0, defaults to 0.028)\n# fade-in-step = 0.028\nfade-in-step = 0.03;\n\n# Opacity change between steps while fading out. (0.01 - 1.0, defaults to 0.03)\n# fade-out-step = 0.03\nfade-out-step = 0.03;\n\n# The time between steps in fade step, in milliseconds. (> 0, defaults to 10)\n# fade-delta = 10\n\n# Specify a list of conditions of windows that should not be faded.\n# don't need this, we disable fading for all normal windows with wintypes: {}\nfade-exclude = [\n  \"class_g = 'slop'\"   # maim\n]\n\n# Do not fade on window open/close.\n# no-fading-openclose = false\n\n# Do not fade destroyed ARGB windows with WM frame. Workaround of bugs in Openbox, Fluxbox, etc.\n# no-fading-destroyed-argb = false\n\n\n#################################\n#   Transparency / Opacity      #\n#################################\n\n\n# Opacity of inactive windows. (0.1 - 1.0, defaults to 1.0)\n# inactive-opacity = 1\ninactive-opacity = 0.8;\n\n# Opacity of window titlebars and borders. (0.1 - 1.0, disabled by default)\n# frame-opacity = 1.0\nframe-opacity = 0.7;\n\n# Default opacity for dropdown menus and popup menus. (0.0 - 1.0, defaults to 1.0)\n# menu-opacity = 1.0 \n# menu-opacity is depreciated use dropdown-menu and popup-menu instead.\n\n#If using these 2 below change their values in line 510 & 511 aswell\npopup_menu = { opacity = 0.8; }\ndropdown_menu = { opacity = 0.8; }\n\n\n# Let inactive opacity set by -i override the '_NET_WM_OPACITY' values of windows.\n# inactive-opacity-override = true\ninactive-opacity-override = false;\n\n# Default opacity for active windows. (0.0 - 1.0, defaults to 1.0)\nactive-opacity = 1.0;\n\n# Dim inactive windows. (0.0 - 1.0, defaults to 0.0)\n# inactive-dim = 0.0\n\n# Specify a list of conditions of windows that should always be considered focused.\n# focus-exclude = []\nfocus-exclude = [\n#  \"class_g = 'Cairo-clock'\",\n  \"class_g = 'Bar'\",                    # lemonbar\n  \"class_g = 'slop'\"                    # maim\n];\n\n# Use fixed inactive dim value, instead of adjusting according to window opacity.\n# inactive-dim-fixed = 1.0\n\n# Specify a list of opacity rules, in the format `PERCENT:PATTERN`, \n# like `50:name *= \"Firefox\"`. picom-trans is recommended over this. \n# Note we don't make any guarantee about possible conflicts with other \n# programs that set '_NET_WM_WINDOW_OPACITY' on frame or client windows.\n# example:\n#    opacity-rule = [ \"80:class_g = 'URxvt'\" ];\n#\n# opacity-rule = []\nopacity-rule = [\n  \"80:class_g     = 'Bar'\",             # lemonbar\n  \"100:class_g    = 'slop'\",            # maim\n  \"100:class_g    = 'XTerm'\",\n  \"100:class_g    = 'URxvt'\",\n  \"100:class_g    = 'kitty'\",\n  \"100:class_g    = 'Alacritty'\",\n  \"100:class_g     = 'Polybar'\",\n  \n  \"100:class_g    = 'code-oss'\",\n  \"100:class_g    = 'Meld'\",\n  \"70:class_g     = 'TelegramDesktop'\",\n  \"90:class_g     = 'Joplin'\",\n  \"100:class_g    = 'firefox'\",\n  \"100:class_g    = 'Thunderbird'\"\n];\n\n\n#################################\n#     Background-Blurring       #\n#################################\n\n\n# Parameters for background blurring, see the *BLUR* section for more information.\n# blur-method = \n# blur-size = 12\n#\n# blur-deviation = false\n\n# Blur background of semi-transparent / ARGB windows. \n# Bad in performance, with driver-dependent behavior. \n# The name of the switch may change without prior notifications.\n#\n# blur-background = true;\n\n# Blur background of windows when the window frame is not opaque. \n# Implies:\n#    blur-background \n# Bad in performance, with driver-dependent behavior. The name may change.\n#\n# blur-background-frame = false;\n\n\n# Use fixed blur strength rather than adjusting according to window opacity.\n# blur-background-fixed = false;\n\n\n# Specify the blur convolution kernel, with the following format:\n# example:\n#   blur-kern = \"5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1\";\n#\n# blur-kern = ''\n# blur-kern = \"3x3box\";\n\nblur: {\n  # requires: https://github.com/ibhagwan/picom\n  method = \"kawase\";\n  #method = \"kernel\";\n  strength = 0;\n  # deviation = 1.0;\n  # kernel = \"11x11gaussian\";\n  background = false;\n  background-frame = false;\n  background-fixed = false;\n  kern = \"3x3box\";\n}\n\n# Exclude conditions for background blur.\nblur-background-exclude = [\n  \"window_type = 'dock'\",\n  \"window_type = 'desktop'\",\n  \"class_g = 'URxvt'\",\n  \"class_g = 'polybar'\",\n  \"class_g = 'easystroke'\",\n  #\n  # prevents picom from blurring the background\n  # when taking selection screenshot with `main`\n  # https://github.com/naelstrof/maim/issues/130\n  \"class_g = 'slop'\",\n  \"_GTK_FRAME_EXTENTS@:c\"\n];\n\n\n#################################\n#       General Settings        #\n#################################\n\n# Daemonize process. Fork to background after initialization. Causes issues with certain (badly-written) drivers.\n# daemon = false\n\n# Specify the backend to use: `xrender`, `glx`, or `xr_glx_hybrid`.\n# `xrender` is the default one.\n#\nexperimental-backends = true;\nbackend = \"glx\";\n#backend = \"xrender\";\n\n\n# Enable/disable VSync.\n# vsync = false\nvsync = true\n\n# Enable remote control via D-Bus. See the *D-BUS API* section below for more details.\n# dbus = false\n\n# Try to detect WM windows (a non-override-redirect window with no \n# child that has 'WM_STATE') and mark them as active.\n#\n# mark-wmwin-focused = false\nmark-wmwin-focused = true;\n\n# Mark override-redirect windows that doesn't have a child window with 'WM_STATE' focused.\n# mark-ovredir-focused = false\nmark-ovredir-focused = true;\n\n# Try to detect windows with rounded corners and don't consider them \n# shaped windows. The accuracy is not very high, unfortunately.\n#\n# detect-rounded-corners = false\ndetect-rounded-corners = true;\n\n# Detect '_NET_WM_OPACITY' on client windows, useful for window managers\n# not passing '_NET_WM_OPACITY' of client windows to frame windows.\n#\n# detect-client-opacity = false\ndetect-client-opacity = true;\n\n# Specify refresh rate of the screen. If not specified or 0, picom will \n# try detecting this with X RandR extension.\n#\nrefresh-rate = 60\n# refresh-rate = 0\n\n# Limit picom to repaint at most once every 1 / 'refresh_rate' second to \n# boost performance. This should not be used with \n#   vsync drm/opengl/opengl-oml\n# as they essentially does sw-opti's job already, \n# unless you wish to specify a lower refresh rate than the actual value.\n#\n# sw-opti = \n\n# Use EWMH '_NET_ACTIVE_WINDOW' to determine currently focused window, \n# rather than listening to 'FocusIn'/'FocusOut' event. Might have more accuracy, \n# provided that the WM supports it.\n#\n# use-ewmh-active-win = false\n\n# Unredirect all windows if a full-screen opaque window is detected, \n# to maximize performance for full-screen windows. Known to cause flickering \n# when redirecting/unredirecting windows. paint-on-overlay may make the flickering less obvious.\n#\n# unredir-if-possible = false\n\n# Delay before unredirecting the window, in milliseconds. Defaults to 0.\n# unredir-if-possible-delay = 0\n\n# Conditions of windows that shouldn't be considered full-screen for unredirecting screen.\n# unredir-if-possible-exclude = []\n\n# Use 'WM_TRANSIENT_FOR' to group windows, and consider windows \n# in the same group focused at the same time.\n#\n# detect-transient = false\ndetect-transient = true\n\n# Use 'WM_CLIENT_LEADER' to group windows, and consider windows in the same \n# group focused at the same time. 'WM_TRANSIENT_FOR' has higher priority if \n# detect-transient is enabled, too.\n#\n# detect-client-leader = false\ndetect-client-leader = true\n\n# Resize damaged region by a specific number of pixels. \n# A positive value enlarges it while a negative one shrinks it. \n# If the value is positive, those additional pixels will not be actually painted \n# to screen, only used in blur calculation, and such. (Due to technical limitations, \n# with use-damage, those pixels will still be incorrectly painted to screen.) \n# Primarily used to fix the line corruption issues of blur, \n# in which case you should use the blur radius value here \n# (e.g. with a 3x3 kernel, you should use `--resize-damage 1`, \n# with a 5x5 one you use `--resize-damage 2`, and so on). \n# May or may not work with *--glx-no-stencil*. Shrinking doesn't function correctly.\n#\n# resize-damage = 1\n\n# Specify a list of conditions of windows that should be painted with inverted color. \n# Resource-hogging, and is not well tested.\n#\n# invert-color-include = [pcmanfm]\n\n# GLX backend: Avoid using stencil buffer, useful if you don't have a stencil buffer. \n# Might cause incorrect opacity when rendering transparent content (but never \n# practically happened) and may not work with blur-background. \n# My tests show a 15% performance boost. Recommended.\n#\n# glx-no-stencil = false\n\n# GLX backend: Avoid rebinding pixmap on window damage. \n# Probably could improve performance on rapid window content changes, \n# but is known to break things on some drivers (LLVMpipe, xf86-video-intel, etc.).\n# Recommended if it works.\n#\n# glx-no-rebind-pixmap = false\n\n# Disable the use of damage information. \n# This cause the whole screen to be redrawn everytime, instead of the part of the screen\n# has actually changed. Potentially degrades the performance, but might fix some artifacts.\n# The opposing option is use-damage\n#\n# no-use-damage = false\n#use-damage = true (Causing Weird Black semi opaque rectangles when terminal is opened)\n#Changing use-damage to false fixes the problem\nuse-damage = false\n\n# Use X Sync fence to sync clients' draw calls, to make sure all draw \n# calls are finished before picom starts drawing. Needed on nvidia-drivers \n# with GLX backend for some users.\n#\n# xrender-sync-fence = false\n\n# GLX backend: Use specified GLSL fragment shader for rendering window contents. \n# See `compton-default-fshader-win.glsl` and `compton-fake-transparency-fshader-win.glsl` \n# in the source tree for examples.\n#\n# glx-fshader-win = ''\n\n# Force all windows to be painted with blending. Useful if you \n# have a glx-fshader-win that could turn opaque pixels transparent.\n#\n# force-win-blend = false\n\n# Do not use EWMH to detect fullscreen windows. \n# Reverts to checking if a window is fullscreen based only on its size and coordinates.\n#\n# no-ewmh-fullscreen = false\n\n# Dimming bright windows so their brightness doesn't exceed this set value. \n# Brightness of a window is estimated by averaging all pixels in the window, \n# so this could comes with a performance hit. \n# Setting this to 1.0 disables this behaviour. Requires --use-damage to be disabled. (default: 1.0)\n#\n# max-brightness = 1.0\n\n# Make transparent windows clip other windows like non-transparent windows do,\n# instead of blending on top of them.\n#\n# transparent-clipping = false\n\n# Set the log level. Possible values are:\n#  \"trace\", \"debug\", \"info\", \"warn\", \"error\"\n# in increasing level of importance. Case doesn't matter. \n# If using the \"TRACE\" log level, it's better to log into a file \n# using *--log-file*, since it can generate a huge stream of logs.\n#\n# log-level = \"debug\"\nlog-level = \"info\";\n\n# Set the log file.\n# If *--log-file* is never specified, logs will be written to stderr. \n# Otherwise, logs will to written to the given file, though some of the early \n# logs might still be written to the stderr. \n# When setting this option from the config file, it is recommended to use an absolute path.\n#\n# log-file = '/path/to/your/log/file'\n\n# Show all X errors (for debugging)\n# show-all-xerrors = false\n\n# Write process ID to a file.\n# write-pid-path = '/path/to/your/log/file'\n\n# Window type settings\n# \n# 'WINDOW_TYPE' is one of the 15 window types defined in EWMH standard: \n#     \"unknown\", \"desktop\", \"dock\", \"toolbar\", \"menu\", \"utility\", \n#     \"splash\", \"dialog\", \"normal\", \"dropdown_menu\", \"popup_menu\", \n#     \"tooltip\", \"notification\", \"combo\", and \"dnd\".\n# \n# Following per window-type options are available: ::\n# \n#   fade, shadow:::\n#     Controls window-type-specific shadow and fade settings.\n# \n#   opacity:::\n#     Controls default opacity of the window type.\n# \n#   focus:::\n#     Controls whether the window of this type is to be always considered focused. \n#     (By default, all window types except \"normal\" and \"dialog\" has this on.)\n# \n#   full-shadow:::\n#     Controls whether shadow is drawn under the parts of the window that you \n#     normally won't be able to see. Useful when the window has parts of it \n#     transparent, and you want shadows in those areas.\n# \n#   redir-ignore:::\n#     Controls whether this type of windows should cause screen to become \n#     redirected again after been unredirected. If you have unredir-if-possible\n#     set, and doesn't want certain window to cause unnecessary screen redirection, \n#     you can set this to `true`.\n#\nwintypes:\n{\n  normal = { fade = false; shadow = false; }\n  tooltip = { fade = true; shadow = true; opacity = 0.75; focus = true; full-shadow = false; };\n  dock = { shadow = false; }\n  dnd = { shadow = false; }\n  popup_menu = { opacity = 0.8; }\n  dropdown_menu = { opacity = 0.8; }\n};\n", "code-oss", "  \"100:class_g    = 'spacefm'\",\n", "#################################\n#          Animations           #\n#################################\n# requires https://github.com/jonaburg/picom\n# (These are also the default values)       \ntransition-length = 200\ntransition-pow-x = 0.1\ntransition-pow-y = 0.1\ntransition-pow-w = 0.1\ntransition-pow-h = 0.1\nsize-transition = true\n\n\n#################################\n#             Corners           #\n#################################\n# requires: https://github.com/sdhand/compton or https://github.com/jonaburg/picom\ncorner-radius = 4.0;\nrounded-corners-exclude = [\n  #\"window_type = 'normal'\",\n  \"class_g = 'awesome'\",\n  \"class_g = 'URxvt'\",\n  \"class_g = 'XTerm'\",\n  \"class_g = 'kitty'\",\n  \"class_g = 'Alacritty'\",\n  \"class_g = 'Polybar'\",\n  \"class_g = 'code-oss'\",\n  #\"class_g = 'TelegramDesktop'\",\n  \"class_g = 'firefox'\",\n  \"class_g = 'Thunderbird'\"\n];\nround-borders = 1;\nround-borders-exclude = [\n  #\"class_g = 'TelegramDesktop'\",\n];\n\n#################################\n#             Shadows           #\n#################################\n\n\n# Enabled client-side shadows on windows. Note desktop windows \n# (windows with '_NET_WM_WINDOW_TYPE_DESKTOP') never get shadow, \n# unless explicitly requested using the wintypes option.\n#\n# shadow = false\nshadow = true;\n\n# The blur radius for shadows, in pixels. (defaults to 12)\n# shadow-radius = 12\nshadow-radius = 7;\n\n# The opacity of shadows. (0.0 - 1.0, defaults to 0.75)\n# shadow-opacity = .75\n\n# The left offset for shadows, in pixels. (defaults to -15)\n# shadow-offset-x = -15\nshadow-offset-x = -7;\n\n# The top offset for shadows, in pixels. (defaults to -15)\n# shadow-offset-y = -15\nshadow-offset-y = -7;\n\n# Avoid drawing shadows on dock/panel windows. This option is deprecated,\n# you should use the *wintypes* option in your config file instead.\n#\n# no-dock-shadow = false\n\n# Don't draw shadows on drag-and-drop windows. This option is deprecated, \n# you should use the *wintypes* option in your config file instead.\n#\n# no-dnd-shadow = false\n\n# Red color value of shadow (0.0 - 1.0, defaults to 0).\n# shadow-red = 0\n\n# Green color value of shadow (0.0 - 1.0, defaults to 0).\n# shadow-green = 0\n\n# Blue color value of shadow (0.0 - 1.0, defaults to 0).\n# shadow-blue = 0\n\n# Do not paint shadows on shaped windows. Note shaped windows \n# here means windows setting its shape through X Shape extension. \n# Those using ARGB background is beyond our control. \n# Deprecated, use \n#   shadow-exclude = 'bounding_shaped'\n# or \n#   shadow-exclude = 'bounding_shaped && !rounded_corners'\n# instead.\n#\n# shadow-ignore-shaped = ''\n\n# Specify a list of conditions of windows that should have no shadow.\n#\n# examples:\n#   shadow-exclude = \"n:e:Notification\";\n#\n# shadow-exclude = []\nshadow-exclude = [\n  \"name = 'Notification'\",\n  \"class_g = 'Conky'\",\n  \"class_g ?= 'Notify-osd'\",\n  \"class_g = 'Cairo-clock'\",\n  \"class_g = 'slop'\",\n  \"class_g = 'Polybar'\",\n  \"_GTK_FRAME_EXTENTS@:c\"\n];\n\n# Specify a X geometry that describes the region in which shadow should not\n# be painted in, such as a dock window region. Use \n#    shadow-exclude-reg = \"x10+0+0\"\n# for example, if the 10 pixels on the bottom of the screen should not have shadows painted on.\n#\n# shadow-exclude-reg = \"\" \n\n# Crop shadow of a window fully on a particular Xinerama screen to the screen.\n# xinerama-shadow-crop = false\n\n\n#################################\n#           Fading              #\n#################################\n\n\n# Fade windows in/out when opening/closing and when opacity changes,\n#  unless no-fading-openclose is used.\n# fading = false\nfading = true;\n\n# Opacity change between steps while fading in. (0.01 - 1.0, defaults to 0.028)\n# fade-in-step = 0.028\nfade-in-step = 0.03;\n\n# Opacity change between steps while fading out. (0.01 - 1.0, defaults to 0.03)\n# fade-out-step = 0.03\nfade-out-step = 0.03;\n\n# The time between steps in fade step, in milliseconds. (> 0, defaults to 10)\n# fade-delta = 10\n\n# Specify a list of conditions of windows that should not be faded.\n# don't need this, we disable fading for all normal windows with wintypes: {}\nfade-exclude = [\n  \"class_g = 'slop'\"   # maim\n]\n\n# Do not fade on window open/close.\n# no-fading-openclose = false\n\n# Do not fade destroyed ARGB windows with WM frame. Workaround of bugs in Openbox, Fluxbox, etc.\n# no-fading-destroyed-argb = false\n\n\n#################################\n#   Transparency / Opacity      #\n#################################\n\n\n# Opacity of inactive windows. (0.1 - 1.0, defaults to 1.0)\n# inactive-opacity = 1\ninactive-opacity = 0.8;\n\n# Opacity of window titlebars and borders. (0.1 - 1.0, disabled by default)\n# frame-opacity = 1.0\nframe-opacity = 0.7;\n\n# Default opacity for dropdown menus and popup menus. (0.0 - 1.0, defaults to 1.0)\n# menu-opacity = 1.0 \n# menu-opacity is depreciated use dropdown-menu and popup-menu instead.\n\n#If using these 2 below change their values in line 510 & 511 aswell\npopup_menu = { opacity = 0.8; }\ndropdown_menu = { opacity = 0.8; }\n\n\n# Let inactive opacity set by -i override the '_NET_WM_OPACITY' values of windows.\n# inactive-opacity-override = true\ninactive-opacity-override = false;\n\n# Default opacity for active windows. (0.0 - 1.0, defaults to 1.0)\nactive-opacity = 1.0;\n\n# Dim inactive windows. (0.0 - 1.0, defaults to 0.0)\n# inactive-dim = 0.0\n\n# Specify a list of conditions of windows that should always be considered focused.\n# focus-exclude = []\nfocus-exclude = [\n#  \"class_g = 'Cairo-clock'\",\n  \"class_g = 'Bar'\",                    # lemonbar\n  \"class_g = 'slop'\"                    # maim\n];\n\n# Use fixed inactive dim value, instead of adjusting according to window opacity.\n# inactive-dim-fixed = 1.0\n\n# Specify a list of opacity rules, in the format `PERCENT:PATTERN`, \n# like `50:name *= \"Firefox\"`. picom-trans is recommended over this. \n# Note we don't make any guarantee about possible conflicts with other \n# programs that set '_NET_WM_WINDOW_OPACITY' on frame or client windows.\n# example:\n#    opacity-rule = [ \"80:class_g = 'URxvt'\" ];\n#\n# opacity-rule = []\nopacity-rule = [\n  \"80:class_g     = 'Bar'\",             # lemonbar\n  \"100:class_g    = 'slop'\",            # maim\n  \"100:class_g    = 'XTerm'\",\n  \"100:class_g    = 'URxvt'\",\n  \"100:class_g    = 'kitty'\",\n  \"100:class_g    = 'Alacritty'\",\n  \"100:class_g    = 'Polybar'\",\n  \"100:class_g    = 'spacefm'\",\n  \n  \"100:class_g    = 'code-oss'\",\n  \"100:class_g    = 'Meld'\",\n  \"70:class_g     = 'TelegramDesktop'\",\n  \"90:class_g     = 'Joplin'\",\n  \"100:class_g    = 'firefox'\",\n  \"100:class_g    = 'Thunderbird'\"\n];\n\n\n#################################\n#     Background-Blurring       #\n#################################\n\n\n# Parameters for background blurring, see the *BLUR* section for more information.\n# blur-method = \n# blur-size = 12\n#\n# blur-deviation = false\n\n# Blur background of semi-transparent / ARGB windows. \n# Bad in performance, with driver-dependent behavior. \n# The name of the switch may change without prior notifications.\n#\n# blur-background = true;\n\n# Blur background of windows when the window frame is not opaque. \n# Implies:\n#    blur-background \n# Bad in performance, with driver-dependent behavior. The name may change.\n#\n# blur-background-frame = false;\n\n\n# Use fixed blur strength rather than adjusting according to window opacity.\n# blur-background-fixed = false;\n\n\n# Specify the blur convolution kernel, with the following format:\n# example:\n#   blur-kern = \"5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1\";\n#\n# blur-kern = ''\n# blur-kern = \"3x3box\";\n\nblur: {\n  # requires: https://github.com/ibhagwan/picom\n  method = \"kawase\";\n  #method = \"kernel\";\n  strength = 0;\n  # deviation = 1.0;\n  # kernel = \"11x11gaussian\";\n  background = false;\n  background-frame = false;\n  background-fixed = false;\n  kern = \"3x3box\";\n}\n\n# Exclude conditions for background blur.\nblur-background-exclude = [\n  \"window_type = 'dock'\",\n  \"window_type = 'desktop'\",\n  \"class_g = 'URxvt'\",\n  \"class_g = 'polybar'\",\n  \"class_g = 'easystroke'\",\n  #\n  # prevents picom from blurring the background\n  # when taking selection screenshot with `main`\n  # https://github.com/naelstrof/maim/issues/130\n  \"class_g = 'slop'\",\n  \"_GTK_FRAME_EXTENTS@:c\"\n];\n\n\n#################################\n#       General Settings        #\n#################################\n\n# Daemonize process. Fork to background after initialization. Causes issues with certain (badly-written) drivers.\n# daemon = false\n\n# Specify the backend to use: `xrender`, `glx`, or `xr_glx_hybrid`.\n# `xrender` is the default one.\n#\nexperimental-backends = true;\nbackend = \"glx\";\n#backend = \"xrender\";\n\n\n# Enable/disable VSync.\n# vsync = false\nvsync = true\n\n# Enable remote control via D-Bus. See the *D-BUS API* section below for more details.\n# dbus = false\n\n# Try to detect WM windows (a non-override-redirect window with no \n# child that has 'WM_STATE') and mark them as active.\n#\n# mark-wmwin-focused = false\nmark-wmwin-focused = true;\n\n# Mark override-redirect windows that doesn't have a child window with 'WM_STATE' focused.\n# mark-ovredir-focused = false\nmark-ovredir-focused = true;\n\n# Try to detect windows with rounded corners and don't consider them \n# shaped windows. The accuracy is not very high, unfortunately.\n#\n# detect-rounded-corners = false\ndetect-rounded-corners = true;\n\n# Detect '_NET_WM_OPACITY' on client windows, useful for window managers\n# not passing '_NET_WM_OPACITY' of client windows to frame windows.\n#\n# detect-client-opacity = false\ndetect-client-opacity = true;\n\n# Specify refresh rate of the screen. If not specified or 0, picom will \n# try detecting this with X RandR extension.\n#\nrefresh-rate = 60\n# refresh-rate = 0\n\n# Limit picom to repaint at most once every 1 / 'refresh_rate' second to \n# boost performance. This should not be used with \n#   vsync drm/opengl/opengl-oml\n# as they essentially does sw-opti's job already, \n# unless you wish to specify a lower refresh rate than the actual value.\n#\n# sw-opti = \n\n# Use EWMH '_NET_ACTIVE_WINDOW' to determine currently focused window, \n# rather than listening to 'FocusIn'/'FocusOut' event. Might have more accuracy, \n# provided that the WM supports it.\n#\n# use-ewmh-active-win = false\n\n# Unredirect all windows if a full-screen opaque window is detected, \n# to maximize performance for full-screen windows. Known to cause flickering \n# when redirecting/unredirecting windows. paint-on-overlay may make the flickering less obvious.\n#\n# unredir-if-possible = false\n\n# Delay before unredirecting the window, in milliseconds. Defaults to 0.\n# unredir-if-possible-delay = 0\n\n# Conditions of windows that shouldn't be considered full-screen for unredirecting screen.\n# unredir-if-possible-exclude = []\n\n# Use 'WM_TRANSIENT_FOR' to group windows, and consider windows \n# in the same group focused at the same time.\n#\n# detect-transient = false\ndetect-transient = true\n\n# Use 'WM_CLIENT_LEADER' to group windows, and consider windows in the same \n# group focused at the same time. 'WM_TRANSIENT_FOR' has higher priority if \n# detect-transient is enabled, too.\n#\n# detect-client-leader = false\ndetect-client-leader = true\n\n# Resize damaged region by a specific number of pixels. \n# A positive value enlarges it while a negative one shrinks it. \n# If the value is positive, those additional pixels will not be actually painted \n# to screen, only used in blur calculation, and such. (Due to technical limitations, \n# with use-damage, those pixels will still be incorrectly painted to screen.) \n# Primarily used to fix the line corruption issues of blur, \n# in which case you should use the blur radius value here \n# (e.g. with a 3x3 kernel, you should use `--resize-damage 1`, \n# with a 5x5 one you use `--resize-damage 2`, and so on). \n# May or may not work with *--glx-no-stencil*. Shrinking doesn't function correctly.\n#\n# resize-damage = 1\n\n# Specify a list of conditions of windows that should be painted with inverted color. \n# Resource-hogging, and is not well tested.\n#\n# invert-color-include = [pcmanfm]\n\n# GLX backend: Avoid using stencil buffer, useful if you don't have a stencil buffer. \n# Might cause incorrect opacity when rendering transparent content (but never \n# practically happened) and may not work with blur-background. \n# My tests show a 15% performance boost. Recommended.\n#\n# glx-no-stencil = false\n\n# GLX backend: Avoid rebinding pixmap on window damage. \n# Probably could improve performance on rapid window content changes, \n# but is known to break things on some drivers (LLVMpipe, xf86-video-intel, etc.).\n# Recommended if it works.\n#\n# glx-no-rebind-pixmap = false\n\n# Disable the use of damage information. \n# This cause the whole screen to be redrawn everytime, instead of the part of the screen\n# has actually changed. Potentially degrades the performance, but might fix some artifacts.\n# The opposing option is use-damage\n#\n# no-use-damage = false\n#use-damage = true (Causing Weird Black semi opaque rectangles when terminal is opened)\n#Changing use-damage to false fixes the problem\nuse-damage = false\n\n# Use X Sync fence to sync clients' draw calls, to make sure all draw \n# calls are finished before picom starts drawing. Needed on nvidia-drivers \n# with GLX backend for some users.\n#\n# xrender-sync-fence = false\n\n# GLX backend: Use specified GLSL fragment shader for rendering window contents. \n# See `compton-default-fshader-win.glsl` and `compton-fake-transparency-fshader-win.glsl` \n# in the source tree for examples.\n#\n# glx-fshader-win = ''\n\n# Force all windows to be painted with blending. Useful if you \n# have a glx-fshader-win that could turn opaque pixels transparent.\n#\n# force-win-blend = false\n\n# Do not use EWMH to detect fullscreen windows. \n# Reverts to checking if a window is fullscreen based only on its size and coordinates.\n#\n# no-ewmh-fullscreen = false\n\n# Dimming bright windows so their brightness doesn't exceed this set value. \n# Brightness of a window is estimated by averaging all pixels in the window, \n# so this could comes with a performance hit. \n# Setting this to 1.0 disables this behaviour. Requires --use-damage to be disabled. (default: 1.0)\n#\n# max-brightness = 1.0\n\n# Make transparent windows clip other windows like non-transparent windows do,\n# instead of blending on top of them.\n#\n# transparent-clipping = false\n\n# Set the log level. Possible values are:\n#  \"trace\", \"debug\", \"info\", \"warn\", \"error\"\n# in increasing level of importance. Case doesn't matter. \n# If using the \"TRACE\" log level, it's better to log into a file \n# using *--log-file*, since it can generate a huge stream of logs.\n#\n# log-level = \"debug\"\nlog-level = \"info\";\n\n# Set the log file.\n# If *--log-file* is never specified, logs will be written to stderr. \n# Otherwise, logs will to written to the given file, though some of the early \n# logs might still be written to the stderr. \n# When setting this option from the config file, it is recommended to use an absolute path.\n#\n# log-file = '/path/to/your/log/file'\n\n# Show all X errors (for debugging)\n# show-all-xerrors = false\n\n# Write process ID to a file.\n# write-pid-path = '/path/to/your/log/file'\n\n# Window type settings\n# \n# 'WINDOW_TYPE' is one of the 15 window types defined in EWMH standard: \n#     \"unknown\", \"desktop\", \"dock\", \"toolbar\", \"menu\", \"utility\", \n#     \"splash\", \"dialog\", \"normal\", \"dropdown_menu\", \"popup_menu\", \n#     \"tooltip\", \"notification\", \"combo\", and \"dnd\".\n# \n# Following per window-type options are available: ::\n# \n#   fade, shadow:::\n#     Controls window-type-specific shadow and fade settings.\n# \n#   opacity:::\n#     Controls default opacity of the window type.\n# \n#   focus:::\n#     Controls whether the window of this type is to be always considered focused. \n#     (By default, all window types except \"normal\" and \"dialog\" has this on.)\n# \n#   full-shadow:::\n#     Controls whether shadow is drawn under the parts of the window that you \n#     normally won't be able to see. Useful when the window has parts of it \n#     transparent, and you want shadows in those areas.\n# \n#   redir-ignore:::\n#     Controls whether this type of windows should cause screen to become \n#     redirected again after been unredirected. If you have unredir-if-possible\n#     set, and doesn't want certain window to cause unnecessary screen redirection, \n#     you can set this to `true`.\n#\nwintypes:\n{\n  normal = { fade = false; shadow = false; }\n  tooltip = { fade = true; shadow = true; opacity = 0.75; focus = true; full-shadow = false; };\n  dock = { shadow = false; }\n  dnd = { shadow = false; }\n  popup_menu = { opacity = 0.8; }\n  dropdown_menu = { opacity = 0.8; }\n};\n", "name", "=", "  \"90:name *?= 'spacefm'\",\n", "  \"94:class_g *?  = 'spacefm'\",\n", "#################################\n#          Animations           #\n#################################\n# requires https://github.com/jonaburg/picom\n# (These are also the default values)       \ntransition-length = 200\ntransition-pow-x = 0.1\ntransition-pow-y = 0.1\ntransition-pow-w = 0.1\ntransition-pow-h = 0.1\nsize-transition = true\n\n\n#################################\n#             Corners           #\n#################################\n# requires: https://github.com/sdhand/compton or https://github.com/jonaburg/picom\ncorner-radius = 4.0;\nrounded-corners-exclude = [\n  #\"window_type = 'normal'\",\n  \"class_g = 'awesome'\",\n  \"class_g = 'URxvt'\",\n  \"class_g = 'XTerm'\",\n  \"class_g = 'kitty'\",\n  \"class_g = 'Alacritty'\",\n  \"class_g = 'Polybar'\",\n  \"class_g = 'code-oss'\",\n  #\"class_g = 'TelegramDesktop'\",\n  \"class_g = 'firefox'\",\n  \"class_g = 'Thunderbird'\"\n];\nround-borders = 1;\nround-borders-exclude = [\n  #\"class_g = 'TelegramDesktop'\",\n];\n\n#################################\n#             Shadows           #\n#################################\n\n\n# Enabled client-side shadows on windows. Note desktop windows \n# (windows with '_NET_WM_WINDOW_TYPE_DESKTOP') never get shadow, \n# unless explicitly requested using the wintypes option.\n#\n# shadow = false\nshadow = true;\n\n# The blur radius for shadows, in pixels. (defaults to 12)\n# shadow-radius = 12\nshadow-radius = 7;\n\n# The opacity of shadows. (0.0 - 1.0, defaults to 0.75)\n# shadow-opacity = .75\n\n# The left offset for shadows, in pixels. (defaults to -15)\n# shadow-offset-x = -15\nshadow-offset-x = -7;\n\n# The top offset for shadows, in pixels. (defaults to -15)\n# shadow-offset-y = -15\nshadow-offset-y = -7;\n\n# Avoid drawing shadows on dock/panel windows. This option is deprecated,\n# you should use the *wintypes* option in your config file instead.\n#\n# no-dock-shadow = false\n\n# Don't draw shadows on drag-and-drop windows. This option is deprecated, \n# you should use the *wintypes* option in your config file instead.\n#\n# no-dnd-shadow = false\n\n# Red color value of shadow (0.0 - 1.0, defaults to 0).\n# shadow-red = 0\n\n# Green color value of shadow (0.0 - 1.0, defaults to 0).\n# shadow-green = 0\n\n# Blue color value of shadow (0.0 - 1.0, defaults to 0).\n# shadow-blue = 0\n\n# Do not paint shadows on shaped windows. Note shaped windows \n# here means windows setting its shape through X Shape extension. \n# Those using ARGB background is beyond our control. \n# Deprecated, use \n#   shadow-exclude = 'bounding_shaped'\n# or \n#   shadow-exclude = 'bounding_shaped && !rounded_corners'\n# instead.\n#\n# shadow-ignore-shaped = ''\n\n# Specify a list of conditions of windows that should have no shadow.\n#\n# examples:\n#   shadow-exclude = \"n:e:Notification\";\n#\n# shadow-exclude = []\nshadow-exclude = [\n  \"name = 'Notification'\",\n  \"class_g = 'Conky'\",\n  \"class_g ?= 'Notify-osd'\",\n  \"class_g = 'Cairo-clock'\",\n  \"class_g = 'slop'\",\n  \"class_g = 'Polybar'\",\n  \"_GTK_FRAME_EXTENTS@:c\"\n];\n\n# Specify a X geometry that describes the region in which shadow should not\n# be painted in, such as a dock window region. Use \n#    shadow-exclude-reg = \"x10+0+0\"\n# for example, if the 10 pixels on the bottom of the screen should not have shadows painted on.\n#\n# shadow-exclude-reg = \"\" \n\n# Crop shadow of a window fully on a particular Xinerama screen to the screen.\n# xinerama-shadow-crop = false\n\n\n#################################\n#           Fading              #\n#################################\n\n\n# Fade windows in/out when opening/closing and when opacity changes,\n#  unless no-fading-openclose is used.\n# fading = false\nfading = true;\n\n# Opacity change between steps while fading in. (0.01 - 1.0, defaults to 0.028)\n# fade-in-step = 0.028\nfade-in-step = 0.03;\n\n# Opacity change between steps while fading out. (0.01 - 1.0, defaults to 0.03)\n# fade-out-step = 0.03\nfade-out-step = 0.03;\n\n# The time between steps in fade step, in milliseconds. (> 0, defaults to 10)\n# fade-delta = 10\n\n# Specify a list of conditions of windows that should not be faded.\n# don't need this, we disable fading for all normal windows with wintypes: {}\nfade-exclude = [\n  \"class_g = 'slop'\"   # maim\n]\n\n# Do not fade on window open/close.\n# no-fading-openclose = false\n\n# Do not fade destroyed ARGB windows with WM frame. Workaround of bugs in Openbox, Fluxbox, etc.\n# no-fading-destroyed-argb = false\n\n\n#################################\n#   Transparency / Opacity      #\n#################################\n\n\n# Opacity of inactive windows. (0.1 - 1.0, defaults to 1.0)\n# inactive-opacity = 1\ninactive-opacity = 0.8;\n\n# Opacity of window titlebars and borders. (0.1 - 1.0, disabled by default)\n# frame-opacity = 1.0\nframe-opacity = 0.7;\n\n# Default opacity for dropdown menus and popup menus. (0.0 - 1.0, defaults to 1.0)\n# menu-opacity = 1.0 \n# menu-opacity is depreciated use dropdown-menu and popup-menu instead.\n\n#If using these 2 below change their values in line 510 & 511 aswell\npopup_menu = { opacity = 0.8; }\ndropdown_menu = { opacity = 0.8; }\n\n\n# Let inactive opacity set by -i override the '_NET_WM_OPACITY' values of windows.\n# inactive-opacity-override = true\ninactive-opacity-override = false;\n\n# Default opacity for active windows. (0.0 - 1.0, defaults to 1.0)\nactive-opacity = 1.0;\n\n# Dim inactive windows. (0.0 - 1.0, defaults to 0.0)\n# inactive-dim = 0.0\n\n# Specify a list of conditions of windows that should always be considered focused.\n# focus-exclude = []\nfocus-exclude = [\n#  \"class_g = 'Cairo-clock'\",\n  \"class_g = 'Bar'\",                    # lemonbar\n  \"class_g = 'slop'\"                    # maim\n];\n\n# Use fixed inactive dim value, instead of adjusting according to window opacity.\n# inactive-dim-fixed = 1.0\n\n# Specify a list of opacity rules, in the format `PERCENT:PATTERN`, \n# like `50:name *= \"Firefox\"`. picom-trans is recommended over this. \n# Note we don't make any guarantee about possible conflicts with other \n# programs that set '_NET_WM_WINDOW_OPACITY' on frame or client windows.\n# example:\n#    opacity-rule = [ \"80:class_g = 'URxvt'\" ];\n#\n# opacity-rule = []\nopacity-rule = [\n  \"80:class_g     = 'Bar'\",             # lemonbar\n  \"100:class_g    = 'slop'\",            # maim\n  \"100:class_g    = 'XTerm'\",\n  \"100:class_g    = 'URxvt'\",\n  \"100:class_g    = 'kitty'\",\n  \"100:class_g    = 'Alacritty'\",\n  \"100:class_g    = 'Polybar'\",\n\n  \"94:class_g *?  = 'spacefm'\",\n  \"100:class_g    = 'code-oss'\",\n  \"100:class_g    = 'Meld'\",\n  \"70:class_g     = 'TelegramDesktop'\",\n  \"90:class_g     = 'Joplin'\",\n  \"100:class_g    = 'firefox'\",\n  \"100:class_g    = 'Thunderbird'\"\n];\n\n\n#################################\n#     Background-Blurring       #\n#################################\n\n\n# Parameters for background blurring, see the *BLUR* section for more information.\n# blur-method = \n# blur-size = 12\n#\n# blur-deviation = false\n\n# Blur background of semi-transparent / ARGB windows. \n# Bad in performance, with driver-dependent behavior. \n# The name of the switch may change without prior notifications.\n#\n# blur-background = true;\n\n# Blur background of windows when the window frame is not opaque. \n# Implies:\n#    blur-background \n# Bad in performance, with driver-dependent behavior. The name may change.\n#\n# blur-background-frame = false;\n\n\n# Use fixed blur strength rather than adjusting according to window opacity.\n# blur-background-fixed = false;\n\n\n# Specify the blur convolution kernel, with the following format:\n# example:\n#   blur-kern = \"5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1\";\n#\n# blur-kern = ''\n# blur-kern = \"3x3box\";\n\nblur: {\n  # requires: https://github.com/ibhagwan/picom\n  method = \"kawase\";\n  #method = \"kernel\";\n  strength = 0;\n  # deviation = 1.0;\n  # kernel = \"11x11gaussian\";\n  background = false;\n  background-frame = false;\n  background-fixed = false;\n  kern = \"3x3box\";\n}\n\n# Exclude conditions for background blur.\nblur-background-exclude = [\n  \"window_type = 'dock'\",\n  \"window_type = 'desktop'\",\n  \"class_g = 'URxvt'\",\n  \"class_g = 'polybar'\",\n  \"class_g = 'easystroke'\",\n  #\n  # prevents picom from blurring the background\n  # when taking selection screenshot with `main`\n  # https://github.com/naelstrof/maim/issues/130\n  \"class_g = 'slop'\",\n  \"_GTK_FRAME_EXTENTS@:c\"\n];\n\n\n#################################\n#       General Settings        #\n#################################\n\n# Daemonize process. Fork to background after initialization. Causes issues with certain (badly-written) drivers.\n# daemon = false\n\n# Specify the backend to use: `xrender`, `glx`, or `xr_glx_hybrid`.\n# `xrender` is the default one.\n#\nexperimental-backends = true;\nbackend = \"glx\";\n#backend = \"xrender\";\n\n\n# Enable/disable VSync.\n# vsync = false\nvsync = true\n\n# Enable remote control via D-Bus. See the *D-BUS API* section below for more details.\n# dbus = false\n\n# Try to detect WM windows (a non-override-redirect window with no \n# child that has 'WM_STATE') and mark them as active.\n#\n# mark-wmwin-focused = false\nmark-wmwin-focused = true;\n\n# Mark override-redirect windows that doesn't have a child window with 'WM_STATE' focused.\n# mark-ovredir-focused = false\nmark-ovredir-focused = true;\n\n# Try to detect windows with rounded corners and don't consider them \n# shaped windows. The accuracy is not very high, unfortunately.\n#\n# detect-rounded-corners = false\ndetect-rounded-corners = true;\n\n# Detect '_NET_WM_OPACITY' on client windows, useful for window managers\n# not passing '_NET_WM_OPACITY' of client windows to frame windows.\n#\n# detect-client-opacity = false\ndetect-client-opacity = true;\n\n# Specify refresh rate of the screen. If not specified or 0, picom will \n# try detecting this with X RandR extension.\n#\nrefresh-rate = 60\n# refresh-rate = 0\n\n# Limit picom to repaint at most once every 1 / 'refresh_rate' second to \n# boost performance. This should not be used with \n#   vsync drm/opengl/opengl-oml\n# as they essentially does sw-opti's job already, \n# unless you wish to specify a lower refresh rate than the actual value.\n#\n# sw-opti = \n\n# Use EWMH '_NET_ACTIVE_WINDOW' to determine currently focused window, \n# rather than listening to 'FocusIn'/'FocusOut' event. Might have more accuracy, \n# provided that the WM supports it.\n#\n# use-ewmh-active-win = false\n\n# Unredirect all windows if a full-screen opaque window is detected, \n# to maximize performance for full-screen windows. Known to cause flickering \n# when redirecting/unredirecting windows. paint-on-overlay may make the flickering less obvious.\n#\n# unredir-if-possible = false\n\n# Delay before unredirecting the window, in milliseconds. Defaults to 0.\n# unredir-if-possible-delay = 0\n\n# Conditions of windows that shouldn't be considered full-screen for unredirecting screen.\n# unredir-if-possible-exclude = []\n\n# Use 'WM_TRANSIENT_FOR' to group windows, and consider windows \n# in the same group focused at the same time.\n#\n# detect-transient = false\ndetect-transient = true\n\n# Use 'WM_CLIENT_LEADER' to group windows, and consider windows in the same \n# group focused at the same time. 'WM_TRANSIENT_FOR' has higher priority if \n# detect-transient is enabled, too.\n#\n# detect-client-leader = false\ndetect-client-leader = true\n\n# Resize damaged region by a specific number of pixels. \n# A positive value enlarges it while a negative one shrinks it. \n# If the value is positive, those additional pixels will not be actually painted \n# to screen, only used in blur calculation, and such. (Due to technical limitations, \n# with use-damage, those pixels will still be incorrectly painted to screen.) \n# Primarily used to fix the line corruption issues of blur, \n# in which case you should use the blur radius value here \n# (e.g. with a 3x3 kernel, you should use `--resize-damage 1`, \n# with a 5x5 one you use `--resize-damage 2`, and so on). \n# May or may not work with *--glx-no-stencil*. Shrinking doesn't function correctly.\n#\n# resize-damage = 1\n\n# Specify a list of conditions of windows that should be painted with inverted color. \n# Resource-hogging, and is not well tested.\n#\n# invert-color-include = [pcmanfm]\n\n# GLX backend: Avoid using stencil buffer, useful if you don't have a stencil buffer. \n# Might cause incorrect opacity when rendering transparent content (but never \n# practically happened) and may not work with blur-background. \n# My tests show a 15% performance boost. Recommended.\n#\n# glx-no-stencil = false\n\n# GLX backend: Avoid rebinding pixmap on window damage. \n# Probably could improve performance on rapid window content changes, \n# but is known to break things on some drivers (LLVMpipe, xf86-video-intel, etc.).\n# Recommended if it works.\n#\n# glx-no-rebind-pixmap = false\n\n# Disable the use of damage information. \n# This cause the whole screen to be redrawn everytime, instead of the part of the screen\n# has actually changed. Potentially degrades the performance, but might fix some artifacts.\n# The opposing option is use-damage\n#\n# no-use-damage = false\n#use-damage = true (Causing Weird Black semi opaque rectangles when terminal is opened)\n#Changing use-damage to false fixes the problem\nuse-damage = false\n\n# Use X Sync fence to sync clients' draw calls, to make sure all draw \n# calls are finished before picom starts drawing. Needed on nvidia-drivers \n# with GLX backend for some users.\n#\n# xrender-sync-fence = false\n\n# GLX backend: Use specified GLSL fragment shader for rendering window contents. \n# See `compton-default-fshader-win.glsl` and `compton-fake-transparency-fshader-win.glsl` \n# in the source tree for examples.\n#\n# glx-fshader-win = ''\n\n# Force all windows to be painted with blending. Useful if you \n# have a glx-fshader-win that could turn opaque pixels transparent.\n#\n# force-win-blend = false\n\n# Do not use EWMH to detect fullscreen windows. \n# Reverts to checking if a window is fullscreen based only on its size and coordinates.\n#\n# no-ewmh-fullscreen = false\n\n# Dimming bright windows so their brightness doesn't exceed this set value. \n# Brightness of a window is estimated by averaging all pixels in the window, \n# so this could comes with a performance hit. \n# Setting this to 1.0 disables this behaviour. Requires --use-damage to be disabled. (default: 1.0)\n#\n# max-brightness = 1.0\n\n# Make transparent windows clip other windows like non-transparent windows do,\n# instead of blending on top of them.\n#\n# transparent-clipping = false\n\n# Set the log level. Possible values are:\n#  \"trace\", \"debug\", \"info\", \"warn\", \"error\"\n# in increasing level of importance. Case doesn't matter. \n# If using the \"TRACE\" log level, it's better to log into a file \n# using *--log-file*, since it can generate a huge stream of logs.\n#\n# log-level = \"debug\"\nlog-level = \"info\";\n\n# Set the log file.\n# If *--log-file* is never specified, logs will be written to stderr. \n# Otherwise, logs will to written to the given file, though some of the early \n# logs might still be written to the stderr. \n# When setting this option from the config file, it is recommended to use an absolute path.\n#\n# log-file = '/path/to/your/log/file'\n\n# Show all X errors (for debugging)\n# show-all-xerrors = false\n\n# Write process ID to a file.\n# write-pid-path = '/path/to/your/log/file'\n\n# Window type settings\n# \n# 'WINDOW_TYPE' is one of the 15 window types defined in EWMH standard: \n#     \"unknown\", \"desktop\", \"dock\", \"toolbar\", \"menu\", \"utility\", \n#     \"splash\", \"dialog\", \"normal\", \"dropdown_menu\", \"popup_menu\", \n#     \"tooltip\", \"notification\", \"combo\", and \"dnd\".\n# \n# Following per window-type options are available: ::\n# \n#   fade, shadow:::\n#     Controls window-type-specific shadow and fade settings.\n# \n#   opacity:::\n#     Controls default opacity of the window type.\n# \n#   focus:::\n#     Controls whether the window of this type is to be always considered focused. \n#     (By default, all window types except \"normal\" and \"dialog\" has this on.)\n# \n#   full-shadow:::\n#     Controls whether shadow is drawn under the parts of the window that you \n#     normally won't be able to see. Useful when the window has parts of it \n#     transparent, and you want shadows in those areas.\n# \n#   redir-ignore:::\n#     Controls whether this type of windows should cause screen to become \n#     redirected again after been unredirected. If you have unredir-if-possible\n#     set, and doesn't want certain window to cause unnecessary screen redirection, \n#     you can set this to `true`.\n#\nwintypes:\n{\n  normal = { fade = false; shadow = false; }\n  tooltip = { fade = true; shadow = true; opacity = 0.75; focus = true; full-shadow = false; };\n  dock = { shadow = false; }\n  dnd = { shadow = false; }\n  popup_menu = { opacity = 0.8; }\n  dropdown_menu = { opacity = 0.8; }\n};\n", "\n", "spacefm", "*?", "  \"100:class_g *? = 'Alacritty'\",\n", "class_g", "#################################\n#          Animations           #\n#################################\n# requires https://github.com/jonaburg/picom\n# (These are also the default values)       \ntransition-length = 200\ntransition-pow-x = 0.1\ntransition-pow-y = 0.1\ntransition-pow-w = 0.1\ntransition-pow-h = 0.1\nsize-transition = true\n\n\n#################################\n#             Corners           #\n#################################\n# requires: https://github.com/sdhand/compton or https://github.com/jonaburg/picom\ncorner-radius = 4.0;\nrounded-corners-exclude = [\n  #\"window_type = 'normal'\",\n  \"class_g = 'awesome'\",\n  \"class_g = 'URxvt'\",\n  \"class_g = 'XTerm'\",\n  \"class_g = 'kitty'\",\n  \"class_g = 'Alacritty'\",\n  \"class_g = 'Polybar'\",\n  \"class_g = 'code-oss'\",\n  #\"class_g = 'TelegramDesktop'\",\n  \"class_g = 'firefox'\",\n  \"class_g = 'Thunderbird'\"\n];\nround-borders = 1;\nround-borders-exclude = [\n  #\"class_g = 'TelegramDesktop'\",\n];\n\n#################################\n#             Shadows           #\n#################################\n\n\n# Enabled client-side shadows on windows. Note desktop windows \n# (windows with '_NET_WM_WINDOW_TYPE_DESKTOP') never get shadow, \n# unless explicitly requested using the wintypes option.\n#\n# shadow = false\nshadow = true;\n\n# The blur radius for shadows, in pixels. (defaults to 12)\n# shadow-radius = 12\nshadow-radius = 7;\n\n# The opacity of shadows. (0.0 - 1.0, defaults to 0.75)\n# shadow-opacity = .75\n\n# The left offset for shadows, in pixels. (defaults to -15)\n# shadow-offset-x = -15\nshadow-offset-x = -7;\n\n# The top offset for shadows, in pixels. (defaults to -15)\n# shadow-offset-y = -15\nshadow-offset-y = -7;\n\n# Avoid drawing shadows on dock/panel windows. This option is deprecated,\n# you should use the *wintypes* option in your config file instead.\n#\n# no-dock-shadow = false\n\n# Don't draw shadows on drag-and-drop windows. This option is deprecated, \n# you should use the *wintypes* option in your config file instead.\n#\n# no-dnd-shadow = false\n\n# Red color value of shadow (0.0 - 1.0, defaults to 0).\n# shadow-red = 0\n\n# Green color value of shadow (0.0 - 1.0, defaults to 0).\n# shadow-green = 0\n\n# Blue color value of shadow (0.0 - 1.0, defaults to 0).\n# shadow-blue = 0\n\n# Do not paint shadows on shaped windows. Note shaped windows \n# here means windows setting its shape through X Shape extension. \n# Those using ARGB background is beyond our control. \n# Deprecated, use \n#   shadow-exclude = 'bounding_shaped'\n# or \n#   shadow-exclude = 'bounding_shaped && !rounded_corners'\n# instead.\n#\n# shadow-ignore-shaped = ''\n\n# Specify a list of conditions of windows that should have no shadow.\n#\n# examples:\n#   shadow-exclude = \"n:e:Notification\";\n#\n# shadow-exclude = []\nshadow-exclude = [\n  \"name = 'Notification'\",\n  \"class_g = 'Conky'\",\n  \"class_g ?= 'Notify-osd'\",\n  \"class_g = 'Cairo-clock'\",\n  \"class_g = 'slop'\",\n  \"class_g = 'Polybar'\",\n  \"_GTK_FRAME_EXTENTS@:c\"\n];\n\n# Specify a X geometry that describes the region in which shadow should not\n# be painted in, such as a dock window region. Use \n#    shadow-exclude-reg = \"x10+0+0\"\n# for example, if the 10 pixels on the bottom of the screen should not have shadows painted on.\n#\n# shadow-exclude-reg = \"\" \n\n# Crop shadow of a window fully on a particular Xinerama screen to the screen.\n# xinerama-shadow-crop = false\n\n\n#################################\n#           Fading              #\n#################################\n\n\n# Fade windows in/out when opening/closing and when opacity changes,\n#  unless no-fading-openclose is used.\n# fading = false\nfading = true;\n\n# Opacity change between steps while fading in. (0.01 - 1.0, defaults to 0.028)\n# fade-in-step = 0.028\nfade-in-step = 0.03;\n\n# Opacity change between steps while fading out. (0.01 - 1.0, defaults to 0.03)\n# fade-out-step = 0.03\nfade-out-step = 0.03;\n\n# The time between steps in fade step, in milliseconds. (> 0, defaults to 10)\n# fade-delta = 10\n\n# Specify a list of conditions of windows that should not be faded.\n# don't need this, we disable fading for all normal windows with wintypes: {}\nfade-exclude = [\n  \"class_g = 'slop'\"   # maim\n]\n\n# Do not fade on window open/close.\n# no-fading-openclose = false\n\n# Do not fade destroyed ARGB windows with WM frame. Workaround of bugs in Openbox, Fluxbox, etc.\n# no-fading-destroyed-argb = false\n\n\n#################################\n#   Transparency / Opacity      #\n#################################\n\n\n# Opacity of inactive windows. (0.1 - 1.0, defaults to 1.0)\n# inactive-opacity = 1\ninactive-opacity = 0.8;\n\n# Opacity of window titlebars and borders. (0.1 - 1.0, disabled by default)\n# frame-opacity = 1.0\nframe-opacity = 0.7;\n\n# Default opacity for dropdown menus and popup menus. (0.0 - 1.0, defaults to 1.0)\n# menu-opacity = 1.0 \n# menu-opacity is depreciated use dropdown-menu and popup-menu instead.\n\n#If using these 2 below change their values in line 510 & 511 aswell\npopup_menu = { opacity = 0.8; }\ndropdown_menu = { opacity = 0.8; }\n\n\n# Let inactive opacity set by -i override the '_NET_WM_OPACITY' values of windows.\n# inactive-opacity-override = true\ninactive-opacity-override = false;\n\n# Default opacity for active windows. (0.0 - 1.0, defaults to 1.0)\nactive-opacity = 1.0;\n\n# Dim inactive windows. (0.0 - 1.0, defaults to 0.0)\n# inactive-dim = 0.0\n\n# Specify a list of conditions of windows that should always be considered focused.\n# focus-exclude = []\nfocus-exclude = [\n#  \"class_g = 'Cairo-clock'\",\n  \"class_g = 'Bar'\",                    # lemonbar\n  \"class_g = 'slop'\"                    # maim\n];\n\n# Use fixed inactive dim value, instead of adjusting according to window opacity.\n# inactive-dim-fixed = 1.0\n\n# Specify a list of opacity rules, in the format `PERCENT:PATTERN`, \n# like `50:name *= \"Firefox\"`. picom-trans is recommended over this. \n# Note we don't make any guarantee about possible conflicts with other \n# programs that set '_NET_WM_WINDOW_OPACITY' on frame or client windows.\n# example:\n#    opacity-rule = [ \"80:class_g = 'URxvt'\" ];\n#\n# opacity-rule = []\nopacity-rule = [\n  \"80:class_g     = 'Bar'\",             # lemonbar\n  \"100:class_g    = 'slop'\",            # maim\n  \"100:class_g    = 'XTerm'\",\n  \"100:class_g    = 'URxvt'\",\n  \"100:class_g    = 'kitty'\",\n  \"100:class_g *? = 'Alacritty'\",\n  \n  \"100:class_g *? = 'Polybar'\",\n  \"94:class_g  *? = 'pycharm'\",\n  \"94:class_g  *? = 'spacefm'\",\n  \"100:class_g    = 'code-oss'\",\n  \"100:class_g    = 'Meld'\",\n  \"70:class_g     = 'TelegramDesktop'\",\n  \"90:class_g     = 'Joplin'\",\n  \"100:class_g    = 'firefox'\",\n  \"100:class_g    = 'Thunderbird'\"\n];\n\n\n#################################\n#     Background-Blurring       #\n#################################\n\n\n# Parameters for background blurring, see the *BLUR* section for more information.\n# blur-method = \n# blur-size = 12\n#\n# blur-deviation = false\n\n# Blur background of semi-transparent / ARGB windows. \n# Bad in performance, with driver-dependent behavior. \n# The name of the switch may change without prior notifications.\n#\n# blur-background = true;\n\n# Blur background of windows when the window frame is not opaque. \n# Implies:\n#    blur-background \n# Bad in performance, with driver-dependent behavior. The name may change.\n#\n# blur-background-frame = false;\n\n\n# Use fixed blur strength rather than adjusting according to window opacity.\n# blur-background-fixed = false;\n\n\n# Specify the blur convolution kernel, with the following format:\n# example:\n#   blur-kern = \"5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1\";\n#\n# blur-kern = ''\n# blur-kern = \"3x3box\";\n\nblur: {\n  # requires: https://github.com/ibhagwan/picom\n  method = \"kawase\";\n  #method = \"kernel\";\n  strength = 0;\n  # deviation = 1.0;\n  # kernel = \"11x11gaussian\";\n  background = false;\n  background-frame = false;\n  background-fixed = false;\n  kern = \"3x3box\";\n}\n\n# Exclude conditions for background blur.\nblur-background-exclude = [\n  \"window_type = 'dock'\",\n  \"window_type = 'desktop'\",\n  \"class_g = 'URxvt'\",\n  \"class_g = 'polybar'\",\n  \"class_g = 'easystroke'\",\n  #\n  # prevents picom from blurring the background\n  # when taking selection screenshot with `main`\n  # https://github.com/naelstrof/maim/issues/130\n  \"class_g = 'slop'\",\n  \"_GTK_FRAME_EXTENTS@:c\"\n];\n\n\n#################################\n#       General Settings        #\n#################################\n\n# Daemonize process. Fork to background after initialization. Causes issues with certain (badly-written) drivers.\n# daemon = false\n\n# Specify the backend to use: `xrender`, `glx`, or `xr_glx_hybrid`.\n# `xrender` is the default one.\n#\nexperimental-backends = true;\nbackend = \"glx\";\n#backend = \"xrender\";\n\n\n# Enable/disable VSync.\n# vsync = false\nvsync = true\n\n# Enable remote control via D-Bus. See the *D-BUS API* section below for more details.\n# dbus = false\n\n# Try to detect WM windows (a non-override-redirect window with no \n# child that has 'WM_STATE') and mark them as active.\n#\n# mark-wmwin-focused = false\nmark-wmwin-focused = true;\n\n# Mark override-redirect windows that doesn't have a child window with 'WM_STATE' focused.\n# mark-ovredir-focused = false\nmark-ovredir-focused = true;\n\n# Try to detect windows with rounded corners and don't consider them \n# shaped windows. The accuracy is not very high, unfortunately.\n#\n# detect-rounded-corners = false\ndetect-rounded-corners = true;\n\n# Detect '_NET_WM_OPACITY' on client windows, useful for window managers\n# not passing '_NET_WM_OPACITY' of client windows to frame windows.\n#\n# detect-client-opacity = false\ndetect-client-opacity = true;\n\n# Specify refresh rate of the screen. If not specified or 0, picom will \n# try detecting this with X RandR extension.\n#\nrefresh-rate = 60\n# refresh-rate = 0\n\n# Limit picom to repaint at most once every 1 / 'refresh_rate' second to \n# boost performance. This should not be used with \n#   vsync drm/opengl/opengl-oml\n# as they essentially does sw-opti's job already, \n# unless you wish to specify a lower refresh rate than the actual value.\n#\n# sw-opti = \n\n# Use EWMH '_NET_ACTIVE_WINDOW' to determine currently focused window, \n# rather than listening to 'FocusIn'/'FocusOut' event. Might have more accuracy, \n# provided that the WM supports it.\n#\n# use-ewmh-active-win = false\n\n# Unredirect all windows if a full-screen opaque window is detected, \n# to maximize performance for full-screen windows. Known to cause flickering \n# when redirecting/unredirecting windows. paint-on-overlay may make the flickering less obvious.\n#\n# unredir-if-possible = false\n\n# Delay before unredirecting the window, in milliseconds. Defaults to 0.\n# unredir-if-possible-delay = 0\n\n# Conditions of windows that shouldn't be considered full-screen for unredirecting screen.\n# unredir-if-possible-exclude = []\n\n# Use 'WM_TRANSIENT_FOR' to group windows, and consider windows \n# in the same group focused at the same time.\n#\n# detect-transient = false\ndetect-transient = true\n\n# Use 'WM_CLIENT_LEADER' to group windows, and consider windows in the same \n# group focused at the same time. 'WM_TRANSIENT_FOR' has higher priority if \n# detect-transient is enabled, too.\n#\n# detect-client-leader = false\ndetect-client-leader = true\n\n# Resize damaged region by a specific number of pixels. \n# A positive value enlarges it while a negative one shrinks it. \n# If the value is positive, those additional pixels will not be actually painted \n# to screen, only used in blur calculation, and such. (Due to technical limitations, \n# with use-damage, those pixels will still be incorrectly painted to screen.) \n# Primarily used to fix the line corruption issues of blur, \n# in which case you should use the blur radius value here \n# (e.g. with a 3x3 kernel, you should use `--resize-damage 1`, \n# with a 5x5 one you use `--resize-damage 2`, and so on). \n# May or may not work with *--glx-no-stencil*. Shrinking doesn't function correctly.\n#\n# resize-damage = 1\n\n# Specify a list of conditions of windows that should be painted with inverted color. \n# Resource-hogging, and is not well tested.\n#\n# invert-color-include = [pcmanfm]\n\n# GLX backend: Avoid using stencil buffer, useful if you don't have a stencil buffer. \n# Might cause incorrect opacity when rendering transparent content (but never \n# practically happened) and may not work with blur-background. \n# My tests show a 15% performance boost. Recommended.\n#\n# glx-no-stencil = false\n\n# GLX backend: Avoid rebinding pixmap on window damage. \n# Probably could improve performance on rapid window content changes, \n# but is known to break things on some drivers (LLVMpipe, xf86-video-intel, etc.).\n# Recommended if it works.\n#\n# glx-no-rebind-pixmap = false\n\n# Disable the use of damage information. \n# This cause the whole screen to be redrawn everytime, instead of the part of the screen\n# has actually changed. Potentially degrades the performance, but might fix some artifacts.\n# The opposing option is use-damage\n#\n# no-use-damage = false\n#use-damage = true (Causing Weird Black semi opaque rectangles when terminal is opened)\n#Changing use-damage to false fixes the problem\nuse-damage = false\n\n# Use X Sync fence to sync clients' draw calls, to make sure all draw \n# calls are finished before picom starts drawing. Needed on nvidia-drivers \n# with GLX backend for some users.\n#\n# xrender-sync-fence = false\n\n# GLX backend: Use specified GLSL fragment shader for rendering window contents. \n# See `compton-default-fshader-win.glsl` and `compton-fake-transparency-fshader-win.glsl` \n# in the source tree for examples.\n#\n# glx-fshader-win = ''\n\n# Force all windows to be painted with blending. Useful if you \n# have a glx-fshader-win that could turn opaque pixels transparent.\n#\n# force-win-blend = false\n\n# Do not use EWMH to detect fullscreen windows. \n# Reverts to checking if a window is fullscreen based only on its size and coordinates.\n#\n# no-ewmh-fullscreen = false\n\n# Dimming bright windows so their brightness doesn't exceed this set value. \n# Brightness of a window is estimated by averaging all pixels in the window, \n# so this could comes with a performance hit. \n# Setting this to 1.0 disables this behaviour. Requires --use-damage to be disabled. (default: 1.0)\n#\n# max-brightness = 1.0\n\n# Make transparent windows clip other windows like non-transparent windows do,\n# instead of blending on top of them.\n#\n# transparent-clipping = false\n\n# Set the log level. Possible values are:\n#  \"trace\", \"debug\", \"info\", \"warn\", \"error\"\n# in increasing level of importance. Case doesn't matter. \n# If using the \"TRACE\" log level, it's better to log into a file \n# using *--log-file*, since it can generate a huge stream of logs.\n#\n# log-level = \"debug\"\nlog-level = \"info\";\n\n# Set the log file.\n# If *--log-file* is never specified, logs will be written to stderr. \n# Otherwise, logs will to written to the given file, though some of the early \n# logs might still be written to the stderr. \n# When setting this option from the config file, it is recommended to use an absolute path.\n#\n# log-file = '/path/to/your/log/file'\n\n# Show all X errors (for debugging)\n# show-all-xerrors = false\n\n# Write process ID to a file.\n# write-pid-path = '/path/to/your/log/file'\n\n# Window type settings\n# \n# 'WINDOW_TYPE' is one of the 15 window types defined in EWMH standard: \n#     \"unknown\", \"desktop\", \"dock\", \"toolbar\", \"menu\", \"utility\", \n#     \"splash\", \"dialog\", \"normal\", \"dropdown_menu\", \"popup_menu\", \n#     \"tooltip\", \"notification\", \"combo\", and \"dnd\".\n# \n# Following per window-type options are available: ::\n# \n#   fade, shadow:::\n#     Controls window-type-specific shadow and fade settings.\n# \n#   opacity:::\n#     Controls default opacity of the window type.\n# \n#   focus:::\n#     Controls whether the window of this type is to be always considered focused. \n#     (By default, all window types except \"normal\" and \"dialog\" has this on.)\n# \n#   full-shadow:::\n#     Controls whether shadow is drawn under the parts of the window that you \n#     normally won't be able to see. Useful when the window has parts of it \n#     transparent, and you want shadows in those areas.\n# \n#   redir-ignore:::\n#     Controls whether this type of windows should cause screen to become \n#     redirected again after been unredirected. If you have unredir-if-possible\n#     set, and doesn't want certain window to cause unnecessary screen redirection, \n#     you can set this to `true`.\n#\nwintypes:\n{\n  normal = { fade = false; shadow = false; }\n  tooltip = { fade = true; shadow = true; opacity = 0.75; focus = true; full-shadow = false; };\n  dock = { shadow = false; }\n  dnd = { shadow = false; }\n  popup_menu = { opacity = 0.8; }\n  dropdown_menu = { opacity = 0.8; }\n};\n", "Alacritty", "  \"100:class_g *? = 'firefox'\",\n", "https://github.com/ibhagwan/picom", "https://github.com/jonaburg/picom", "https://github.com/naelstrof/maim/issues/130", "https://github.com/sdhand/compton", "#################################\n#          Animations           #\n#################################\n# requires https://github.com/jonaburg/picom\n# (These are also the default values)       \ntransition-length = 200\ntransition-pow-x = 0.1\ntransition-pow-y = 0.1\ntransition-pow-w = 0.1\ntransition-pow-h = 0.1\nsize-transition = true\n\n\n#################################\n#             Corners           #\n#################################\n# requires: https://github.com/sdhand/compton or https://github.com/jonaburg/picom\ncorner-radius = 4.0;\nrounded-corners-exclude = [\n  #\"window_type = 'normal'\",\n  \"class_g = 'awesome'\",\n  \"class_g = 'URxvt'\",\n  \"class_g = 'XTerm'\",\n  \"class_g = 'kitty'\",\n  \"class_g = 'Alacritty'\",\n  \"class_g = 'Polybar'\",\n  \"class_g = 'code-oss'\",\n  #\"class_g = 'TelegramDesktop'\",\n  \"class_g = 'firefox'\",\n  \"class_g = 'Thunderbird'\"\n];\nround-borders = 1;\nround-borders-exclude = [\n  #\"class_g = 'TelegramDesktop'\",\n];\n\n#################################\n#             Shadows           #\n#################################\n\n\n# Enabled client-side shadows on windows. Note desktop windows \n# (windows with '_NET_WM_WINDOW_TYPE_DESKTOP') never get shadow, \n# unless explicitly requested using the wintypes option.\n#\n# shadow = false\nshadow = true;\n\n# The blur radius for shadows, in pixels. (defaults to 12)\n# shadow-radius = 12\nshadow-radius = 7;\n\n# The opacity of shadows. (0.0 - 1.0, defaults to 0.75)\n# shadow-opacity = .75\n\n# The left offset for shadows, in pixels. (defaults to -15)\n# shadow-offset-x = -15\nshadow-offset-x = -7;\n\n# The top offset for shadows, in pixels. (defaults to -15)\n# shadow-offset-y = -15\nshadow-offset-y = -7;\n\n# Avoid drawing shadows on dock/panel windows. This option is deprecated,\n# you should use the *wintypes* option in your config file instead.\n#\n# no-dock-shadow = false\n\n# Don't draw shadows on drag-and-drop windows. This option is deprecated, \n# you should use the *wintypes* option in your config file instead.\n#\n# no-dnd-shadow = false\n\n# Red color value of shadow (0.0 - 1.0, defaults to 0).\n# shadow-red = 0\n\n# Green color value of shadow (0.0 - 1.0, defaults to 0).\n# shadow-green = 0\n\n# Blue color value of shadow (0.0 - 1.0, defaults to 0).\n# shadow-blue = 0\n\n# Do not paint shadows on shaped windows. Note shaped windows \n# here means windows setting its shape through X Shape extension. \n# Those using ARGB background is beyond our control. \n# Deprecated, use \n#   shadow-exclude = 'bounding_shaped'\n# or \n#   shadow-exclude = 'bounding_shaped && !rounded_corners'\n# instead.\n#\n# shadow-ignore-shaped = ''\n\n# Specify a list of conditions of windows that should have no shadow.\n#\n# examples:\n#   shadow-exclude = \"n:e:Notification\";\n#\n# shadow-exclude = []\nshadow-exclude = [\n  \"name = 'Notification'\",\n  \"class_g = 'Conky'\",\n  \"class_g ?= 'Notify-osd'\",\n  \"class_g = 'Cairo-clock'\",\n  \"class_g = 'slop'\",\n  \"class_g = 'Polybar'\",\n  \"_GTK_FRAME_EXTENTS@:c\"\n];\n\n# Specify a X geometry that describes the region in which shadow should not\n# be painted in, such as a dock window region. Use \n#    shadow-exclude-reg = \"x10+0+0\"\n# for example, if the 10 pixels on the bottom of the screen should not have shadows painted on.\n#\n# shadow-exclude-reg = \"\" \n\n# Crop shadow of a window fully on a particular Xinerama screen to the screen.\n# xinerama-shadow-crop = false\n\n\n#################################\n#           Fading              #\n#################################\n\n\n# Fade windows in/out when opening/closing and when opacity changes,\n#  unless no-fading-openclose is used.\n# fading = false\nfading = true;\n\n# Opacity change between steps while fading in. (0.01 - 1.0, defaults to 0.028)\n# fade-in-step = 0.028\nfade-in-step = 0.03;\n\n# Opacity change between steps while fading out. (0.01 - 1.0, defaults to 0.03)\n# fade-out-step = 0.03\nfade-out-step = 0.03;\n\n# The time between steps in fade step, in milliseconds. (> 0, defaults to 10)\n# fade-delta = 10\n\n# Specify a list of conditions of windows that should not be faded.\n# don't need this, we disable fading for all normal windows with wintypes: {}\nfade-exclude = [\n  \"class_g = 'slop'\"   # maim\n]\n\n# Do not fade on window open/close.\n# no-fading-openclose = false\n\n# Do not fade destroyed ARGB windows with WM frame. Workaround of bugs in Openbox, Fluxbox, etc.\n# no-fading-destroyed-argb = false\n\n\n#################################\n#   Transparency / Opacity      #\n#################################\n\n\n# Opacity of inactive windows. (0.1 - 1.0, defaults to 1.0)\n# inactive-opacity = 1\ninactive-opacity = 0.8;\n\n# Opacity of window titlebars and borders. (0.1 - 1.0, disabled by default)\n# frame-opacity = 1.0\nframe-opacity = 0.7;\n\n# Default opacity for dropdown menus and popup menus. (0.0 - 1.0, defaults to 1.0)\n# menu-opacity = 1.0 \n# menu-opacity is depreciated use dropdown-menu and popup-menu instead.\n\n#If using these 2 below change their values in line 510 & 511 aswell\npopup_menu = { opacity = 0.8; }\ndropdown_menu = { opacity = 0.8; }\n\n\n# Let inactive opacity set by -i override the '_NET_WM_OPACITY' values of windows.\n# inactive-opacity-override = true\ninactive-opacity-override = false;\n\n# Default opacity for active windows. (0.0 - 1.0, defaults to 1.0)\nactive-opacity = 1.0;\n\n# Dim inactive windows. (0.0 - 1.0, defaults to 0.0)\n# inactive-dim = 0.0\n\n# Specify a list of conditions of windows that should always be considered focused.\n# focus-exclude = []\nfocus-exclude = [\n#  \"class_g = 'Cairo-clock'\",\n  \"class_g = 'Bar'\",                    # lemonbar\n  \"class_g = 'slop'\"                    # maim\n];\n\n# Use fixed inactive dim value, instead of adjusting according to window opacity.\n# inactive-dim-fixed = 1.0\n\n# Specify a list of opacity rules, in the format `PERCENT:PATTERN`, \n# like `50:name *= \"Firefox\"`. picom-trans is recommended over this. \n# Note we don't make any guarantee about possible conflicts with other \n# programs that set '_NET_WM_WINDOW_OPACITY' on frame or client windows.\n# example:\n#    opacity-rule = [ \"80:class_g = 'URxvt'\" ];\n#\n# opacity-rule = []\nopacity-rule = [\n  \"80:class_g     = 'Bar'\",             # lemonbar\n  \"100:class_g    = 'slop'\",            # maim\n  \"100:class_g    = 'XTerm'\",\n  \"100:class_g    = 'URxvt'\",\n  \"100:class_g    = 'kitty'\",\n  \"100:class_g *? = 'Alacritty'\",\n  \"100:class_g *? = 'firefox'\",\n  \n  \"100:class_g *? = 'Polybar'\",\n  \"94:class_g  *? = 'pycharm'\",\n  \"94:class_g  *? = 'spacefm'\",\n  \"100:class_g    = 'code-oss'\",\n  \"100:class_g    = 'Meld'\",\n  \"70:class_g     = 'TelegramDesktop'\",\n  \"90:class_g     = 'Joplin'\",\n  \"100:class_g    = 'firefox'\",\n  \"100:class_g    = 'Thunderbird'\"\n];\n\n\n#################################\n#     Background-Blurring       #\n#################################\n\n\n# Parameters for background blurring, see the *BLUR* section for more information.\n# blur-method = \n# blur-size = 12\n#\n# blur-deviation = false\n\n# Blur background of semi-transparent / ARGB windows. \n# Bad in performance, with driver-dependent behavior. \n# The name of the switch may change without prior notifications.\n#\n# blur-background = true;\n\n# Blur background of windows when the window frame is not opaque. \n# Implies:\n#    blur-background \n# Bad in performance, with driver-dependent behavior. The name may change.\n#\n# blur-background-frame = false;\n\n\n# Use fixed blur strength rather than adjusting according to window opacity.\n# blur-background-fixed = false;\n\n\n# Specify the blur convolution kernel, with the following format:\n# example:\n#   blur-kern = \"5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1\";\n#\n# blur-kern = ''\n# blur-kern = \"3x3box\";\n\nblur: {\n  # requires: https://github.com/ibhagwan/picom\n  method = \"kawase\";\n  #method = \"kernel\";\n  strength = 0;\n  # deviation = 1.0;\n  # kernel = \"11x11gaussian\";\n  background = false;\n  background-frame = false;\n  background-fixed = false;\n  kern = \"3x3box\";\n}\n\n# Exclude conditions for background blur.\nblur-background-exclude = [\n  \"window_type = 'dock'\",\n  \"window_type = 'desktop'\",\n  \"class_g = 'URxvt'\",\n  \"class_g = 'polybar'\",\n  \"class_g = 'easystroke'\",\n  #\n  # prevents picom from blurring the background\n  # when taking selection screenshot with `main`\n  # https://github.com/naelstrof/maim/issues/130\n  \"class_g = 'slop'\",\n  \"_GTK_FRAME_EXTENTS@:c\"\n];\n\n\n#################################\n#       General Settings        #\n#################################\n\n# Daemonize process. Fork to background after initialization. Causes issues with certain (badly-written) drivers.\n# daemon = false\n\n# Specify the backend to use: `xrender`, `glx`, or `xr_glx_hybrid`.\n# `xrender` is the default one.\n#\nexperimental-backends = true;\nbackend = \"glx\";\n#backend = \"xrender\";\n\n\n# Enable/disable VSync.\n# vsync = false\nvsync = true\n\n# Enable remote control via D-Bus. See the *D-BUS API* section below for more details.\n# dbus = false\n\n# Try to detect WM windows (a non-override-redirect window with no \n# child that has 'WM_STATE') and mark them as active.\n#\n# mark-wmwin-focused = false\nmark-wmwin-focused = true;\n\n# Mark override-redirect windows that doesn't have a child window with 'WM_STATE' focused.\n# mark-ovredir-focused = false\nmark-ovredir-focused = true;\n\n# Try to detect windows with rounded corners and don't consider them \n# shaped windows. The accuracy is not very high, unfortunately.\n#\n# detect-rounded-corners = false\ndetect-rounded-corners = true;\n\n# Detect '_NET_WM_OPACITY' on client windows, useful for window managers\n# not passing '_NET_WM_OPACITY' of client windows to frame windows.\n#\n# detect-client-opacity = false\ndetect-client-opacity = true;\n\n# Specify refresh rate of the screen. If not specified or 0, picom will \n# try detecting this with X RandR extension.\n#\nrefresh-rate = 60\n# refresh-rate = 0\n\n# Limit picom to repaint at most once every 1 / 'refresh_rate' second to \n# boost performance. This should not be used with \n#   vsync drm/opengl/opengl-oml\n# as they essentially does sw-opti's job already, \n# unless you wish to specify a lower refresh rate than the actual value.\n#\n# sw-opti = \n\n# Use EWMH '_NET_ACTIVE_WINDOW' to determine currently focused window, \n# rather than listening to 'FocusIn'/'FocusOut' event. Might have more accuracy, \n# provided that the WM supports it.\n#\n# use-ewmh-active-win = false\n\n# Unredirect all windows if a full-screen opaque window is detected, \n# to maximize performance for full-screen windows. Known to cause flickering \n# when redirecting/unredirecting windows. paint-on-overlay may make the flickering less obvious.\n#\n# unredir-if-possible = false\n\n# Delay before unredirecting the window, in milliseconds. Defaults to 0.\n# unredir-if-possible-delay = 0\n\n# Conditions of windows that shouldn't be considered full-screen for unredirecting screen.\n# unredir-if-possible-exclude = []\n\n# Use 'WM_TRANSIENT_FOR' to group windows, and consider windows \n# in the same group focused at the same time.\n#\n# detect-transient = false\ndetect-transient = true\n\n# Use 'WM_CLIENT_LEADER' to group windows, and consider windows in the same \n# group focused at the same time. 'WM_TRANSIENT_FOR' has higher priority if \n# detect-transient is enabled, too.\n#\n# detect-client-leader = false\ndetect-client-leader = true\n\n# Resize damaged region by a specific number of pixels. \n# A positive value enlarges it while a negative one shrinks it. \n# If the value is positive, those additional pixels will not be actually painted \n# to screen, only used in blur calculation, and such. (Due to technical limitations, \n# with use-damage, those pixels will still be incorrectly painted to screen.) \n# Primarily used to fix the line corruption issues of blur, \n# in which case you should use the blur radius value here \n# (e.g. with a 3x3 kernel, you should use `--resize-damage 1`, \n# with a 5x5 one you use `--resize-damage 2`, and so on). \n# May or may not work with *--glx-no-stencil*. Shrinking doesn't function correctly.\n#\n# resize-damage = 1\n\n# Specify a list of conditions of windows that should be painted with inverted color. \n# Resource-hogging, and is not well tested.\n#\n# invert-color-include = [pcmanfm]\n\n# GLX backend: Avoid using stencil buffer, useful if you don't have a stencil buffer. \n# Might cause incorrect opacity when rendering transparent content (but never \n# practically happened) and may not work with blur-background. \n# My tests show a 15% performance boost. Recommended.\n#\n# glx-no-stencil = false\n\n# GLX backend: Avoid rebinding pixmap on window damage. \n# Probably could improve performance on rapid window content changes, \n# but is known to break things on some drivers (LLVMpipe, xf86-video-intel, etc.).\n# Recommended if it works.\n#\n# glx-no-rebind-pixmap = false\n\n# Disable the use of damage information. \n# This cause the whole screen to be redrawn everytime, instead of the part of the screen\n# has actually changed. Potentially degrades the performance, but might fix some artifacts.\n# The opposing option is use-damage\n#\n# no-use-damage = false\n#use-damage = true (Causing Weird Black semi opaque rectangles when terminal is opened)\n#Changing use-damage to false fixes the problem\nuse-damage = false\n\n# Use X Sync fence to sync clients' draw calls, to make sure all draw \n# calls are finished before picom starts drawing. Needed on nvidia-drivers \n# with GLX backend for some users.\n#\n# xrender-sync-fence = false\n\n# GLX backend: Use specified GLSL fragment shader for rendering window contents. \n# See `compton-default-fshader-win.glsl` and `compton-fake-transparency-fshader-win.glsl` \n# in the source tree for examples.\n#\n# glx-fshader-win = ''\n\n# Force all windows to be painted with blending. Useful if you \n# have a glx-fshader-win that could turn opaque pixels transparent.\n#\n# force-win-blend = false\n\n# Do not use EWMH to detect fullscreen windows. \n# Reverts to checking if a window is fullscreen based only on its size and coordinates.\n#\n# no-ewmh-fullscreen = false\n\n# Dimming bright windows so their brightness doesn't exceed this set value. \n# Brightness of a window is estimated by averaging all pixels in the window, \n# so this could comes with a performance hit. \n# Setting this to 1.0 disables this behaviour. Requires --use-damage to be disabled. (default: 1.0)\n#\n# max-brightness = 1.0\n\n# Make transparent windows clip other windows like non-transparent windows do,\n# instead of blending on top of them.\n#\n# transparent-clipping = false\n\n# Set the log level. Possible values are:\n#  \"trace\", \"debug\", \"info\", \"warn\", \"error\"\n# in increasing level of importance. Case doesn't matter. \n# If using the \"TRACE\" log level, it's better to log into a file \n# using *--log-file*, since it can generate a huge stream of logs.\n#\n# log-level = \"debug\"\nlog-level = \"info\";\n\n# Set the log file.\n# If *--log-file* is never specified, logs will be written to stderr. \n# Otherwise, logs will to written to the given file, though some of the early \n# logs might still be written to the stderr. \n# When setting this option from the config file, it is recommended to use an absolute path.\n#\n# log-file = '/path/to/your/log/file'\n\n# Show all X errors (for debugging)\n# show-all-xerrors = false\n\n# Write process ID to a file.\n# write-pid-path = '/path/to/your/log/file'\n\n# Window type settings\n# \n# 'WINDOW_TYPE' is one of the 15 window types defined in EWMH standard: \n#     \"unknown\", \"desktop\", \"dock\", \"toolbar\", \"menu\", \"utility\", \n#     \"splash\", \"dialog\", \"normal\", \"dropdown_menu\", \"popup_menu\", \n#     \"tooltip\", \"notification\", \"combo\", and \"dnd\".\n# \n# Following per window-type options are available: ::\n# \n#   fade, shadow:::\n#     Controls window-type-specific shadow and fade settings.\n# \n#   opacity:::\n#     Controls default opacity of the window type.\n# \n#   focus:::\n#     Controls whether the window of this type is to be always considered focused. \n#     (By default, all window types except \"normal\" and \"dialog\" has this on.)\n# \n#   full-shadow:::\n#     Controls whether shadow is drawn under the parts of the window that you \n#     normally won't be able to see. Useful when the window has parts of it \n#     transparent, and you want shadows in those areas.\n# \n#   redir-ignore:::\n#     Controls whether this type of windows should cause screen to become \n#     redirected again after been unredirected. If you have unredir-if-possible\n#     set, and doesn't want certain window to cause unnecessary screen redirection, \n#     you can set this to `true`.\n#\nwintypes:\n{\n  normal = { fade = false; shadow = false; }\n  tooltip = { fade = true; shadow = true; opacity = 0.75; focus = true; full-shadow = false; };\n  dock = { shadow = false; }\n  dnd = { shadow = false; }\n  popup_menu = { opacity = 0.8; }\n  dropdown_menu = { opacity = 0.8; }\n};\n", "  \n", "Polybar", "firefox", "94", "0", "92", "100", "3", "512", "nvidia", "       ", "Nvidia_3", "N", "pavucontrol", "device", ".local/share/icons/GoVi_gtk-Icons/apps/64", "preferences/32", " '/home/govi/.local/share/icons/GoVi_gtk-Icons/preferences/32/preferences-desktop-sound.svg'", "/pulseaudio.png'", " '/home/govi", "settings", "sound ", "logo", "ile.org", "site:docs.qtile.org", "qtile spawn window in some coordinates", "firewalld", "systemctl enable firewalld\n", "config", "firewall-config\n", "vim", "s specification\n##\n## Groups of commands.  Often used to group related commands together.\n# Cmnd_Alias    PROCESSES = /usr/bin/nice, /bin/kill, /usr/bin/renice, \\\n#                           /usr/bin/pkill, /usr/bin/top\n# Cmnd_Alias    REBOOT = /sbin/halt, /sbin/reboot, /sbin/poweroff\n\n##\n## Defaults specification\n##\n## You may wish to keep some ", "visudo", "visudo: no editor found (editor path = /usr/bin/vi)", "sudo nvim /etc/sudoers", "user names, uids, Unix groups,\n## or netgroups.", "## or netgroups.\n", " && clea", "\"nvim\"", "$EDITOR", "ln -s /usr/bin/vim /usr/bin/vi", "ln -s /usr/bin/nvim /usr/bin/vi", "sudo ln -s /usr/bin/nvim /usr/bin/vi", "su\n", "id username", "~/.config/polybar/scri", "Shell", "Bash", "s", "~/Scripts/Shell/Utils/", "~/.config/polybar/scripts", "nitrogen --set-zoom-fill --random ~/Im\u00e1genes/Wallpapers/Desktop --save", "sudo pacman -S cronie", "systemctl enable --now cronie.service", "crontab -l", "[\\e[0;31m\\]", "[\\e", "[\\e[m\\]", "[1;37m\\]", "[0;31m\\]", "qtile", "linux qtile", "chsh -s /bin/zsh $USER", "zsh", "sudo pacman -S zsh zsh-autosuggestions zsh-syntax-highlighting", " '/usr/share/applications/timeshift-gtk.desktop'", "sudo pacman -S firewalld", "systemctl enable firewalld", "firewall-config"], "CLIPBOARD": ["https://github.com/yannishuber/pass-ulauncher", " '/home/govi/Scripts/Shell/Utils/Home_GIT.sh'", "widget.Image(filename='~/Pictures/GoVi-Theme/GoVi_gtk/GoVi_gtk-Icons/panel/audio-volume-zero-panel.svg',\n                             mouse_callbacks={'Button1': lambda qtile: qtile.cmd_spawn('pavucontrol')}),", " '/home/govi/.local/share/icons/GoVi_gtk-Icons/apps/64/nvidia.png'", "feh --bg-max --randomize ~/.wallpaper/* &", " --no-fehbg", "feh --bg-fill --no-fehbg --randomize ~/Pictures/Desktop/* &", "/home/govi/Scripts/Shell/Autostart", "# Autostart\nexport PATH=$PATH:$HOME/Scripts/Shell/Autostart/\n\nnvidia_led.sh &\n\nnvidia-settings --load-config-only &\n\nnm-applet --sm-disable &\n\npicom -cCGb &\n\nsetxkbmap -layout es &\n\nfeh --bg-fill --no-fehbg --randomize ~/Pictures/Desktop/* &\n\npolybar.sh &\n\neasystroke &\n\nimwheel.sh &\n\ncairo-dock &\n\nexec qtile", "/home/govi/Proyects/Github/GoVi-Arch_Linux/set_backround.sh\n", " '/home/govi/Scripts/Shell/Utils/set_backround.sh'", "  \"100:class_g     = 'Polybar'\",\n", "spacefm", "  \"100:class_g    = 'spacefm'\",\n", "  \"94:class_g *?  = 'spacefm'\",\n", "  \"100:class_g *? = 'Alacritty'\",\n", "  \"100:class_g *? = 'firefox'\",\n", "/home/govi/Pictures/Icons/System/Png/nvidia3.png\n", "preferences/32", " '/home/govi/.local/share/icons/GoVi_gtk-Icons/preferences/32/preferences-desktop-sound.svg'", "qtile spawn window in some coordinates", "visudo: no editor found (editor path = /usr/bin/vi)", "visudo", "\"nvim\"", "ln -s /usr/bin/vim /usr/bin/vi", "ln -s /usr/bin/nvim /usr/bin/vi", "sudo ln -s /usr/bin/nvim /usr/bin/vi", "Bash", "Shell", "~/Scripts/Shell/Utils/", "[\\e[0;31m\\]", "[1;37m\\]", "chsh -s /bin/zsh $USER", "sudo pacman -S zsh zsh-autosuggestions zsh-syntax-highlighting", " '/usr/share/applications/timeshift-gtk.desktop'", "systemctl enable firewalld"]}
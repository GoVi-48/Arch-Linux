{"id":92718,"xmlId":"BashSupport","name":"BashSupport","description":"Bash language support for 2020.1 and earlier.\n    <br>\n<b>Note to all users:</b><br>\n Prompted by changes in the JetBrains default plugin offerings, a slow transition away from BashSupport has been <a href=\"https://www.bashsupport.com/news/bashsupport-future/\">started in July 2019</a>. Since it cannot build on top of the new JetBrains Shell plugin, it requires too much maintenance effort for what it adds. So after 10 years of development, <b>BashSupport has been retired</b>.\n\n<br><br>Due to this, BashSupport will not be ported to version 2020.2 and later. Existing versions stay available, so you can still use BashSupport with JetBrains IDEs 2020.1. Alternatively, to use equivalent features (<a href=\"https://www.bashsupport.com/plugin-comparison/\">and more</a>) with your JetBrains IDE, you can switch to the newly developed <a href=\"https://www.bashsupport.com/pro/\">BashSupport Pro</a>.\n\n<br><br>BashSupport Pro is <a href=\"https://www.bashsupport.com/pro/pricing/\">attractively priced</a> starting at 2.30 USD per month. To sweeten the transition:\n<ol>\n    <li>There is a 30-day <b>free trial</b>.</li>\n    <li>You get a <b>25% discount</b> on licences purchased before Oct 1, 2020. <a href=\"https://www.bashsupport.com/bashsupport-thanks/\">Use coupon code <b>BASHSUPPORT_THANKS</b>.</a></li>\n    <li>You can <b>re-use</b> your run configurations.</li>\n</ol>\n    ","tags":["Languages"],"vendor":"Joachim Ansorg","version":"1.7.19.201","notes":"\n        \n\n        <b>Changes in version 1.7.19:</b>\n        <ul>\n           <li>Fixed exception \"java.lang.NoSuchMethodError: com.intellij.util.net.IOExceptionDialog.showErrorDialog\"</li>\n           <li>Fixed one case of \"IndexNotReadyException\"</li>\n           <li>Retirement announcement :(</li>\n        </ul><br>\n\n        <b>Changes in version 1.7.18:</b>\n        <ul>\n          <li>2020.1: Hopefully the final fix for exception \"Non-idempotent computation\"</li>\n        </ul><br>\n\n        <b>Changes in version 1.7.17:</b>\n        <ul>\n          <li>2020.1: A possible fix for exception \"Non-idempotent computation\"</li>\n        </ul><br>\n\n        <b>Changes in version 1.7.16:</b>\n        <ul>\n          <li>Compatibility with 2020.1 eap</li>\n          <li>Added a <a href=\"https://www.bashsupport.com/plugin-comparison/\">link to open a comparison</a> to the notification about conflicting plugins</li>\n        </ul><br>\n\n        <b>Previous changes of version 1.7.x:</b>\n        <ul>\n          <li>Compatibility fixes for 2019.3</li>\n          <li>Fix a potential memory leak in an inspection</li>\n          <li>#771: Line continuations not properly highlighted and parsed</li>\n          <li>#758: Completions were often showing \"Invalid\" as label after typing in the editor</li>\n          <li>#656: Fix multiline highlighting of todo/fixme comments</li>\n          <li>#662: Enter handler to insert a line continuation in Bash files</li>\n          <li>#764: Variables declared in included files were not always properly resolved.</li>\n          <li>#735: Variables which were first declared in a loop were not properly resolved, renamed, and highlighted</li>\n          <li>#696: Highlight comments in backtick commands</li>\n          <li>#658: Fix broken highlighting of heredocs.</li>\n          <li>#682: Parse heredocs in pipeline commands</li>\n          <li>#753: Fix NPE in BashRunConfiguration.suggestedName()</li>\n          <li>#761: IOException while scanning path</li>\n          <li>Fix exception about IndexPatternBuilder incorrect Bash comment ranges</li>\n          <li>A notification is displayed for 192.x and later if both BashSupport and JetBrains Shell are enabled at the same time. It allows to disable one of the plugins.</li>\n          <li>Support IntelliJ 2019.2 EAP</li>\n          <li>Change fallback configuration of heredoc and backtick highlighting to avoid an exception when the Shell plugin is enabled</li>\n          <li>Maintenance release on the EAP channel</li>\n          <li>Add internal documentation for ulimit command (contributed by dzieciolowski)</li>\n          <li>#458: Support shopt -s extglob syntax</li>\n          <li>#687: compound command () incorrectly highlighted. Removed highlighting of subshells, highlighting of contained elements must not be overridden. For example, comments inside of subshells must still be displayed as comments.</li>\n          <li>Removed override of highlighting inside of backticks `echo hello $world`. Now elements inside of backticks are highlighted as in subshell and group commands. Previously multi-line backticks weren't properly shown, for example.</li>\n         <li>#694: Fix ConcurrentModificationException</li>\n         <li>#677: Exception in idea.log of the latest CLion EAP</li>\n         <li>#671: Ignore/log exception while scanning $PATH, e.g. while a system update is active.</li>\n         <li>#668: Support `readarray` as alias of `mapfile` (contributed by niknetniko)</li>\n         <li>#664: fix 'replace with double brackets' quick fix (contributed by bjansen)</li>\n         <li>#657: Exception when the arithmetic operator &gt;&gt; was used</li>\n         <li>#655: Improve performance of parsing and reference resolving. Disable the folding of variable values by default as this is too slow for large files. You can enable this in the settings if you want to keep this behavior.</li>\n         <li>#660: Add support for EAP 191.x builds </li>\n         <li>#634: Handle invalid paths in include file inspection</li>\n         <li>#636: handle parse errors in interpreter paths in run configurations</li>\n         <li>#645: fix NPE in keyword handling</li>\n            <li>Versions 1.7.0 to 1.7.2 enabled the new project interpreter by default. This was breaking old run configurations. This version now disabled the project interpreter by default and tries to keep run configurations created with 1.7.x working. We're sorry for any inconvenience which was caused by this.</li>\n            <li>#624: Don't enable the project interpreter by default to keep run configurations created by 1.6.13 and earlier working. BashSupport tries to keep run configs modified by 1.7.0-1.7.2 working.</li>\n            <li>#625: java.nio.file.AccessDeniedException at startup</li>\n            <li>#627: Fix exception when code folding was called when indexing</li>\n            <li>Don't show files in command completion which don't match *.exe or *.bat</li>\n            <li>#622: Fix wrong size of script icons</li>\n            <li>Handle errors parsing elements of $PATH</li>\n            <li>Fix handling of interpreter path when creating new run configurations</li>\n             <li>Feature: New icons (contributed by nosovae-dev)</li>\n             <li>Feature: Show path next to path command completion items</li>\n             <li>Feature: Add folding for variables (contributed by nosovae-dev)</li>\n             <li>Feature: Add inspection to check, whether function name is in lower camel case (contribued by dheid)</li>\n             <li>Feature: Add inspection and quickfix to detect double brackets (contribued by dheid)</li>\n             <li>Feature: #478: New setting for project wide interpreter path</li>\n             <li>Feature: #482: Make new Bash files executable for the current user by default</li>\n             <li>Feature: #477: Support for .bashrc and custom file extensions</li>\n             <li>Improve handling of local variables in functions</li>\n             <li>Variables declared by local -r are now treated as read-only (contributed by nosovae-dev)</li>\n             <li>#318: Codefolding support (contributed by nosovae-dev)</li>\n             <li>#400: Heredoc after command &amp; is not parsed (contributed by nosovae-dev)</li>\n             <li>#487: Use native path for shell script and working directory for new Bash run configurations</li>\n             <li>#518: printf -v \"${var}\" flagged as Error</li>\n             <li>#519: local -a arrays not recognized (contributed by nosovae-dev)</li>\n             <li>#521: control+j does not offer for loop solutions (contributed by t0r0X)</li>\n             <li>#522: Not a valid identifier in shell script with Bash functions with dash (contributed by nosovae-dev)</li>\n             <li>#526: Documentation wasn't shown when the caret was positioned at the end of a command</li>\n             <li>#540: Tilde (~) not resolved correctly in file paths</li>\n             <li>#545: Don't parse \"in\" in \"read in\" as keyword, but as variable name</li>\n             <li>#546: Color schemes: \"Inherit values from\" has no effect when checked (contributed by nosovae-dev)</li>\n             <li>#551: Add default value TERM=xterm-256color when running a Bash script if there's not value defined in the run configuration</li>\n             <li>#558: Enable execute button of Bash run configuration even when IntelliJ is indexing</li>\n             <li>#566: Fix slow startup of the IDE when BashSupport is installed</li>\n             <li>#568: variable incorrectly flagged as read-only (contributed by nosovae-dev)</li>\n             <li>#572: False-positive unresolved variables using names matching prefix parameter expansion (contributed by nosovae-dev)</li>\n             <li>#599: Values passed to \"export -f\" were not resolved to the function definition</li>\n             <li>#611: Work around \"class BashIcons not found\" exception which is (probably) caused by a bug in IntelliJ</li>\n             <li>Add action to create a report on the currently detected file type</li>\n             <li>Add kotlin language for development plugin (contributed by nosovae-dev)</li>\n        </ul>\n        <br>\n\n        <br>\n        <a href=\"https://github.com/jansorg/BashSupport/blob/master/Changelog.md\">Full changelog</a>\n        \n        \n    ","dependencies":["com.intellij.modules.lang"],"optionalDependencies":["org.jetbrains.plugins.terminal","org.intellij.intelliLang"],"since":"201.0","until":"201.*","sourceCodeUrl":"https://github.com/BashSupport/BashSupport","size":1743776,"url":"https://www.bashsupport.com/"}